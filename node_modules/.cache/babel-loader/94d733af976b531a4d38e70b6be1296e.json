{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\LoginPage.jsx\";\nimport { IonContent, IonPage, IonRow, IonCol, IonInput, IonList, IonItem, IonButton, IonGrid, IonImg, IonToast, IonTitle } from \"@ionic/react\";\nimport React from \"react\";\nimport \"./LoginPage.css\";\nimport img1 from \"../images/synkd_logo_white.JPG\";\nimport fbimg from \"../images/fb3.png\";\nimport gimg from \"../images/g3.png\";\nimport { Plugins } from \"@capacitor/core\";\nimport \"@codetrix-studio/capacitor-google-auth\";\nimport { withRouter } from \"react-router\";\nvar fieldTitle = \"\";\nvar app1 = \"Facebook\";\nvar app2 = \"Google\";\nvar username = \"\";\nvar homeid = \"\";\nconst INITIAL_STATE = {\n  loggedIn: false\n};\nconst GINITIAL_STATE = {};\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      userID: \"\",\n      name: \"\",\n      displayname: \"\",\n      email: \"\",\n      picture: \"\",\n      homeid: \"\",\n      ...INITIAL_STATE,\n      ...GINITIAL_STATE\n    };\n  }\n  handleToast() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n  componentDidMount() {\n    username = JSON.parse(localStorage.getItem(\"Name\"));\n    if (username) {\n      fieldTitle = \"Login with your registered Email ID\";\n      this.handleToast();\n    }\n  }\n  refreshPage() {\n    window.location.reload();\n  }\n  SignUpFn() {\n    this.props.history.push({\n      pathname: \"/RegisterPage\"\n    });\n  }\n  async fbSignIin() {\n    const FACEBOOK_PERMISSIONS = [\"public_profile\", \"email\"];\n    const result = await Plugins.FacebookLogin.login({\n      permissions: FACEBOOK_PERMISSIONS\n    });\n    console.info(\"result\", result);\n    if (result && result.accessToken) {\n      console.info(\"token\", result.accessToken);\n      localStorage.setItem(\"UserId\", JSON.stringify(result.accessToken.userId));\n      localStorage.setItem(\"token\", JSON.stringify(result.accessToken.token));\n      localStorage.setItem(\"SocialApp\", JSON.stringify(app1));\n      this.props.history.push({\n        pathname: \"/AddHomePage\",\n        state: {\n          token: result.accessToken.token,\n          userId: result.accessToken.userId\n        }\n      });\n    }\n    console.log(result);\n  }\n  async GsignIn() {\n    const result = await Plugins.GoogleAuth.signIn();\n    console.info(\"result\", result);\n    localStorage.setItem(\"Name\", JSON.stringify(result.displayName));\n    localStorage.setItem(\"token\", JSON.stringify(result.authentication.idToken));\n    localStorage.setItem(\"SocialApp\", JSON.stringify(app2));\n    if (result) {\n      this.props.history.push({\n        pathname: \"/AddHomePage\"\n      });\n    }\n    console.log(this.state);\n  }\n  SignInSubmit() {\n    let data = this.state;\n    if (!this.state.username && !this.state.password) {\n      fieldTitle = \"Username and password fields cannot be empty\";\n      this.handleToast();\n    } else {\n      if (!this.state.username) {\n        fieldTitle = \"Email ID field cannot be empty\";\n        this.handleToast();\n      }\n      if (!this.state.password) {\n        fieldTitle = \"Password field cannot be empty\";\n        this.handleToast();\n      }\n      if (this.state.username && this.state.password) {\n        var regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\n        var result = regex.test(this.state.username);\n        if (result === false) {\n          fieldTitle = \"Please Enter a valid Email ID\";\n          this.handleToast();\n        }\n      }\n    }\n    console.log(data);\n    if (result === true) {\n      fetch(\"https://clickademy.in/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(result => {\n        result.json().then(resp => {\n          if (resp.message === \"Authentication Successful\") {\n            /*On success, setting the user name in the local storage*/\n            console.log(resp);\n            console.log(resp.userid);\n            let obj = this.state.username;\n            if (resp.homeid !== null) {\n              if (resp.homeid.length > 0) {\n                localStorage.setItem(\"homeid\", JSON.stringify(resp.homeid[0]));\n                localStorage.setItem(\"username\", JSON.stringify(obj));\n                localStorage.setItem(\"firstname\", JSON.stringify(resp.firstname));\n                localStorage.setItem(\"token\", JSON.stringify(resp.token));\n                localStorage.setItem(\"userid\", JSON.stringify(resp.userid));\n                this.props.history.push({\n                  pathname: \"/MainPage\"\n                });\n              } else {\n                localStorage.setItem(\"username\", JSON.stringify(obj));\n                localStorage.setItem(\"firstname\", JSON.stringify(resp.firstname));\n                localStorage.setItem(\"token\", JSON.stringify(resp.token));\n                localStorage.setItem(\"userid\", JSON.stringify(resp.userid));\n                this.props.history.push({\n                  pathname: \"/AddHomePage\"\n                });\n              }\n            }\n            //this.props.history.push({ pathname: \"/AddHomePage\" });\n            this.refreshPage();\n          } else {\n            fieldTitle = \"Email ID or password is incorrect\";\n            this.handleToast();\n          }\n        }).catch(error => {\n          console.log(\"Invalid email or password\", error);\n        });\n      });\n    }\n  }\n  roomsExist() {\n    var auth_token = JSON.parse(localStorage.getItem(\"token\"));\n    var data = this.state;\n    fetch(\"https://clickademy.in/home/retrieve-rooms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + auth_token\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      result.json().then(resp => {\n        if (resp.rooms != null) {\n          console.log(resp);\n          /*On success, setting the user name in the local storage*/\n          //this.props.history.push({ pathname: \"/PHomePage\" });\n          //this.refreshPage();\n          this.props.history.push({\n            pathname: \"/MainPage\"\n          });\n        } else {\n          this.props.history.push({\n            pathname: \"/EHomePage\"\n          });\n          this.refreshPage();\n        }\n      }).catch(error => {\n        console.log(\"No rooms Available\", error);\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(IonPage, {\n      className: \"ion_page\"\n    }, /*#__PURE__*/React.createElement(IonContent, {\n      className: \"ion-content\"\n    }, /*#__PURE__*/React.createElement(IonList, {\n      className: \"ion_list\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"my-img\",\n      className: \"mx-auto rounded-circle Synkd_Logo\",\n      src: img1\n    })), /*#__PURE__*/React.createElement(IonList, {\n      className: \"ion_list\"\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      className: \"email_field\"\n    }, /*#__PURE__*/React.createElement(IonInput, {\n      className: \"ion_input1\",\n      placeholder: \"Email ID\",\n      inputMode: \"email\",\n      maxlength: \"70\",\n      required: \"true\",\n      value: this.state.username,\n      onIonChange: data => {\n        this.setState({\n          username: data.target.value\n        });\n      }\n    })), /*#__PURE__*/React.createElement(IonItem, {\n      className: \"pwd_field\"\n    }, /*#__PURE__*/React.createElement(IonInput, {\n      className: \"ion_input1\",\n      placeholder: \"Password\",\n      type: \"password\",\n      inputMode: \"text\",\n      maxlength: \"50\",\n      required: \"true\",\n      value: this.state.password,\n      onIonChange: data => {\n        this.setState({\n          password: data.target.value\n        });\n      }\n    })), /*#__PURE__*/React.createElement(IonItem, {\n      lines: \"none\",\n      className: \"loginbtn_item\"\n    }, /*#__PURE__*/React.createElement(IonButton, {\n      className: \"login_btn\",\n      buttonType: \"button\",\n      shape: \"round\",\n      size: \"default\",\n      onClick: () => {\n        this.SignInSubmit();\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(IonItem, {\n      lines: \"none\",\n      className: \"ion_item\"\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      onClick: () => {\n        this.SignUpFn();\n      }\n    }, \"New User? Sign Up\"))), /*#__PURE__*/React.createElement(IonToast, {\n      isOpen: this.state.show,\n      onDidDismiss: () => this.handleToast(),\n      message: fieldTitle,\n      duration: 3000\n    })));\n  }\n}\nexport default withRouter(LoginPage);","map":{"version":3,"names":["IonContent","IonPage","IonRow","IonCol","IonInput","IonList","IonItem","IonButton","IonGrid","IonImg","IonToast","IonTitle","React","img1","fbimg","gimg","Plugins","withRouter","fieldTitle","app1","app2","username","homeid","INITIAL_STATE","loggedIn","GINITIAL_STATE","LoginPage","Component","constructor","props","state","password","isLoggedIn","userID","name","displayname","email","picture","handleToast","setState","show","componentDidMount","JSON","parse","localStorage","getItem","refreshPage","window","location","reload","SignUpFn","history","push","pathname","fbSignIin","FACEBOOK_PERMISSIONS","result","FacebookLogin","login","permissions","console","info","accessToken","setItem","stringify","userId","token","log","GsignIn","GoogleAuth","signIn","displayName","authentication","idToken","SignInSubmit","data","regex","test","fetch","method","headers","body","then","json","resp","message","userid","obj","length","firstname","catch","error","roomsExist","auth_token","Authorization","rooms","render","target","value"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/LoginPage.jsx"],"sourcesContent":["import {\n  IonContent,\n  IonPage,\n  IonRow,\n  IonCol,\n  IonInput,\n  IonList,\n  IonItem,\n  IonButton,\n  IonGrid,\n  IonImg,\n  IonToast,\n  IonTitle,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport \"./LoginPage.css\";\nimport img1 from \"../images/synkd_logo_white.JPG\";\nimport fbimg from \"../images/fb3.png\";\nimport gimg from \"../images/g3.png\";\nimport { Plugins } from \"@capacitor/core\";\nimport \"@codetrix-studio/capacitor-google-auth\";\nimport { withRouter } from \"react-router\";\n\nvar fieldTitle = \"\";\nvar app1 = \"Facebook\";\nvar app2 = \"Google\";\nvar username = \"\";\nvar homeid = \"\";\n\nconst INITIAL_STATE = {\n  loggedIn: false,\n};\n\nconst GINITIAL_STATE = {};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      userID: \"\",\n      name: \"\",\n      displayname: \"\",\n      email: \"\",\n      picture: \"\",\n      homeid: \"\",\n      ...INITIAL_STATE,\n      ...GINITIAL_STATE,\n    };\n  }\n\n  handleToast() {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  componentDidMount() {\n    username = JSON.parse(localStorage.getItem(\"Name\"));\n    if (username) {\n      fieldTitle = \"Login with your registered Email ID\";\n      this.handleToast();\n    }\n  }\n\n  refreshPage() {\n    window.location.reload();\n  }\n\n  SignUpFn() {\n    this.props.history.push({ pathname: \"/RegisterPage\" });\n  }\n\n  async fbSignIin() {\n    const FACEBOOK_PERMISSIONS = [\"public_profile\", \"email\"];\n\n    const result = await Plugins.FacebookLogin.login({\n      permissions: FACEBOOK_PERMISSIONS,\n    });\n    console.info(\"result\", result);\n    if (result && result.accessToken) {\n      console.info(\"token\", result.accessToken);\n      localStorage.setItem(\"UserId\", JSON.stringify(result.accessToken.userId));\n      localStorage.setItem(\"token\", JSON.stringify(result.accessToken.token));\n      localStorage.setItem(\"SocialApp\", JSON.stringify(app1));\n      this.props.history.push({\n        pathname: \"/AddHomePage\",\n        state: {\n          token: result.accessToken.token,\n          userId: result.accessToken.userId,\n        },\n      });\n    }\n\n    console.log(result);\n  }\n\n  async GsignIn() {\n    const result = await Plugins.GoogleAuth.signIn();\n    console.info(\"result\", result);\n    localStorage.setItem(\"Name\", JSON.stringify(result.displayName));\n    localStorage.setItem(\n      \"token\",\n      JSON.stringify(result.authentication.idToken)\n    );\n    localStorage.setItem(\"SocialApp\", JSON.stringify(app2));\n    if (result) {\n      this.props.history.push({ pathname: \"/AddHomePage\" });\n    }\n\n    console.log(this.state);\n  }\n\n  SignInSubmit() {\n    let data = this.state;\n    if (!this.state.username && !this.state.password) {\n      fieldTitle = \"Username and password fields cannot be empty\";\n      this.handleToast();\n    } else {\n      if (!this.state.username) {\n        fieldTitle = \"Email ID field cannot be empty\";\n        this.handleToast();\n      }\n      if (!this.state.password) {\n        fieldTitle = \"Password field cannot be empty\";\n        this.handleToast();\n      }\n      if (this.state.username && this.state.password) {\n        var regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\n        var result = regex.test(this.state.username);\n        if (result === false) {\n          fieldTitle = \"Please Enter a valid Email ID\";\n          this.handleToast();\n        }\n      }\n    }\n    console.log(data);\n    if (result === true) {\n      fetch(\"https://clickademy.in/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }).then((result) => {\n        result\n          .json()\n          .then((resp) => {\n            if (resp.message === \"Authentication Successful\") {\n              /*On success, setting the user name in the local storage*/\n              console.log(resp);\n              console.log(resp.userid);\n              let obj = this.state.username;\n              \n             \n\n              if (resp.homeid !== null) {\n                if(resp.homeid.length > 0){\n                  localStorage.setItem(\"homeid\", JSON.stringify(resp.homeid[0]));\n                  localStorage.setItem(\"username\", JSON.stringify(obj));\n                  localStorage.setItem(\"firstname\", JSON.stringify(resp.firstname));\n                  localStorage.setItem(\"token\", JSON.stringify(resp.token));\n                  localStorage.setItem(\"userid\", JSON.stringify(resp.userid));\n\n                  this.props.history.push({ pathname: \"/MainPage\" });\n                } else {\n                  localStorage.setItem(\"username\", JSON.stringify(obj));\n                  localStorage.setItem(\"firstname\", JSON.stringify(resp.firstname));\n                  localStorage.setItem(\"token\", JSON.stringify(resp.token));\n                  localStorage.setItem(\"userid\", JSON.stringify(resp.userid));\n\n                  this.props.history.push({ pathname: \"/AddHomePage\" });\n                }\n                \n              } \n              //this.props.history.push({ pathname: \"/AddHomePage\" });\n              this.refreshPage();\n            } else {\n              fieldTitle = \"Email ID or password is incorrect\";\n              this.handleToast();\n            }\n          })\n          .catch((error) => {\n            console.log(\"Invalid email or password\", error);\n          });\n      });\n    }\n  }\n\n  roomsExist() {\n    var auth_token = JSON.parse(localStorage.getItem(\"token\"));\n    var data = this.state;\n    fetch(\"https://clickademy.in/home/retrieve-rooms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + auth_token,\n      },\n      body: JSON.stringify(data),\n    }).then((result) => {\n      result\n        .json()\n        .then((resp) => {\n          if (resp.rooms != null) {\n            console.log(resp);\n            /*On success, setting the user name in the local storage*/\n            //this.props.history.push({ pathname: \"/PHomePage\" });\n            //this.refreshPage();\n            this.props.history.push({ pathname: \"/MainPage\" });\n          } else {\n            this.props.history.push({ pathname: \"/EHomePage\" });\n            this.refreshPage();\n          }\n        })\n        .catch((error) => {\n          console.log(\"No rooms Available\", error);\n        });\n    });\n  }\n\n  render() {\n    return (\n      <IonPage className=\"ion_page\">\n        <IonContent className=\"ion-content\">\n          <IonList className=\"ion_list\">\n            <img\n              alt=\"my-img\"\n              className=\"mx-auto rounded-circle Synkd_Logo\"\n              src={img1}\n            ></img>\n          </IonList>\n          <IonList className=\"ion_list\">\n            <IonItem className=\"email_field\">\n              <IonInput\n                className=\"ion_input1\"\n                placeholder=\"Email ID\"\n                inputMode=\"email\"\n                maxlength=\"70\"\n                required=\"true\"\n                value={this.state.username}\n                onIonChange={(data) => {\n                  this.setState({ username: data.target.value });\n                }}\n              ></IonInput>\n            </IonItem>\n            <IonItem className=\"pwd_field\">\n              <IonInput\n                className=\"ion_input1\"\n                placeholder=\"Password\"\n                type=\"password\"\n                inputMode=\"text\"\n                maxlength=\"50\"\n                required=\"true\"\n                value={this.state.password}\n                onIonChange={(data) => {\n                  this.setState({ password: data.target.value });\n                }}\n              ></IonInput>\n            </IonItem>\n            <IonItem lines=\"none\" className=\"loginbtn_item\">\n              <IonButton\n                className=\"login_btn\"\n                buttonType=\"button\"\n                shape=\"round\"\n                size=\"default\"\n                onClick={() => {\n                  this.SignInSubmit();\n                }}\n              >Login\n              </IonButton>\n            </IonItem>\n            <IonItem lines=\"none\" className=\"ion_item\">\n              <IonTitle\n                onClick={() => {\n                  this.SignUpFn();\n                }}\n              >\n                New User? Sign Up\n              </IonTitle>\n            </IonItem>\n          </IonList>\n          {/* <IonGrid className=\"login_grid\">\n            <IonRow>\n              <IonCol size=\"4\" className=\"col_line\">\n                <hr\n                  style={{\n                    color: \"grey\",\n                    backgroundColor: \"grey\",\n                    height: 1,\n                  }}\n                ></hr>\n              </IonCol>\n              <IonCol className=\"col_or\" size=\"1.7\" style={{ color: \"black\" }}>\n                OR\n              </IonCol>\n              <IonCol size=\"4\" className=\"col_line2\">\n                <hr\n                  style={{\n                    color: \"grey\",\n                    backgroundColor: \"grey\",\n                    height: 1,\n                  }}\n                ></hr>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n          <div className=\"social_btns\">\n            <IonButton\n              fill=\"clear\"\n              className=\"facebookbtn ion-no-padding\"\n              onClick={() => {\n                this.fbSignIin();\n              }}\n            >\n              <IonImg src={fbimg}></IonImg>\n            </IonButton>\n            <IonButton\n              fill=\"clear\"\n              className=\"googlebtn ion-no-padding\"\n              onClick={() => this.GsignIn()}\n            >\n              <IonImg src={gimg}></IonImg>\n            </IonButton>\n          </div> */}\n          <IonToast\n            isOpen={this.state.show}\n            onDidDismiss={() => this.handleToast()}\n            message={fieldTitle}\n            duration={3000}\n          />\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\nexport default withRouter(LoginPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}