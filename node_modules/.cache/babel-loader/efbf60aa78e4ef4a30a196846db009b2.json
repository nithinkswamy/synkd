{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { WebPlugin } from '@capacitor/core';\n// @ts-ignore\nimport config from '../../../../../capacitor.config.json';\nexport class GoogleAuthWeb extends WebPlugin {\n  get webConfigured() {\n    return document.getElementsByName('google-signin-client_id').length > 0;\n  }\n  constructor() {\n    super({\n      name: 'GoogleAuth',\n      platforms: ['web']\n    });\n    if (!this.webConfigured) return;\n    this.gapiLoaded = new Promise(resolve => {\n      // HACK: Relying on window object, can't get property in gapi.load callback\n      window.gapiResolve = resolve;\n      this.initialize();\n    });\n    this.addUserChangeListener();\n  }\n  initialize() {\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.defer = true;\n    script.async = true;\n    script.onload = this.platformJsLoaded;\n    script.src = 'https://apis.google.com/js/platform.js';\n    head.appendChild(script);\n  }\n  platformJsLoaded() {\n    gapi.load('auth2', () => {\n      const clientConfig = {\n        client_id: document.getElementsByName('google-signin-client_id')[0].content\n      };\n      if (config.plugins.GoogleAuth != null && config.plugins.GoogleAuth.scopes != null) {\n        clientConfig.scope = config.plugins.GoogleAuth.scopes.join(' ');\n      }\n      gapi.auth2.init(clientConfig);\n      window.gapiResolve();\n    });\n  }\n  signIn() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          var serverAuthCode;\n          var needsOfflineAccess = false;\n          try {\n            needsOfflineAccess = config.plugins.GoogleAuth.serverClientId != null;\n          } catch (_a) {}\n          if (needsOfflineAccess) {\n            const offlineAccessResponse = yield gapi.auth2.getAuthInstance().grantOfflineAccess();\n            serverAuthCode = offlineAccessResponse.code;\n          } else {\n            yield gapi.auth2.getAuthInstance().signIn();\n          }\n          const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n          if (needsOfflineAccess) {\n            // HACK: AuthResponse is null if we don't do this when using grantOfflineAccess\n            yield googleUser.reloadAuthResponse();\n          }\n          const user = this.getUserFrom(googleUser);\n          user.serverAuthCode = serverAuthCode;\n          resolve(user);\n        } catch (error) {\n          reject(error);\n        }\n      }));\n    });\n  }\n  refresh() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const authResponse = yield gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n      return {\n        accessToken: authResponse.access_token,\n        idToken: authResponse.id_token\n      };\n    });\n  }\n  signOut() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return gapi.auth2.getAuthInstance().signOut();\n    });\n  }\n  addUserChangeListener() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.gapiLoaded;\n      gapi.auth2.getAuthInstance().currentUser.listen(googleUser => {\n        this.notifyListeners(\"userChange\", googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n      });\n    });\n  }\n  getUserFrom(googleUser) {\n    const user = {};\n    const profile = googleUser.getBasicProfile();\n    user.email = profile.getEmail();\n    user.familyName = profile.getFamilyName();\n    user.givenName = profile.getGivenName();\n    user.id = profile.getId();\n    user.imageUrl = profile.getImageUrl();\n    user.name = profile.getName();\n    const authResponse = googleUser.getAuthResponse(true);\n    user.authentication = {\n      accessToken: authResponse.access_token,\n      idToken: authResponse.id_token\n    };\n    return user;\n  }\n}\nconst GoogleAuth = new GoogleAuthWeb();\nexport { GoogleAuth };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(GoogleAuth);","map":{"version":3,"sources":["../../src/web.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { WebPlugin } from '@capacitor/core';\n// @ts-ignore\nimport config from '../../../../../capacitor.config.json';\nexport class GoogleAuthWeb extends WebPlugin {\n    get webConfigured() {\n        return document.getElementsByName('google-signin-client_id').length > 0;\n    }\n    constructor() {\n        super({\n            name: 'GoogleAuth',\n            platforms: ['web']\n        });\n        if (!this.webConfigured)\n            return;\n        this.gapiLoaded = new Promise(resolve => {\n            // HACK: Relying on window object, can't get property in gapi.load callback\n            window.gapiResolve = resolve;\n            this.initialize();\n        });\n        this.addUserChangeListener();\n    }\n    initialize() {\n        var head = document.getElementsByTagName('head')[0];\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.defer = true;\n        script.async = true;\n        script.onload = this.platformJsLoaded;\n        script.src = 'https://apis.google.com/js/platform.js';\n        head.appendChild(script);\n    }\n    platformJsLoaded() {\n        gapi.load('auth2', () => {\n            const clientConfig = {\n                client_id: document.getElementsByName('google-signin-client_id')[0].content\n            };\n            if (config.plugins.GoogleAuth != null && config.plugins.GoogleAuth.scopes != null) {\n                clientConfig.scope = config.plugins.GoogleAuth.scopes.join(' ');\n            }\n            gapi.auth2.init(clientConfig);\n            window.gapiResolve();\n        });\n    }\n    signIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var serverAuthCode;\n                    var needsOfflineAccess = false;\n                    try {\n                        needsOfflineAccess = config.plugins.GoogleAuth.serverClientId != null;\n                    }\n                    catch (_a) {\n                    }\n                    if (needsOfflineAccess) {\n                        const offlineAccessResponse = yield gapi.auth2.getAuthInstance().grantOfflineAccess();\n                        serverAuthCode = offlineAccessResponse.code;\n                    }\n                    else {\n                        yield gapi.auth2.getAuthInstance().signIn();\n                    }\n                    const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n                    if (needsOfflineAccess) {\n                        // HACK: AuthResponse is null if we don't do this when using grantOfflineAccess\n                        yield googleUser.reloadAuthResponse();\n                    }\n                    const user = this.getUserFrom(googleUser);\n                    user.serverAuthCode = serverAuthCode;\n                    resolve(user);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            }));\n        });\n    }\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const authResponse = yield gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n            return {\n                accessToken: authResponse.access_token,\n                idToken: authResponse.id_token\n            };\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return gapi.auth2.getAuthInstance().signOut();\n        });\n    }\n    addUserChangeListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.gapiLoaded;\n            gapi.auth2.getAuthInstance().currentUser.listen(googleUser => {\n                this.notifyListeners(\"userChange\", googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n            });\n        });\n    }\n    getUserFrom(googleUser) {\n        const user = {};\n        const profile = googleUser.getBasicProfile();\n        user.email = profile.getEmail();\n        user.familyName = profile.getFamilyName();\n        user.givenName = profile.getGivenName();\n        user.id = profile.getId();\n        user.imageUrl = profile.getImageUrl();\n        user.name = profile.getName();\n        const authResponse = googleUser.getAuthResponse(true);\n        user.authentication = {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token\n        };\n        return user;\n    }\n}\nconst GoogleAuth = new GoogleAuthWeb();\nexport { GoogleAuth };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(GoogleAuth);\n//# sourceMappingURL=web.js.map"]},"metadata":{},"sourceType":"module"}