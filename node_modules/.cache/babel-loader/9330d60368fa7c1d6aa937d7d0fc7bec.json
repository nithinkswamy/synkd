{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\Groups\\\\GroupsPage.jsx\";\nimport { IonContent, IonHeader, IonToolbar, IonButtons, IonMenuButton, IonTitle, IonModal, IonToast, IonListHeader, IonButton, IonIcon, IonRefresher, IonRefresherContent, IonInput, IonPopover, IonLoading, IonImg } from \"@ionic/react\";\nimport ScriptTag from \"react-script-tag\";\nimport { SOCKETIOHOST, SOCKETIOLIB, createGroup, retrieveSlots } from \"../ServerRequests/globalApi\";\nimport { toggleSlot, getChipMac } from \"../ServerRequests/localApi\";\nimport { addCircle, personCircleSharp } from \"ionicons/icons\";\nimport React from \"react\";\nimport LongPressPopover from \"./UI/LongPressPopover\";\nimport GroupGrid from \"./UI/GroupGrid\";\nimport DisplayIconComponent from \"../MiscUiComponents/DisplayIconComponent\";\nimport IconPicker from \"../MiscUiComponents/IconPicker\";\nimport \"./GroupsPage.css\";\nimport { setTimeout } from \"timers\";\nimport { onSlot, offSlot } from \"../ServerRequests/localApi\";\nimport notFound from \"../../images/device-icons/notFound/notFound.svg\";\nimport { Plugins } from \"@capacitor/core\";\nconst {\n  Network\n} = Plugins;\nvar username = JSON.parse(localStorage.getItem(\"username\"));\nvar localSocket;\nvar createGroupAlert = false;\nvar toastMsg = \"\";\nclass GroupsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = true;\n    this.state = {\n      loading: false,\n      groups: [\"\"],\n      showCreateGroupAlert: createGroupAlert,\n      longPressedGroup: undefined,\n      showAddDeviceAlert: false,\n      showEditGroupModal: false,\n      addSlotToGroup: {},\n      groupname: \"\",\n      showPopover: 0,\n      showIconPickerModal: false,\n      showToast: false,\n      reloadGroups: true,\n      setGroupState: 0,\n      retrievingState: false,\n      networkType: undefined,\n      networkConnected: undefined\n    };\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    if (this.props.properties !== undefined) {\n      this.setState({\n        showCreateGroupAlert: true,\n        addSlotToGroup: {\n          mac: this.props.properties.mac,\n          slotnumber: this.props.properties.slotnumber\n        }\n      });\n    }\n    this.networkStatusSetup();\n  }\n  componentWillUnmount() {\n    try {\n      if (window.socket !== undefined) {\n        window.socket.close();\n      }\n      console.log('Disconnected Sockets.');\n    } catch (err) {\n      console.log(err);\n    }\n    this._isMounted = false;\n  }\n  async networkStatusSetup() {\n    Network.removeAllListeners();\n    Network.addListener('networkStatusChange', status => {\n      this.setState({\n        networkConnected: status.connected,\n        networkType: status.connectionType\n      });\n      console.log('Network status changed ' + status.connectionType);\n    });\n    var logCurrentNetworkStatus = await Network.getStatus();\n    if (logCurrentNetworkStatus !== undefined) {\n      this.setState({\n        networkConnected: logCurrentNetworkStatus.connected,\n        networkType: logCurrentNetworkStatus.connectionType\n      });\n      console.log('Network status: ' + logCurrentNetworkStatus.connectionType);\n    }\n  }\n  refresh(event) {\n    this.setState({\n      reloadGroups: true\n    });\n    setTimeout(() => {\n      event.target.complete();\n    }, 800);\n    this.networkStatusSetup();\n  }\n  cloudSocket() {\n    const script = document.createElement(\"script\");\n    script.innerHTML += \"var socket = io.connect('\" + SOCKETIOHOST + \"');\";\n    script.innerHTML += \"window.socket = socket;\";\n    script.async = true;\n    document.body.appendChild(script);\n    var groups = this.state.groups;\n    if (groups !== undefined) {\n      if (groups.length !== 0) {\n        var macIds = [];\n        console.log(groups);\n        for (var i = 0; i < groups.length; i++) {\n          for (var j = 0; j < groups[i].slots.length; j++) {\n            var contains = false;\n            for (var k = 0; k < macIds.length; k++) {\n              if (macIds[k] === groups[i].slots[j].mac) {\n                contains = true;\n                break;\n              }\n            }\n            if (!contains) {\n              macIds[i] = groups[i].slots[j].mac;\n            }\n          }\n        }\n        for (var l = 0; l < macIds.length; l++) {\n          var macJson = JSON.parse(JSON.stringify({\n            mac: macIds[l]\n          }));\n          window.socket.emit(\"subscribe\", macJson);\n          console.log(\"Socket IO connected, mac:\" + macIds);\n        }\n      }\n    }\n    window.socket.on(\"state\", data => {\n      console.log(\"sio state: \" + data);\n      this.setState({\n        chipstate: data.state,\n        setGroupState: data\n      });\n    });\n  }\n\n  // websocketfn() {\n  //   var groups = this.state.groups;\n\n  //     if(groups !== undefined){\n  //       var macIds = [];\n  //       console.log(groups);\n  //       for(var i=0; i< groups.length; i++){\n  //         for(var j=0; j<groups[i].slots.length; j++){\n  //           var contains = false;\n  //           for(var k=0; k<macIds.length; k++)\n  //           { if(macIds[k]===groups[i].slots[j].mac){contains=true; break;} }\n  //           if(!contains){macIds[i] = groups[i].slots[j].mac; }\n  //         }\n  //       }\n\n  //       for(var l=0; l<macIds.length; l++){\n\n  //         var IP = JSON.parse(localStorage.getItem(macIds[l])).ip;\n  //         localSocket = new WebSocket(\"ws://\"+IP+\":81/\");\n  //         console.log(\"Local IP:\" + IP);\n\n  //         var ctx = this;\n\n  //         localSocket.onmessage = function (evt) {\n\n  //           var type = evt.data.split(\"~\")[0];\n  //           var mac = evt.data.split(\"~\")[1];\n  //           var chipstate = evt.data.split(\"~\")[2];\n\n  //           if(type === \"state\"){\n  //             console.log(\"lws\");\n  //             ctx.setState({setGroupState: mac});\n  //           }\n  //         };\n  //         localSocket.onopen = function (evt) {\n  //           console.log(\"Local WS Open\");\n  //         };\n\n  //         localSocket.onclose = function (evt) {\n  //           console.log(\"Local WS CLosed\");\n  //         };\n\n  //       }\n  //     }\n\n  // }\n\n  handleButtonPress(groupid) {\n    console.log(\"Pressed:\" + groupid);\n    this.buttonPressTimer = setTimeout(() => this.dispPopover(groupid), 500);\n  }\n  dispPopover(groupid) {\n    this.setState(() => ({\n      showPopover: groupid\n    }));\n  }\n  handleButtonRelease() {\n    clearTimeout(this.buttonPressTimer);\n  }\n  handleToast() {\n    this.setState({\n      showToast: !this.state.showToast\n    });\n  }\n  async onButtonClick(groupClicked) {\n    console.log(\"group clicked\" + groupClicked);\n    var slots = groupClicked.slots;\n    var groups = this.state.groups;\n    console.log(groups);\n    console.log(slots);\n    for (var i = 0; i < slots.length; i++) {\n      console.log(slots[i]);\n      for (var j = 0; j < groups.length; j++) {\n        console.log(\"groups[\" + j + \"]: \" + groups[j]._id);\n        console.log(\"Clicked id: \" + JSON.stringify(groupClicked._id));\n        if (groups[j]._id === groupClicked._id) {\n          if (groups[j].state === 2) {\n            this.turnOff(slots[i].slotnumber, slots[i].mac);\n          } else {\n            this.turnOn(slots[i].slotnumber, slots[i].mac);\n          }\n        }\n      }\n    }\n  }\n\n  // async getSlotState(slotnumber, mac){\n\n  //   var ip = JSON.parse(localStorage.getItem(mac)).ip;\n  //   await this.getStateLocally(ip, mac);\n\n  //   var stateInt = parseInt(JSON.parse(localStorage.getItem(mac)).state);\n  //   var slotcount = parseInt(JSON.parse(localStorage.getItem(mac)).slotcount);\n  //   var stateBin = stateInt.toString(2);\n  //   var arr = stateBin.split(\"\").map(Number);\n\n  //     var stateBinArr = [];\n  //     var difference = parseInt(slotcount) - parseInt(arr.length);\n\n  //     for(var i = 0; i < difference; i++){stateBinArr[i] = 0;}\n  //     for(var j = 0; j < arr.length; j++){stateBinArr[j+difference] = arr[j]; }\n\n  //     return stateBinArr[slotnumber-1];\n\n  // }\n\n  // async getStateLocally(ip, mac){\n  //   this.setState({loading: false});\n\n  //       const response = await chipState(ip);\n\n  //       if(response[0] !== undefined){\n\n  //         switch(response[0].status){\n\n  //             case 200:\n  //               var chip = JSON.parse(localStorage.getItem(mac));\n  //               chip.state = response[0].data.state;\n  //               localStorage.setItem(mac, JSON.stringify(chip));\n  //               this.setState({loading: false});\n\n  //               break;\n\n  //               default:\n  //                 console.log(\"Could not get chip state. MAC: \"+mac);\n  //                 this.setState({loading: false});\n\n  //                 break;\n\n  //         }\n  //       }else{\n  //         console.log(\"Could not get chip state. MAC \"+mac);\n  //         this.setState({loading: false});\n\n  //       }\n\n  //  }\n\n  async turnOn(slotnumber, mac) {\n    this.setState({\n      loading: true\n    });\n    console.log(\"Turn On\" + slotnumber + \"MAC\" + mac);\n    // toastMsg = \"Please wait for the group state to reflect here\";\n    // this.setState({showToast: true});\n    var slotnum = slotnumber - 1;\n    var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    const isIPCorrect = await this.verifyMac(mac);\n    if (isIPCorrect) {\n      const response = await onSlot(IP, slotnum);\n      if (response !== undefined) {\n        switch (response[0].status) {\n          case 200 || 302:\n            console.log(\"Turned On slot \" + slotnum + \" via local ws.\");\n            this.setState({\n              loading: false\n            });\n            break;\n          default:\n            console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n            console.log(\"Failed to turn on slot via local ws.\");\n            window.socket.emit(\"turn-on\", {\n              mac: mac,\n              slot: slotnum\n            });\n            window.socket.emit(\"timer-start\", {\n              mac: mac,\n              slot: slotnum\n            });\n            this.setState({\n              loading: false\n            });\n            break;\n        }\n      } else {\n        console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n        try {\n          window.socket.emit(\"turn-on\", {\n            mac: mac,\n            slot: slotnum\n          });\n          window.socket.emit(\"timer-start\", {\n            mac: mac,\n            slot: slotnumber\n          });\n        } catch {\n          toastMsg = \"Failed to turn on device. Please try again.\";\n          this.setState({\n            showToast: true\n          });\n          this.handleToast();\n        }\n        this.setState({\n          loading: false\n        });\n      }\n    } else {\n      console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n      try {\n        window.socket.emit(\"turn-on\", {\n          mac: mac,\n          slot: slotnum\n        });\n        window.socket.emit(\"timer-start\", {\n          mac: mac,\n          slot: slotnumber\n        });\n      } catch {\n        toastMsg = \"Failed to turn on device. Please try again.\";\n        this.setState({\n          showToast: true\n        });\n        this.handleToast();\n      }\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  async turnOff(slotnumber, mac) {\n    // console.log(\"Turn Off\"+slotnumber+\"MAC\"+mac);\n    // toastMsg = \"Please wait for the group state to reflect here\";\n    this.setState({\n      loading: true\n    });\n    var slotnum = slotnumber - 1;\n    var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    const isIPCorrect = await this.verifyMac(mac);\n    if (isIPCorrect) {\n      const response = await offSlot(IP, slotnum);\n      if (response !== undefined) {\n        switch (response[0].status) {\n          case 200 || 302:\n            console.log(\"Turned Off slot \" + slotnum + \" via local ws.\");\n            this.setState({\n              loading: false\n            });\n            break;\n          default:\n            console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n            console.log(\"Failed to turn off slot via local ws.\");\n            window.socket.emit(\"turn-off\", {\n              mac: mac,\n              slot: slotnum\n            });\n            window.socket.emit(\"timer-start\", {\n              mac: mac,\n              slot: slotnum\n            });\n            this.setState({\n              loading: false\n            });\n            break;\n        }\n      } else {\n        console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n        try {\n          window.socket.emit(\"turn-off\", {\n            mac: mac,\n            slot: slotnum\n          });\n          window.socket.emit(\"timer-start\", {\n            mac: mac,\n            slot: slotnumber\n          });\n        } catch {\n          toastMsg = \"Failed to turn off device. Please try again.\";\n          this.setState({\n            showToast: true\n          });\n          this.handleToast();\n        }\n        this.setState({\n          loading: false\n        });\n      }\n    } else {\n      console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n      try {\n        window.socket.emit(\"turn-off\", {\n          mac: mac,\n          slot: slotnum\n        });\n        window.socket.emit(\"timer-start\", {\n          mac: mac,\n          slot: slotnumber\n        });\n      } catch {\n        toastMsg = \"Failed to turn off device. Please try again.\";\n        this.setState({\n          showToast: true\n        });\n        this.handleToast();\n      }\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  async toggle(slotnumber, mac) {\n    this.setState({\n      loading: true\n    });\n    console.log(\"Toggle\" + slotnumber + \"MAC\" + mac);\n    // toastMsg = \"Please wait for the group state to reflect here\";\n    // this.setState({showToast: true});\n    var slotnum = slotnumber - 1;\n    var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    const isIPCorrect = await this.verifyMac(mac);\n    if (isIPCorrect) {\n      const response = await toggleSlot(IP, slotnum);\n      if (response !== undefined) {\n        switch (response[0].status) {\n          case 200 || 302:\n            console.log(\"Toggled slot \" + slotnum + \" via local ws.\");\n            this.setState({\n              loading: false\n            });\n            break;\n          default:\n            console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n            console.log(\"Failed to toggle slot via local ws.\");\n            window.socket.emit(\"toggle\", {\n              mac: mac,\n              slot: slotnum\n            });\n            window.socket.emit(\"timer-start\", {\n              mac: mac,\n              slot: slotnum\n            });\n            this.setState({\n              loading: false\n            });\n            break;\n        }\n      } else {\n        console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n        try {\n          window.socket.emit(\"toggle\", {\n            mac: mac,\n            slot: slotnum\n          });\n          window.socket.emit(\"timer-start\", {\n            mac: mac,\n            slot: slotnumber\n          });\n        } catch {\n          toastMsg = \"Failed to toggle device. Please try again.\";\n          this.setState({\n            showToast: true\n          });\n          this.handleToast();\n        }\n        this.setState({\n          loading: false\n        });\n      }\n    } else {\n      console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n      try {\n        window.socket.emit(\"toggle\", {\n          mac: mac,\n          slot: slotnum\n        });\n        window.socket.emit(\"timer-start\", {\n          mac: mac,\n          slot: slotnumber\n        });\n      } catch {\n        toastMsg = \"Failed to toggle device. Please try again.\";\n        this.setState({\n          showToast: true\n        });\n        this.handleToast();\n      }\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  async createGroup() {\n    var icon = this.state.addSlotToGroup.icon;\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var data;\n    if (Object.keys(this.state.addSlotToGroup).length === 0) {\n      var data = JSON.stringify({\n        name: this.state.groupname,\n        homeid: homeid,\n        icon: icon !== undefined ? icon : {\n          iconname: \"LIGHTS\",\n          int: 1\n        }\n      });\n    } else {\n      var data = JSON.stringify({\n        name: this.state.groupname,\n        homeid: homeid,\n        slots: {\n          mac: this.state.addSlotToGroup.mac,\n          slotnumber: this.state.addSlotToGroup.slotnumber\n        },\n        icon: icon !== undefined ? icon : {\n          iconname: \"LIGHTS\",\n          int: 1\n        }\n      });\n    }\n    console.log(data);\n    const response = await createGroup(data);\n    if (response[0] !== undefined) {\n      switch (response[0].status) {\n        case 200:\n          console.log(response[0].data);\n          toastMsg = \"Created Group.\";\n          this.setState({\n            showToast: true\n          });\n          // this.handleToast();\n          this.setState({\n            showCreateGroupAlert: false\n          });\n          this.setState({\n            reloadGroups: true\n          });\n          break;\n        default:\n          toastMsg = \"Server error. Could not create group.\";\n          this.setState({\n            showToast: true\n          });\n          // this.handleToast();\n          break;\n      }\n    }\n  }\n  async verifyMac(mac) {\n    var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    const response = await getChipMac(IP);\n    if (response !== undefined) {\n      console.log(response[0]);\n      switch (response[0].status) {\n        case 200:\n          if (response[0].data.mac === mac) {\n            return true;\n          } else {\n            console.log(\"Incorrect local IP.\");\n            this.getIPfromCloud(mac);\n            return false;\n          }\n        case 404:\n          console.log(\"Could not verify local IP. Error:\" + response[0].data);\n          return false;\n        default:\n          console.log(\"Could not verify local IP. Error:\" + response[0].data);\n          return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  async getIPfromCloud(mac) {\n    var data = JSON.stringify({\n      mac: mac\n    });\n    console.log(\"Attempting to get new ip of \" + mac);\n    const response = await retrieveSlots(data);\n    if (response !== undefined) {\n      console.log(response[0]);\n      switch (response[0].status) {\n        case 200:\n          var existing = localStorage.getItem(mac);\n          existing.ip = response[0].data.ip;\n          localStorage.setItem(mac, JSON.stringify(existing));\n          console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n          this.websocketfn();\n          break;\n        default:\n          console.log(\"Could not retrieve chip ip from cloud.\");\n          break;\n      }\n    } else {\n      console.log(\"Could not retrieve chip ip from cloud.\");\n    }\n  }\n  render() {\n    let groupgrid;\n    let group = this.state.longPressedGroup;\n    let popover;\n    if (group !== undefined) {\n      popover = /*#__PURE__*/React.createElement(LongPressPopover, {\n        group: group,\n        component: comp => this.props.component(comp),\n        onDidDismiss: () => {\n          this.setState(() => ({\n            longPressedGroup: undefined,\n            reloadGroups: true\n          }));\n        }\n      });\n    }\n    if (this.state.networkType !== \"wifi\" && this.state.networkType !== \"4g\") {\n      groupgrid = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(IonImg, {\n        className: \"not-found\",\n        src: notFound\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"no-content-msg\"\n      }, \"You must be connected to your home WiFi to turn on or turn off devices as a group. You can still turn on or turn off a device by navigating to the room your device is set-up.\"));\n    } else {\n      groupgrid = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }, /*#__PURE__*/React.createElement(GroupGrid, {\n        groups: groups => {\n          this.setState(() => ({\n            groups: groups,\n            reloadGroups: false\n          }));\n        },\n        reload: this.state.reloadGroups,\n        shouldSetState: this.state.setGroupState === 0 ? false : this.state.setGroupState,\n        didSetState: () => this.setState({\n          setGroupState: 0\n        }),\n        isRetrievingState: state => this.setState({\n          retrievingState: state\n        }),\n        isShortPressed: groupid => this.onButtonClick(groupid),\n        isLongPressed: g => this.setState(() => ({\n          longPressedGroup: g\n        }))\n      }), /*#__PURE__*/React.createElement(ScriptTag, {\n        isHydrating: true,\n        onLoad: () => this.cloudSocket(),\n        type: \"text/javascript\",\n        src: SOCKETIOLIB\n      }));\n      if (this.state.groups.length === 0 && !this.state.reloadGroups) {\n        groupgrid = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(IonButton, {\n          className: \"add-new-slot-btn ion-no-padding\",\n          fill: \"clear\",\n          shape: \"round\",\n          size: \"large\",\n          expand: \"block\",\n          color: \"dark\",\n          onClick: () => this.setState({\n            showCreateGroupAlert: true\n          })\n        }, /*#__PURE__*/React.createElement(IonIcon, {\n          color: \"dark\",\n          fill: \"white\",\n          style: {\n            fontSize: \"150px\"\n          },\n          icon: addCircle\n        })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"create-group-label\"\n        }, \"CREATE A GROUP\"), /*#__PURE__*/React.createElement(\"br\", null));\n      }\n    }\n    return /*#__PURE__*/React.createElement(IonContent, null, /*#__PURE__*/React.createElement(IonRefresher, {\n      slot: \"fixed\",\n      onIonRefresh: event => this.refresh(event)\n    }, /*#__PURE__*/React.createElement(IonRefresherContent, null)), /*#__PURE__*/React.createElement(IonHeader, {\n      class: \"ion-no-border\"\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      mode: \"ios\"\n    }, /*#__PURE__*/React.createElement(IonButtons, {\n      slot: \"start\"\n    }, /*#__PURE__*/React.createElement(IonMenuButton, {\n      menu: \"first\",\n      fill: \"solid\",\n      className: \"icon-btn ion-no-padding\",\n      shape: \"round\",\n      size: \"large\",\n      expand: \"block\",\n      color: \"medium\"\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: personCircleSharp,\n      size: \"large\",\n      className: \"io-icon\"\n    }))), /*#__PURE__*/React.createElement(IonTitle, {\n      slot: \"secondary\"\n    }, \"GROUPS\"))), /*#__PURE__*/React.createElement(IonPopover, {\n      isOpen: this.state.showCreateGroupAlert,\n      onDidDismiss: () => {\n        this.setState({\n          showCreateGroupAlert: false\n        });\n      },\n      cssClass: \"create-popover\"\n    }, /*#__PURE__*/React.createElement(IonListHeader, {\n      className: \"popover-title\"\n    }, \"Create Group\"), /*#__PURE__*/React.createElement(IonButton, {\n      style: {\n        height: \"100%\"\n      },\n      size: \"large\",\n      expand: \"block\",\n      color: \"light-tint\",\n      onClick: () => this.setState({\n        showIconPickerModal: true\n      })\n    }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n      icon: this.state.addSlotToGroup !== undefined ? this.state.addSlotToGroup.icon !== undefined ? this.state.addSlotToGroup.icon : {\n        iconname: \"LIGHTS\",\n        int: 1\n      } : {\n        iconname: \"LIGHTS\",\n        int: 1\n      },\n      size: \"large\",\n      className: \"io-icon\",\n      color: \"light\"\n    })), /*#__PURE__*/React.createElement(IonInput, {\n      placeholder: \"Group Name\",\n      type: \"stacked\",\n      inputMode: \"text\",\n      maxlength: \"70\",\n      mode: \"md\",\n      value: this.state.groupname,\n      onIonChange: data => {\n        this.setState({\n          groupname: data.target.value\n        });\n      }\n    }), /*#__PURE__*/React.createElement(IonButton, {\n      expand: \"block\",\n      shape: \"round\",\n      onClick: () => this.createGroup()\n    }, \"Done\")), groupgrid, popover, /*#__PURE__*/React.createElement(IonLoading, {\n      isOpen: this.state.loading,\n      onDidDismiss: () => this.setState({\n        loading: false\n      }),\n      message: 'Please wait...'\n    }), /*#__PURE__*/React.createElement(IonLoading, {\n      isOpen: this.state.retrievingState,\n      message: 'Setting Group State...'\n    }), /*#__PURE__*/React.createElement(IonModal, {\n      isOpen: this.state.showIconPickerModal,\n      onClose: this.close\n    }, /*#__PURE__*/React.createElement(IconPicker, {\n      properties: {},\n      component: comp => {\n        var slot = this.state.addSlotToGroup;\n        slot.icon = comp.icon;\n        console.log(this.state.addSlotToGroup);\n        this.setState({\n          addSlotToGroup: slot,\n          showIconPickerModal: false\n        });\n      },\n      onDidDismiss: () => this.setState({\n        showIconPickerModal: false\n      })\n    })), /*#__PURE__*/React.createElement(IonToast, {\n      isOpen: this.state.showToast,\n      onDidDismiss: () => {\n        this.setState(() => ({\n          showToast: false\n        }));\n      },\n      message: toastMsg,\n      duration: 3000\n    }));\n  }\n}\nexport default GroupsPage;","map":{"version":3,"names":["IonContent","IonHeader","IonToolbar","IonButtons","IonMenuButton","IonTitle","IonModal","IonToast","IonListHeader","IonButton","IonIcon","IonRefresher","IonRefresherContent","IonInput","IonPopover","IonLoading","IonImg","ScriptTag","SOCKETIOHOST","SOCKETIOLIB","createGroup","retrieveSlots","toggleSlot","getChipMac","addCircle","personCircleSharp","React","LongPressPopover","GroupGrid","DisplayIconComponent","IconPicker","setTimeout","onSlot","offSlot","Plugins","Network","username","JSON","parse","localStorage","getItem","localSocket","createGroupAlert","toastMsg","GroupsPage","Component","constructor","props","_isMounted","state","loading","groups","showCreateGroupAlert","longPressedGroup","undefined","showAddDeviceAlert","showEditGroupModal","addSlotToGroup","groupname","showPopover","showIconPickerModal","showToast","reloadGroups","setGroupState","retrievingState","networkType","networkConnected","handleButtonPress","bind","handleButtonRelease","componentDidMount","properties","setState","mac","slotnumber","networkStatusSetup","componentWillUnmount","window","socket","close","console","log","err","removeAllListeners","addListener","status","connected","connectionType","logCurrentNetworkStatus","getStatus","refresh","event","target","complete","cloudSocket","script","document","createElement","innerHTML","async","body","appendChild","length","macIds","i","j","slots","contains","k","l","macJson","stringify","emit","on","data","chipstate","groupid","buttonPressTimer","dispPopover","clearTimeout","handleToast","onButtonClick","groupClicked","_id","turnOff","turnOn","slotnum","IP","ip","isIPCorrect","verifyMac","response","slot","toggle","icon","homeid","Object","keys","name","iconname","int","getIPfromCloud","existing","setItem","websocketfn","render","groupgrid","group","popover","comp","component","notFound","height","width","g","fontSize","value"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/Groups/GroupsPage.jsx"],"sourcesContent":["import { \n    IonContent,\n    IonHeader,\n    IonToolbar,\n    IonButtons,\n    IonMenuButton,\n    IonTitle,\n    IonModal,\n    IonToast,\n    IonListHeader,\n    IonButton,\n    IonIcon,\n    IonRefresher,\n    IonRefresherContent,\n    IonInput,\n    IonPopover,\n    IonLoading,\n    IonImg\n   \n\n } from \"@ionic/react\";\n\nimport ScriptTag from \"react-script-tag\";\n\nimport { SOCKETIOHOST, SOCKETIOLIB, createGroup, retrieveSlots } from \"../ServerRequests/globalApi\";\nimport { toggleSlot, getChipMac }  from \"../ServerRequests/localApi\";\nimport { addCircle, personCircleSharp} from \"ionicons/icons\";\nimport React from \"react\";\nimport LongPressPopover from \"./UI/LongPressPopover\";\nimport GroupGrid from \"./UI/GroupGrid\";\nimport DisplayIconComponent from \"../MiscUiComponents/DisplayIconComponent\";\nimport IconPicker from \"../MiscUiComponents/IconPicker\";\nimport \"./GroupsPage.css\"\nimport { setTimeout } from \"timers\";\nimport { onSlot, offSlot } from \"../ServerRequests/localApi\";\nimport notFound from \"../../images/device-icons/notFound/notFound.svg\";\nimport { Plugins } from \"@capacitor/core\";\nconst { Network } = Plugins;\n\n\n\n\n\n\nvar username = JSON.parse(localStorage.getItem(\"username\"));\nvar localSocket;\nvar createGroupAlert = false;\nvar toastMsg = \"\";\n\n\n\nclass GroupsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this._isMounted = true;\n        \n        this.state={\n            loading: false,\n            groups: [\"\"],\n            showCreateGroupAlert: createGroupAlert,\n            longPressedGroup: undefined,\n            showAddDeviceAlert: false,\n            showEditGroupModal: false,\n            addSlotToGroup: {},\n            groupname: \"\",\n            showPopover: 0,\n            showIconPickerModal: false,\n            showToast: false,\n            reloadGroups: true,\n            setGroupState: 0,\n            retrievingState: false,\n            networkType: undefined,\n            networkConnected: undefined\n\n            }\n\n        this.handleButtonPress = this.handleButtonPress.bind(this)\n        this.handleButtonRelease = this.handleButtonRelease.bind(this)\n    }\n\n    componentDidMount(){\n      this._isMounted = true;\n\n        \n      if(this.props.properties !== undefined)\n      {\n        this.setState({ showCreateGroupAlert: true,\n                        addSlotToGroup: {mac: this.props.properties.mac,\n                        slotnumber: this.props.properties.slotnumber }})\n      }\n\n      this.networkStatusSetup();\n        \n      \n    }\n\n\n    componentWillUnmount(){\n      try{\n        if(window.socket !==undefined){window.socket.close();}\n        console.log('Disconnected Sockets.');  \n      }\n      catch(err){ console.log(err); }\n     \n        this._isMounted = false;\n     \n    }\n\n\n\n    async networkStatusSetup(){\n      Network.removeAllListeners();\n      Network.addListener('networkStatusChange', status => {\n        this.setState({networkConnected: status.connected, \n                       networkType: status.connectionType });\n        console.log('Network status changed '+status.connectionType);\n      });\n      \n      var logCurrentNetworkStatus =  await Network.getStatus();\n      if(logCurrentNetworkStatus !==undefined)\n      { this.setState({networkConnected: logCurrentNetworkStatus.connected, \n        networkType: logCurrentNetworkStatus.connectionType });\n        console.log('Network status: '+logCurrentNetworkStatus.connectionType);\n      }\n        \n    \n    }\n\n\n\n\n\nrefresh(event){\n  this.setState({reloadGroups: true});\n  setTimeout(() =>{\n  event.target.complete()\n  }, 800);\n\n\n  this.networkStatusSetup();\n}\n\n\n    cloudSocket(){\n      const script = document.createElement(\"script\");\n      script.innerHTML += \"var socket = io.connect('\"+SOCKETIOHOST+\"');\";\n      script.innerHTML += \"window.socket = socket;\";\n      script.async = true;\n      document.body.appendChild(script);\n     \n\n        var groups = this.state.groups;\n\n        if(groups !== undefined){\n          if(groups.length !== 0){\n\n            var macIds = [];\n            console.log(groups);\n            for(var i=0; i< groups.length; i++){\n              for(var j=0; j<groups[i].slots.length; j++){\n                var contains = false;\n                for(var k=0; k<macIds.length; k++)\n                { if(macIds[k]===groups[i].slots[j].mac){contains=true; break;} }\n                if(!contains){macIds[i] = groups[i].slots[j].mac; }\n              }\n            }\n\n    \n    \n            for(var l=0; l<macIds.length; l++){\n              var macJson = JSON.parse(JSON.stringify({mac: macIds[l]}));\n              window.socket.emit(\"subscribe\",   macJson);\n              console.log(\"Socket IO connected, mac:\"+ macIds);\n            }\n\n\n          }\n\n        }\n       \n        \n    \n  \n      window.socket.on(\"state\", (data) => {\n        console.log(\"sio state: \"+data);\n        this.setState({chipstate: data.state, setGroupState: data});\n      });\n\n\n    }\n  \n  \n  \n  \n  \n  \n  \n    // websocketfn() {\n    //   var groups = this.state.groups;\n\n    //     if(groups !== undefined){\n    //       var macIds = [];\n    //       console.log(groups);\n    //       for(var i=0; i< groups.length; i++){\n    //         for(var j=0; j<groups[i].slots.length; j++){\n    //           var contains = false;\n    //           for(var k=0; k<macIds.length; k++)\n    //           { if(macIds[k]===groups[i].slots[j].mac){contains=true; break;} }\n    //           if(!contains){macIds[i] = groups[i].slots[j].mac; }\n    //         }\n    //       }\n  \n  \n    //       for(var l=0; l<macIds.length; l++){\n\n    //         var IP = JSON.parse(localStorage.getItem(macIds[l])).ip;\n    //         localSocket = new WebSocket(\"ws://\"+IP+\":81/\");\n    //         console.log(\"Local IP:\" + IP);\n        \n    //         var ctx = this;\n        \n    //         localSocket.onmessage = function (evt) {\n        \n    //           var type = evt.data.split(\"~\")[0];\n    //           var mac = evt.data.split(\"~\")[1];\n    //           var chipstate = evt.data.split(\"~\")[2];\n        \n    //           if(type === \"state\"){\n    //             console.log(\"lws\");\n    //             ctx.setState({setGroupState: mac});\n    //           }\n    //         };\n    //         localSocket.onopen = function (evt) {\n    //           console.log(\"Local WS Open\");\n    //         };\n        \n    //         localSocket.onclose = function (evt) {\n    //           console.log(\"Local WS CLosed\");\n    //         };\n            \n    //       }\n    //     }\n\n    // }\n  \n    \n\n\n    \n  handleButtonPress (groupid) {\n\n    console.log(\"Pressed:\"+groupid);\n    this.buttonPressTimer = setTimeout(() => this.dispPopover(groupid), 500);\n   \n  }\n  dispPopover(groupid){\n    this.setState(() =>({showPopover: groupid}));\n  }\n  handleButtonRelease () {\n    clearTimeout(this.buttonPressTimer);\n  }\n\n    \n\n\n\n  handleToast()\n    { this.setState({ showToast: !this.state.showToast }); }\n\n \n\n\n\n\n\n\n\n    async onButtonClick(groupClicked){\n      \n      console.log(\"group clicked\"+groupClicked);\n      \n              var slots = groupClicked.slots;\n              var groups = this.state.groups;\n              console.log(groups);\n              console.log(slots);\n                for(var i = 0; i<slots.length; i++)\n                {\n                  console.log(slots[i]);\n                  \n                  \n                  for(var j=0;j<groups.length;j++){\n                    console.log(\"groups[\"+j+\"]: \"+groups[j]._id);\n                    console.log(\"Clicked id: \"+JSON.stringify(groupClicked._id));\n                   \n                    \n                    if(groups[j]._id === groupClicked._id){\n                      if(groups[j].state === 2)\n                      {this.turnOff(slots[i].slotnumber, slots[i].mac);}\n                      else{this.turnOn(slots[i].slotnumber, slots[i].mac);}\n                    }\n\n                  }\n                 \n                 \n                }\n\n\n    }\n\n    // async getSlotState(slotnumber, mac){\n\n   \n    //   var ip = JSON.parse(localStorage.getItem(mac)).ip;\n    //   await this.getStateLocally(ip, mac);\n   \n      \n  \n    //   var stateInt = parseInt(JSON.parse(localStorage.getItem(mac)).state);\n    //   var slotcount = parseInt(JSON.parse(localStorage.getItem(mac)).slotcount);\n    //   var stateBin = stateInt.toString(2);\n    //   var arr = stateBin.split(\"\").map(Number);\n  \n  \n      \n    //     var stateBinArr = [];\n    //     var difference = parseInt(slotcount) - parseInt(arr.length);\n  \n    //     for(var i = 0; i < difference; i++){stateBinArr[i] = 0;}\n    //     for(var j = 0; j < arr.length; j++){stateBinArr[j+difference] = arr[j]; }\n  \n    //     return stateBinArr[slotnumber-1];\n      \n  \n  \n    // }\n\n    \n    // async getStateLocally(ip, mac){\n    //   this.setState({loading: false});\n\n      \n    //       const response = await chipState(ip);\n      \n            \n    //       if(response[0] !== undefined){\n      \n    //         switch(response[0].status){\n      \n    //             case 200:\n    //               var chip = JSON.parse(localStorage.getItem(mac));\n    //               chip.state = response[0].data.state;\n    //               localStorage.setItem(mac, JSON.stringify(chip));\n    //               this.setState({loading: false});\n\n    //               break;\n      \n    //               default:\n    //                 console.log(\"Could not get chip state. MAC: \"+mac);\n    //                 this.setState({loading: false});\n\n    //                 break;\n      \n    //         }\n    //       }else{\n    //         console.log(\"Could not get chip state. MAC \"+mac);\n    //         this.setState({loading: false});\n\n    //       }\n      \n    //  }\n      \n      \n      \n    async turnOn(slotnumber, mac){\n      this.setState({loading: true});\n\n      console.log(\"Turn On\"+slotnumber+\"MAC\"+mac);\n      // toastMsg = \"Please wait for the group state to reflect here\";\n      // this.setState({showToast: true});\n      var slotnum = slotnumber - 1;\n      var IP = JSON.parse(localStorage.getItem(mac)).ip;\n      \n      const isIPCorrect = await this.verifyMac(mac);\n      if(isIPCorrect){\n  \n  \n        const response = await onSlot(IP, slotnum);\n  \n        if(response !== undefined){\n  \n          switch(response[0].status){\n  \n            case 200||302:\n              console.log(\"Turned On slot \"+slotnum+\" via local ws.\");\n              this.setState({loading: false});\n\n              break;\n  \n              default:\n                console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n                console.log(\"Failed to turn on slot via local ws.\");\n                window.socket.emit(\"turn-on\", { mac: mac, slot: slotnum });\n                window.socket.emit(\"timer-start\", { mac: mac, slot: slotnum });\n                this.setState({loading: false});\n\n                break;\n          }\n  \n        }else{\n          console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n         try{\n          window.socket.emit(\"turn-on\", { mac: mac, slot: slotnum });\n          window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n         }catch{\n           toastMsg = \"Failed to turn on device. Please try again.\"\n           this.setState({showToast: true});\n           this.handleToast();\n         }\n         this.setState({loading: false});\n\n         \n        }\n  \n  \n      }else{\n        console.log(\"Failed to turn on slot via local ws. Attempting turn on via cloud.(SocketIO)\");\n        try{\n          window.socket.emit(\"turn-on\", { mac: mac, slot: slotnum });\n          window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n         }catch{\n           toastMsg = \"Failed to turn on device. Please try again.\"\n           this.setState({showToast: true});\n           this.handleToast();\n         }\n         this.setState({loading: false});\n\n      }\n\n\n\n      \n    }\n    \n    \n\n    async turnOff(slotnumber, mac){\n\n      // console.log(\"Turn Off\"+slotnumber+\"MAC\"+mac);\n      // toastMsg = \"Please wait for the group state to reflect here\";\n      this.setState({loading: true});\n      var slotnum = slotnumber - 1;\n      var IP = JSON.parse(localStorage.getItem(mac)).ip;\n      \n      const isIPCorrect = await this.verifyMac(mac);\n      if(isIPCorrect){\n  \n  \n        const response = await offSlot(IP, slotnum);\n  \n        if(response !== undefined){\n  \n          switch(response[0].status){\n  \n            case 200||302:\n              console.log(\"Turned Off slot \"+slotnum+\" via local ws.\");\n              this.setState({loading: false});\n\n              break;\n  \n              default:\n                console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n                console.log(\"Failed to turn off slot via local ws.\");\n                window.socket.emit(\"turn-off\", { mac: mac, slot: slotnum });\n                window.socket.emit(\"timer-start\", { mac: mac, slot: slotnum });\n                this.setState({loading: false});\n\n                break;\n          }\n  \n        }else{\n          console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n         try{\n          window.socket.emit(\"turn-off\", { mac: mac, slot: slotnum });\n          window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n         }catch{\n           toastMsg = \"Failed to turn off device. Please try again.\"\n           this.setState({showToast: true});\n           this.handleToast();\n         }\n         this.setState({loading: false});\n\n        }\n  \n  \n      }else{\n        console.log(\"Failed to turn off slot via local ws. Attempting turn off via cloud.(SocketIO)\");\n        try{\n          window.socket.emit(\"turn-off\", { mac: mac, slot: slotnum });\n          window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n         }catch{\n           toastMsg = \"Failed to turn off device. Please try again.\"\n           this.setState({showToast: true});\n           this.handleToast();\n         }\n         this.setState({loading: false});\n\n      }\n\n\n\n      \n    }\n\n\n\n          \n\n\n    async toggle(slotnumber, mac){\n      this.setState({loading: true});\n\n\n         console.log(\"Toggle\"+slotnumber+\"MAC\"+mac);\n        // toastMsg = \"Please wait for the group state to reflect here\";\n        // this.setState({showToast: true});\n        var slotnum = slotnumber - 1;\n        var IP = JSON.parse(localStorage.getItem(mac)).ip;\n        \n        const isIPCorrect = await this.verifyMac(mac);\n        if(isIPCorrect){\n    \n    \n          const response = await toggleSlot(IP, slotnum);\n    \n          if(response !== undefined){\n    \n            switch(response[0].status){\n    \n              case 200||302:\n                console.log(\"Toggled slot \"+slotnum+\" via local ws.\");\n                this.setState({loading: false});\n\n                break;\n    \n                default:\n                  console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n                  console.log(\"Failed to toggle slot via local ws.\");\n                  window.socket.emit(\"toggle\", { mac: mac, slot: slotnum });\n                  window.socket.emit(\"timer-start\", { mac: mac, slot: slotnum });\n                  this.setState({loading: false});\n\n                  break;\n            }\n    \n          }else{\n            console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n           try{\n            window.socket.emit(\"toggle\", { mac: mac, slot: slotnum });\n            window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n           }catch{\n             toastMsg = \"Failed to toggle device. Please try again.\"\n             this.setState({showToast: true});\n             this.handleToast();\n           }\n           this.setState({loading: false});\n\n           \n          }\n    \n    \n        }else{\n          console.log(\"Failed to toggle slot via local ws. Attempting toggle via cloud.(SocketIO)\");\n          try{\n            window.socket.emit(\"toggle\", { mac: mac, slot: slotnum });\n            window.socket.emit(\"timer-start\", { mac: mac, slot: slotnumber });\n           }catch{\n             toastMsg = \"Failed to toggle device. Please try again.\"\n             this.setState({showToast: true});\n             this.handleToast();\n           }\n           this.setState({loading: false});\n\n        }\n\n\n\n  \n    }\n\n\n\n    async createGroup(){\n\n      var icon = this.state.addSlotToGroup.icon;\n      var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n      var data; \n      if(Object.keys(this.state.addSlotToGroup).length === 0)\n      {\n          var data = JSON.stringify({name: this.state.groupname,\n          homeid: homeid,\n          icon: icon!==undefined?icon:{iconname: \"LIGHTS\", int: 1}});\n\n      }else{\n        var data = JSON.stringify({name: this.state.groupname,\n          homeid: homeid,\n          slots:{mac: this.state.addSlotToGroup.mac,\n          slotnumber: this.state.addSlotToGroup.slotnumber},\n          icon: icon!==undefined?icon:{iconname: \"LIGHTS\", int: 1}});\n\n      }\n          \n      console.log(data);                          \n      const response = await createGroup(data);\n\n      if(response[0] !== undefined){\n\n        switch(response[0].status){\n\n            case 200:\n              console.log(response[0].data);\n              toastMsg = \"Created Group.\";\n              this.setState({showToast: true});\n              // this.handleToast();\n              this.setState({showCreateGroupAlert: false});\n              this.setState({reloadGroups: true});\n              break;\n\n              default:\n                toastMsg = \"Server error. Could not create group.\";\n                this.setState({showToast: true});\n                  // this.handleToast();\n                break;\n        }\n      }\n\n    }\n\n\n    async verifyMac(mac){\n\n      var IP = JSON.parse(localStorage.getItem(mac)).ip;\n      \n        const response = await getChipMac(IP);\n  \n        if(response !== undefined){\n          console.log(response[0]);\n  \n          switch(response[0].status){\n            \n            case 200:\n              if(response[0].data.mac === mac)\n              {return true;}\n              else\n              {\n                console.log(\"Incorrect local IP.\");\n                this.getIPfromCloud(mac);\n                return false;\n              }\n              \n  \n            case 404:\n              console.log(\"Could not verify local IP. Error:\"+response[0].data);\n              return false;\n            \n            default :\n              console.log(\"Could not verify local IP. Error:\"+response[0].data);\n              return false;\n  \n          }\n    \n     \n          }else{return false;}\n  \n    }\n\n    async getIPfromCloud(mac){\n      \n      var data = JSON.stringify({mac: mac});\n      console.log(\"Attempting to get new ip of \"+mac);\n  \n      \n  \n      const response = await retrieveSlots(data);\n  \n      if(response !== undefined){\n        console.log(response[0]);\n        switch(response[0].status){\n  \n          case 200:\n              var existing = localStorage.getItem(mac);\n              existing.ip = response[0].data.ip;\n              localStorage.setItem(mac, JSON.stringify(existing));\n              console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n  \n              this.websocketfn();\n            break;\n  \n            default:\n              console.log(\"Could not retrieve chip ip from cloud.\");\n              break;\n            }\n          }else{console.log(\"Could not retrieve chip ip from cloud.\");}\n          \n      \n    }\n  \n\n\n  \n\n    render(){\n\n        let groupgrid;\n        let group = this.state.longPressedGroup;\n        let popover;\n        \n              if(group !== undefined){\n                      popover=(\n                          <LongPressPopover \n                            group={group}\n                            component={(comp) => this.props.component(comp)}\n                            onDidDismiss={() =>  { this.setState(() =>({longPressedGroup: undefined, reloadGroups: true}))} }\n                            />\n                        );\n              }\n\n\n              if(this.state.networkType !== \"wifi\" && this.state.networkType !==\"4g\" ){\n                groupgrid=(\n                  <div>\n                    <IonImg  className=\"not-found\" src={notFound}>\n              \n                    </IonImg>\n                     <p className=\"no-content-msg\">\n                      You must be connected to your home WiFi to turn on or turn off devices as a group.\n                      You can still turn on or turn off a device by navigating to the room your device\n                      is set-up.\n                  </p>\n                  </div>\n                 \n              \n                );\n              }else{\n                groupgrid=(\n\n                  <div style={{ height: \"100%\", width:\"100%\"}}>\n                   \n                        <GroupGrid \n                                groups={(groups) => {this.setState(() =>({groups: groups, reloadGroups: false}));}}\n                                reload={this.state.reloadGroups}\n                                shouldSetState={this.state.setGroupState===0?false:this.state.setGroupState}\n                                didSetState={() => this.setState({setGroupState: 0})}\n                                isRetrievingState={(state) => this.setState({retrievingState: state})}\n                                isShortPressed={(groupid) => this.onButtonClick(groupid)}\n                                isLongPressed={(g) =>  this.setState(() =>({longPressedGroup: g})) }\n                              />\n\n                             <ScriptTag\n                                isHydrating={true}\n                                onLoad={() => this.cloudSocket()}\n                                type=\"text/javascript\"\n                                src={SOCKETIOLIB}\n                                /> \n\n                      </div>\n                        );\n\n\n                \n      \n               if(this.state.groups.length === 0 && !this.state.reloadGroups){ \n                 groupgrid =(\n                    \n                              <div>\n                              <IonButton\n                              className=\"add-new-slot-btn ion-no-padding\"\n                              fill=\"clear\"\n                              shape=\"round\"\n                              size=\"large\"\n                              expand=\"block\"\n                              color=\"dark\"\n                              onClick={() =>this.setState({ showCreateGroupAlert: true })}>\n                                  <IonIcon\n                                  color=\"dark\"\n                                  fill=\"white\"\n                                  style={{ fontSize: \"150px\" }}\n                                  icon={addCircle}/>\n                              </IonButton>\n                              <br/>\n                              <p className=\"create-group-label\">CREATE A GROUP</p>\n                              <br/>\n                              </div>\n                            );\n\n                \n                  }\n                }\n                \n        \n\n           \n                \n                  \n                  \n        \n        return(\n          <IonContent>\n\n                <IonRefresher slot=\"fixed\" onIonRefresh={(event) => this.refresh(event)} >\n                     <IonRefresherContent />\n                </IonRefresher>\n                <IonHeader class=\"ion-no-border\">\n                  <IonToolbar  mode=\"ios\" >\n                    <IonButtons slot=\"start\">\n                    <IonMenuButton menu=\"first\"\n                                  fill=\"solid\"\n                                  className=\"icon-btn ion-no-padding\"\n                                  shape=\"round\"\n                                  size=\"large\"\n                                  expand=\"block\"\n                                  color=\"medium\">\n                                        <IonIcon\n                                          icon={personCircleSharp}\n                                          size=\"large\"\n                                          className=\"io-icon\"\n                                        />\n                                  </IonMenuButton>\n                    \n                    </IonButtons>\n                    <IonTitle slot=\"secondary\">GROUPS</IonTitle>\n                    </IonToolbar>\n                </IonHeader>   \n\n                   \n                    <IonPopover\n                           isOpen={this.state.showCreateGroupAlert}\n                           onDidDismiss={() =>{this.setState({showCreateGroupAlert: false})}}\n                           cssClass=\"create-popover\">\n\n                        <IonListHeader className=\"popover-title\">Create Group</IonListHeader>\n                        \n                        <IonButton\n                         style={{height: \"100%\"}}\n                          size=\"large\"\n                          expand=\"block\"\n                          color=\"light-tint\"\n                          onClick={() => this.setState({showIconPickerModal: true})}\n                        >\n                          <DisplayIconComponent\n                            icon={this.state.addSlotToGroup!==undefined?\n                                  this.state.addSlotToGroup.icon!==undefined?  \n                                  this.state.addSlotToGroup.icon:\n                                  {iconname: \"LIGHTS\", int: 1}:\n                                  {iconname: \"LIGHTS\", int: 1}\n                                  }\n                            size=\"large\"\n                            className=\"io-icon\"\n                            color=\"light\"/>\n                        </IonButton>\n                               \n                                \n                                    <IonInput\n                                    placeholder=\"Group Name\"\n                                    type=\"stacked\"\n                                    inputMode=\"text\"\n                                    maxlength=\"70\"\n                                    mode=\"md\"\n                                    value={this.state.groupname}\n                                    onIonChange={(data) => {\n                                        this.setState({ groupname: data.target.value });\n                                    }} />\n                                     <IonButton\n                                      expand=\"block\"\n                                      shape=\"round\"\n                                      onClick={() => this.createGroup()}\n                                      >Done</IonButton>\n                                      \n                          </IonPopover>\n                          \n                    \n                          \n                        {groupgrid}\n                        {popover}\n\n                         <IonLoading\n                          isOpen={this.state.loading}\n                          onDidDismiss={() => this.setState({loading: false})}\n                          message={'Please wait...'}\n                        /> \n                        <IonLoading\n                          isOpen={this.state.retrievingState}\n                          message={'Setting Group State...'}\n                        /> \n\n\n                       \n                        <IonModal\n                          isOpen={this.state.showIconPickerModal}\n                          onClose={this.close}\n                        >\n                          <IconPicker \n                            properties={{}}\n                            component={(comp) => \n                            { var slot = this.state.addSlotToGroup;\n                              slot.icon = comp.icon;\n                              console.log(this.state.addSlotToGroup);\n                              this.setState({ addSlotToGroup: slot, showIconPickerModal: false})}}\n                              onDidDismiss={() => this.setState({showIconPickerModal: false}) }\n                            />\n\n                        </IonModal>\n\n                        \n                        <IonToast\n                          isOpen={this.state.showToast}\n                          onDidDismiss={() => {this.setState(() => ({showToast: false}))}}\n                          message={toastMsg}\n                          duration={3000}\n                        />\n                        \n                   </IonContent>\n                          \n\n\n                     \n                   \n              \n        );\n    \n    }\n}\n\n\n\nexport default GroupsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}