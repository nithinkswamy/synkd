{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\n/*\n Stencil Client Platform v1.15.0 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n  var placeholders = [];\n  var index = 0;\n  var content;\n  // Replaces attribute selectors with placeholders.\n  // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  });\n  // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n  // WS and \"+\" would otherwise be interpreted as selector separators.\n  content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  var ss = {\n    content: content,\n    placeholders: placeholders\n  };\n  return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n  return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n    return placeholders[+index];\n  });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n  return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n  return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    var cssRule = {\n      selector: selector,\n      content: content\n    };\n    var rule = ruleCallback(cssRule);\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n};\nvar escapeBlocks = function (input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  var strEscapedBlocks = {\n    escapedString: resultParts.join(''),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n  return cssText.replace(regExp, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    if (m[2]) {\n      var parts = m[2].split(',');\n      var r = [];\n      for (var i = 0; i < parts.length; i++) {\n        var p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n      return r.join(',');\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n  return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\n  }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n  var slotClass = '.' + slotScopeId + ' > ';\n  var selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    if (m[2]) {\n      var compound = m[2].trim();\n      var suffix = m[3];\n      var slottedSelector = slotClass + compound + suffix;\n      var prefixSelector = '';\n      for (var i = m[4] - 1; i >= 0; i--) {\n        var char = m[5][i];\n        if (char === '}' || char === ',') {\n          break;\n        }\n        prefixSelector = char + prefixSelector;\n      }\n      var orgSelector = prefixSelector + slottedSelector;\n      var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n      if (orgSelector.trim() !== addedSelector.trim()) {\n        var updatedSelector = addedSelector + \", \" + orgSelector;\n        selectors.push({\n          orgSelector: orgSelector,\n          updatedSelector: updatedSelector\n        });\n      }\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors: selectors,\n    cssText: cssText\n  };\n};\nvar convertColonHostContext = function (cssText) {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n    return result.replace(pattern, ' ');\n  }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n  var lre = /\\[/g;\n  var rre = /\\]/g;\n  scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n  var re = makeScopeMatcher(scopeSelector);\n  return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n  _polyfillHostRe.lastIndex = 0;\n  if (_polyfillHostRe.test(selector)) {\n    var replaceBy_1 = \".\" + hostSelector;\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n      return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n        return before + replaceBy_1 + colon + after;\n      });\n    }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n  }\n  return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n  var isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\n    var parts = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parts[_i - 1] = arguments[_i];\n    }\n    return parts[0];\n  });\n  var className = '.' + scopeSelector;\n  var _scopeSelectorPart = function (p) {\n    var scopedP = p.trim();\n    if (!scopedP) {\n      return '';\n    }\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n    } else {\n      // remove :host since it should be unnecessary\n      var t = p.replace(_polyfillHostRe, '');\n      if (t.length > 0) {\n        var matches = t.match(/([^:]*)(:*)(.*)/);\n        if (matches) {\n          scopedP = matches[1] + className + matches[2] + matches[3];\n        }\n      }\n    }\n    return scopedP;\n  };\n  var safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  var scopedSelector = '';\n  var startIndex = 0;\n  var res;\n  var sep = /( |>|\\+|~(?!=))\\s*/g;\n  // If a selector appears before :host it should not be shimmed as it\n  // matches on ancestor elements and not on elements in the host's shadow\n  // `:host-context(div)` is transformed to\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n  // Historically `component-tag:host` was matching the component so we also want to preserve\n  // this behavior to avoid breaking legacy apps (it should not match).\n  // The behavior should be:\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n  //   `:host-context(tag)`)\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n  // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n  var shouldScope = !hasHost;\n  while ((res = sep.exec(selector)) !== null) {\n    var separator = res[1];\n    var part_1 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n    var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n    scopedSelector += scopedPart + \" \" + separator + \" \";\n    startIndex = sep.lastIndex;\n  }\n  var part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n  // replace the placeholders with their original values\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n  return selector.split(',').map(function (shallowPart) {\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n  return processRules(cssText, function (rule) {\n    var selector = rule.selector;\n    var content = rule.content;\n    if (rule.selector[0] !== '@') {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n    }\n    var cssRule = {\n      selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n      content: content\n    };\n    return cssRule;\n  });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  var slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n  }\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n  return {\n    cssText: cssText.trim(),\n    slottedSelectors: slotted.selectors\n  };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n  var hostScopeId = scopeId + '-h';\n  var slotScopeId = scopeId + '-s';\n  var commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  var orgSelectors = [];\n  if (commentOriginalSelector) {\n    var processCommentedSelector_1 = function (rule) {\n      var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n      var comment = \"/*!@\" + rule.selector + \"*/\";\n      orgSelectors.push({\n        placeholder: placeholder,\n        comment: comment\n      });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n    cssText = processRules(cssText, function (rule) {\n      if (rule.selector[0] !== '@') {\n        return processCommentedSelector_1(rule);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        rule.content = processRules(rule.content, processCommentedSelector_1);\n        return rule;\n      }\n      return rule;\n    });\n  }\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n  cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(function (_a) {\n      var placeholder = _a.placeholder,\n        comment = _a.comment;\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\nexport { scopeCss };","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","safeSelector","selector","placeholders","index","content","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","slottedSelectors","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/node_modules/ionicons/dist/esm-es5/shadow-css-a27537cf.js"],"sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/*\n Stencil Client Platform v1.15.0 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content,\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText,\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector\n        .split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content,\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}