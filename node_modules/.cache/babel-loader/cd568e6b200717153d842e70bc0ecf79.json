{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\Groups\\\\UI\\\\GroupGrid.jsx\";\nimport React from \"react\";\nimport { IonContent, IonCol, IonButton, IonIcon, IonLabel, IonRow, IonGrid, IonRefresher } from \"@ionic/react\";\nimport { withRouter } from \"react-router\";\nimport { retrieveGroups, retrieveSlots } from \"../../ServerRequests/globalApi\";\nimport LoadingCards from \"../../MiscUiComponents/LoadingCards\";\nimport DisplayIconComponent from \"../../MiscUiComponents/DisplayIconComponent\";\nimport { chipState, getChipMac } from \"../../ServerRequests/localApi\";\nimport { Socket } from \"net\";\nvar longPressed = false;\nclass GroupGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: [],\n      groupsLoaded: false,\n      requestedStateMac: []\n    };\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n  }\n\n  //Long Press----------------------------------------------------------------------------\n\n  handleButtonPress(group) {\n    console.log(\"Pressed:\" + group._id);\n    longPressed = false;\n    this.buttonPressTimer = setTimeout(() => this.longPressed(group), 500);\n  }\n  shortPressed(group) {\n    this.props.isShortPressed(group);\n  }\n  longPressed(group) {\n    this.props.isLongPressed(group);\n    longPressed = true;\n  }\n  handleButtonRelease(group) {\n    if (!longPressed) {\n      this.shortPressed(group);\n    }\n    clearTimeout(this.buttonPressTimer);\n  }\n  //Long Press----------------------------------------------------------------------------\n\n  async getGroups() {\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var data = JSON.stringify({\n      homeid: homeid\n    });\n    var groups = JSON.parse(localStorage.getItem(\"groups\"));\n    switch (groups) {\n      case null:\n        console.log(\"No groups found in local storage. Attempting to retrieve from cloud storage\");\n        break;\n      case 0:\n        console.log(\"No groups found in local storage. Attempting to retrieve from cloud storage\");\n        break;\n      default:\n        this.setState({\n          groupsLoaded: true,\n          groups: groups\n        });\n        for (var i = 0; i < groups.length; i++) {\n          this.setGroupState(groups[i]._id);\n        }\n        this.props.groups(groups);\n        console.log(\"Groups loaded from local storage\");\n        break;\n    }\n    const response = await retrieveGroups(data);\n    if (response !== undefined) {\n      console.log(response[0]);\n      switch (response[0].status) {\n        case 200:\n          this.setState({\n            groupsLoaded: true,\n            groups: response[0].data.groups\n          });\n          //Save in local storage\n          localStorage.setItem(\"groups\", JSON.stringify(response[0].data.groups));\n          for (var i = 0; i < response[0].data.groups.length; i++) {\n            this.setGroupState(response[0].data.groups[i]._id);\n          }\n          this.props.groups(response[0].data.groups);\n          break;\n        default:\n          this.setState({\n            showToast: true,\n            toastMsg: \"Server Error.\"\n          });\n          this.props.groups([]);\n          break;\n      }\n    } else {\n      this.setState({\n        groupsLoaded: true,\n        showToast: true,\n        toastMsg: \"Server Error.\"\n      });\n      this.props.groups([]);\n      console.log(\"Could not retrieve groups. Null response\");\n    }\n  }\n  async setGroupState(groupid) {\n    this.setState({\n      groupsLoaded: true\n    });\n    this.props.isRetrievingState(true);\n    var groups = JSON.parse(localStorage.getItem(\"groups\"));\n    var group = [];\n    for (var j = 0; j < groups.length; j++) {\n      if (groups[j]._id === groupid) {\n        group = groups[j];\n      }\n    }\n    var groupSlotCount = group.slots.length;\n    var groupStateInt = 0;\n    var macIds = [];\n    console.log(groups);\n    for (var i = 0; i < groups.length; i++) {\n      for (var j = 0; j < groups[i].slots.length; j++) {\n        var contains = false;\n        for (var k = 0; k < macIds.length; k++) {\n          if (macIds[k] === groups[i].slots[j].mac) {\n            contains = true;\n            break;\n          }\n        }\n        if (!contains) {\n          macIds[i] = groups[i].slots[j].mac;\n        }\n      }\n    }\n    for (var j = 0; j < macIds.length; j++) {\n      var ip = JSON.parse(localStorage.getItem(macIds[j])).ip;\n      console.log(ip);\n      await this.getStateLocally(ip, macIds[j]);\n    }\n    for (var i = 0; i < groupSlotCount; i++) {\n      if ((await this.getSlotState(group.slots[i].slotnumber, group.slots[i].mac)) === 0) {\n        groupStateInt++;\n      }\n    }\n    switch (groupStateInt) {\n      case 0:\n        groupStateInt = 0;\n        break;\n      case groupSlotCount:\n        groupStateInt = 2;\n        break;\n      default:\n        groupStateInt = 1;\n        break;\n    }\n    var groups = this.state.groups;\n    for (var j = 0; j < groups.length; j++) {\n      if (groups[j]._id === groupid) {\n        groups[j].state = groupStateInt;\n      }\n    }\n    this.setState({\n      groups: groups\n    });\n    this.props.isRetrievingState(false);\n    // console.log(this.state.groups);\n  }\n\n  async getSlotState(slotnumber, mac) {\n    //var ip = JSON.parse(localStorage.getItem(mac)).ip;\n    //await this.getStateLocally(ip, mac);\n\n    var stateInt = parseInt(JSON.parse(localStorage.getItem(mac)).state);\n    var slotcount = parseInt(JSON.parse(localStorage.getItem(mac)).slotcount);\n    var stateBin = stateInt.toString(2);\n    var arr = stateBin.split(\"\").map(Number);\n    var stateBinArr = [];\n    var difference = parseInt(slotcount) - parseInt(arr.length);\n    for (var i = 0; i < difference; i++) {\n      stateBinArr[i] = 0;\n    }\n    for (var j = 0; j < arr.length; j++) {\n      stateBinArr[j + difference] = arr[j];\n    }\n    return stateBinArr[slotnumber - 1];\n  }\n  async getStateLocally(ip, mac) {\n    // const isIPCorrect = await this.verifyMac(mac);\n    // if(isIPCorrect){\n\n    const response = await chipState(ip);\n    if (response !== undefined) {\n      switch (response[0].status) {\n        case 200:\n          var chip = JSON.parse(localStorage.getItem(mac));\n          chip.state = response[0].data.state;\n          localStorage.setItem(mac, JSON.stringify(chip));\n          break;\n        default:\n          console.log(\"Could not get chip state. MAC: \" + mac);\n          // await this.getStateFromCloud(mac);\n          break;\n      }\n    } else {\n      console.log(\"Could not get chip state. MAC: \" + mac);\n      // await this.getStateFromCloud(mac);\n    }\n\n    // }\n  }\n\n  // async getStateFromCloud(mac){\n  //   var reqMac = this.state.requestedStateMac;\n  //   console.log(reqMac);\n\n  //    window.socket.emit(\"broadcast-state\", { mac: mac});\n  //    reqMac.push(mac);\n  //    console.log(\"Requested broadcast-state\");\n  //    this.setState({requestedStateMac: reqMac});\n\n  // }\n\n  // async verifyMac(mac){\n\n  //   var IP = JSON.parse(localStorage.getItem(mac)).ip;\n\n  //     const response = await getChipMac(IP);\n\n  //     if(response !== undefined){\n\n  //       switch(response[0].status){\n\n  //         case 200:\n  //           if(response[0].data.mac === mac)\n  //           {return true;}\n  //           else\n  //           {\n  //             console.log(\"Incorrect local IP.\");\n  //             return this.getIPfromCloud(mac)?true:false; \n  //           }\n\n  //         case 404:\n  //           console.log(\"Could not verify local IP. Error:\"+response[0].data);\n  //           return false;\n\n  //         default :\n  //           console.log(\"Could not verify local IP. Error:\"+response[0].data);\n  //           return false;\n\n  //       }\n\n  //       }else{return false;}\n\n  // }\n\n  // async getIPfromCloud(mac){\n\n  //   var data = JSON.stringify({mac: mac});\n  //   console.log(\"Attempting to get new ip of \"+mac);\n\n  //   const response = await retrieveSlots(data);\n\n  //   if(response !== undefined){\n  //     console.log(response[0]);\n  //     switch(response[0].status){\n\n  //       case 200:\n  //           var existing = JSON.parse(localStorage.getItem(mac));\n  //           existing.ip = response[0].data.ip;\n  //           localStorage.setItem(mac, JSON.stringify(existing));\n  //           console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n  //           return true;\n\n  //         default:\n  //           console.log(\"Could not retrieve chip ip from cloud.\");\n  //           return false;\n  //         }\n  //       }else{console.log(\"Could not retrieve chip ip from cloud.\"); return false;      }\n\n  // }\n\n  render() {\n    let body;\n    let groupGrid = [];\n    let load = this.props.reload;\n    let groupState = this.props.shouldSetState;\n    if (load) {\n      console.log(\"Retrieving Groups...\");\n      this.getGroups();\n      body = /*#__PURE__*/React.createElement(LoadingCards, null);\n    } else {\n      if (this.state.groups.length > 0) {\n        groupGrid = this.state.groups.map(item => {\n          switch (item.state) {\n            case 0:\n              return /*#__PURE__*/React.createElement(IonCol, {\n                className: \"group-grid-col\",\n                size: \"6\",\n                color: \"dark\"\n              }, /*#__PURE__*/React.createElement(IonButton, {\n                style: {\n                  height: \"100%\"\n                },\n                className: \"group-btn-off\",\n                size: \"large\",\n                expand: \"block\",\n                color: \"light-tint\",\n                onTouchStart: this.handleButtonPress.bind(this, item),\n                onTouchEnd: this.handleButtonRelease.bind(this, item)\n              }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n                icon: item.icon,\n                size: \"large\",\n                className: \"io-icon\",\n                fill: \"clear\"\n              })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(IonLabel, {\n                class: \"ion-text-center\"\n              }, item.name));\n            case 1:\n              return /*#__PURE__*/React.createElement(IonCol, {\n                className: \"group-grid-col\",\n                size: \"6\",\n                color: \"dark\"\n              }, /*#__PURE__*/React.createElement(IonButton, {\n                style: {\n                  height: \"100%\"\n                },\n                className: \"group-btn-some-on\",\n                size: \"large\",\n                expand: \"block\",\n                color: \"light-tint\",\n                onTouchStart: this.handleButtonPress.bind(this, item),\n                onTouchEnd: this.handleButtonRelease.bind(this, item)\n              }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n                icon: item.icon,\n                size: \"large\",\n                className: \"io-icon\",\n                fill: \"clear\"\n              })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(IonLabel, {\n                class: \"ion-text-center\"\n              }, item.name));\n            default:\n              return /*#__PURE__*/React.createElement(IonCol, {\n                className: \"group-grid-col\",\n                size: \"6\"\n              }, /*#__PURE__*/React.createElement(IonButton, {\n                style: {\n                  height: \"100%\"\n                },\n                className: \"group-btn-all-on\",\n                size: \"large\",\n                expand: \"block\",\n                color: \"light-tint\",\n                onTouchStart: this.handleButtonPress.bind(this, item),\n                onTouchEnd: this.handleButtonRelease.bind(this, item)\n              }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n                icon: item.icon,\n                size: \"large\",\n                className: \"io-icon\",\n                fill: \"clear\"\n              })), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(IonLabel, {\n                class: \"ion-text-center\"\n              }, item.name));\n          }\n        });\n      }\n      body = /*#__PURE__*/React.createElement(IonGrid, {\n        style: {\n          margin: \"1rem\",\n          height: \"100%\"\n        }\n      }, /*#__PURE__*/React.createElement(IonRow, null, groupGrid));\n    }\n    if (groupState !== false) {\n      console.log(\"Setting up group state...\" + groupState);\n      let groups = this.state.groups;\n      var changedGroup = [];\n      for (var i = 0; i < groups.length; i++) {\n        for (var j = 0; j < groups[i].slots.length; j++) {\n          if (groups[i].slots[j].mac === groupState.mac) {\n            if (!changedGroup.includes(groups[i]._id)) {\n              changedGroup.push(groups[i]._id);\n            }\n          }\n        }\n      }\n      for (var k = 0; k < changedGroup.length; k++) {\n        console.log(changedGroup);\n        this.setGroupState(changedGroup[k]);\n      }\n      this.props.didSetState();\n    }\n    return body;\n  }\n}\nexport default withRouter(GroupGrid);","map":{"version":3,"names":["React","IonContent","IonCol","IonButton","IonIcon","IonLabel","IonRow","IonGrid","IonRefresher","withRouter","retrieveGroups","retrieveSlots","LoadingCards","DisplayIconComponent","chipState","getChipMac","Socket","longPressed","GroupGrid","Component","constructor","props","state","groups","groupsLoaded","requestedStateMac","handleButtonPress","bind","handleButtonRelease","group","console","log","_id","buttonPressTimer","setTimeout","shortPressed","isShortPressed","isLongPressed","clearTimeout","getGroups","homeid","JSON","parse","localStorage","getItem","data","stringify","setState","i","length","setGroupState","response","undefined","status","setItem","showToast","toastMsg","groupid","isRetrievingState","j","groupSlotCount","slots","groupStateInt","macIds","contains","k","mac","ip","getStateLocally","getSlotState","slotnumber","stateInt","parseInt","slotcount","stateBin","toString","arr","split","map","Number","stateBinArr","difference","chip","render","body","groupGrid","load","reload","groupState","shouldSetState","item","height","icon","name","margin","changedGroup","includes","push","didSetState"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/Groups/UI/GroupGrid.jsx"],"sourcesContent":["import React from \"react\";\nimport { \n    IonContent,\n    IonCol,\n    IonButton,\n    IonIcon,\n    IonLabel,\n    IonRow,\n    IonGrid,\n    IonRefresher\n   \n\n } from \"@ionic/react\";\nimport { withRouter } from \"react-router\";\nimport {retrieveGroups, retrieveSlots}  from \"../../ServerRequests/globalApi\";\nimport LoadingCards from \"../../MiscUiComponents/LoadingCards\";\nimport DisplayIconComponent from \"../../MiscUiComponents/DisplayIconComponent\";\nimport { chipState , getChipMac} from \"../../ServerRequests/localApi\";\nimport { Socket } from \"net\";\n\n\nvar longPressed = false;\n\n\nclass GroupGrid extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            groups: [],\n            groupsLoaded: false,\n            requestedStateMac: []\n        }\n        this.handleButtonPress = this.handleButtonPress.bind(this)\n        this.handleButtonRelease = this.handleButtonRelease.bind(this)\n    }\n\n  \n//Long Press----------------------------------------------------------------------------\n     \n      handleButtonPress (group) {\n        console.log(\"Pressed:\"+group._id);\n        longPressed = false;\n        this.buttonPressTimer = setTimeout(() => this.longPressed(group), 500);\n      }\n      shortPressed(group)\n      {this.props.isShortPressed(group);}\n\n      longPressed(group)\n      {\n        this.props.isLongPressed(group);\n        longPressed = true;\n      }\n\n      handleButtonRelease (group) {\n        if(!longPressed){ this.shortPressed(group)}\n        clearTimeout(this.buttonPressTimer);\n      }\n//Long Press----------------------------------------------------------------------------\n\n    \n  async getGroups(){\n\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var data = JSON.stringify({homeid: homeid});\n    var groups = JSON.parse(localStorage.getItem(\"groups\"));\n    switch(groups){\n      case null:\n          console.log(\"No groups found in local storage. Attempting to retrieve from cloud storage\"); \n        break;\n      \n\n      case 0:\n          console.log(\"No groups found in local storage. Attempting to retrieve from cloud storage\"); \n        break;\n\n      default:\n      this.setState({groupsLoaded: true, groups: groups});\n      for(var i=0; i<groups.length; i++)\n        {this.setGroupState(groups[i]._id);}\n      this.props.groups(groups);\n      console.log(\"Groups loaded from local storage\"); \n      break;\n\n    }\n   \n    \n    const response = await retrieveGroups(data);\n    if(response !== undefined){\n      console.log(response[0]);\n      switch(response[0].status){\n\n        case 200:\n        this.setState({groupsLoaded: true, groups: response[0].data.groups});\n        //Save in local storage\n        localStorage.setItem(\"groups\", JSON.stringify(response[0].data.groups) );\n        for(var i=0; i<response[0].data.groups.length; i++)\n        {this.setGroupState(response[0].data.groups[i]._id);}\n        this.props.groups(response[0].data.groups);\n        break;\n\n\n          default:\n              this.setState({showToast: true,\n              toastMsg: \"Server Error.\"});\n              this.props.groups([]);\n            break;\n\n      }\n\n      \n      }else{\n        this.setState({groupsLoaded: true,\n          showToast: true,\n          toastMsg: \"Server Error.\"});\n          this.props.groups([]);\n          console.log(\"Could not retrieve groups. Null response\"); \n        }\n\n      }\n\n\n    \n\n\n  \n\n\n\n\n  async setGroupState(groupid){\n\n    this.setState({groupsLoaded: true});\n    this.props.isRetrievingState(true);\n    \n    var groups = JSON.parse(localStorage.getItem(\"groups\"));\n    var group = [];\n    for(var j=0;j<groups.length; j++){\n      if(groups[j]._id === groupid)\n      {group = groups[j];}\n    }\n    var groupSlotCount = group.slots.length;\n    \n    var groupStateInt = 0;\n\n    var macIds = [];\n            console.log(groups);\n            for(var i=0; i< groups.length; i++){\n              for(var j=0; j<groups[i].slots.length; j++){\n                var contains = false;\n                for(var k=0; k<macIds.length; k++)\n                { if(macIds[k]===groups[i].slots[j].mac){contains=true; break;} }\n                if(!contains){macIds[i] = groups[i].slots[j].mac; }\n              }\n            }\n\n            \n    \n    \n     for(var j=0; j<macIds.length; j++){\n      var ip = JSON.parse(localStorage.getItem(macIds[j])).ip;\n      console.log(ip);\n      await this.getStateLocally(ip, macIds[j]);\n     }\n\n      for(var i=0; i< groupSlotCount; i++){\n        \n        if(await this.getSlotState(group.slots[i].slotnumber, group.slots[i].mac) === 0)\n        {groupStateInt++;}\n      }\n    \n    \n\n    switch(groupStateInt){\n      case 0:\n        groupStateInt = 0;\n        break;\n\n      case groupSlotCount:\n        groupStateInt = 2;\n        break;\n\n        default:\n          groupStateInt = 1;\n          break;\n    }\n\n    var groups = this.state.groups;\n    for(var j=0; j<groups.length; j++)\n    {if(groups[j]._id === groupid){ groups[j].state = groupStateInt; }}\n\n    this.setState({groups: groups});\n    this.props.isRetrievingState(false);\n    // console.log(this.state.groups);\n   \n\n    \n\n\n  }\n\n\n  async getSlotState(slotnumber, mac){\n\n   \n    //var ip = JSON.parse(localStorage.getItem(mac)).ip;\n    //await this.getStateLocally(ip, mac);\n \n    \n\n    var stateInt = parseInt(JSON.parse(localStorage.getItem(mac)).state);\n    var slotcount = parseInt(JSON.parse(localStorage.getItem(mac)).slotcount);\n    var stateBin = stateInt.toString(2);\n    var arr = stateBin.split(\"\").map(Number);\n\n\n    \n      var stateBinArr = [];\n      var difference = parseInt(slotcount) - parseInt(arr.length);\n\n      for(var i = 0; i < difference; i++){stateBinArr[i] = 0;}\n      for(var j = 0; j < arr.length; j++){stateBinArr[j+difference] = arr[j]; }\n\n      return stateBinArr[slotnumber-1];\n    \n\n\n  }\n \n\nasync getStateLocally(ip, mac){\n\n        \n// const isIPCorrect = await this.verifyMac(mac);\n// if(isIPCorrect){\n\n    const response = await chipState(ip);\n\n      \n    if(response !== undefined){\n\n      switch(response[0].status){\n\n          case 200:\n            var chip = JSON.parse(localStorage.getItem(mac));\n            chip.state = response[0].data.state;\n            localStorage.setItem(mac, JSON.stringify(chip));\n            break;\n\n            default:\n              console.log(\"Could not get chip state. MAC: \"+mac);\n              // await this.getStateFromCloud(mac);\n              break;\n\n      }\n    }else{             \n          console.log(\"Could not get chip state. MAC: \"+mac);\n          // await this.getStateFromCloud(mac);\n         }\n\n\n\n  // }\n\n}\n\n\n// async getStateFromCloud(mac){\n//   var reqMac = this.state.requestedStateMac;\n//   console.log(reqMac);\n  \n\n//    window.socket.emit(\"broadcast-state\", { mac: mac});\n//    reqMac.push(mac);\n//    console.log(\"Requested broadcast-state\");\n//    this.setState({requestedStateMac: reqMac});\n\n// }\n\n\n\n  // async verifyMac(mac){\n\n  //   var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    \n  //     const response = await getChipMac(IP);\n\n  //     if(response !== undefined){\n\n  //       switch(response[0].status){\n          \n  //         case 200:\n  //           if(response[0].data.mac === mac)\n  //           {return true;}\n  //           else\n  //           {\n  //             console.log(\"Incorrect local IP.\");\n  //             return this.getIPfromCloud(mac)?true:false; \n  //           }\n            \n\n  //         case 404:\n  //           console.log(\"Could not verify local IP. Error:\"+response[0].data);\n  //           return false;\n          \n  //         default :\n  //           console.log(\"Could not verify local IP. Error:\"+response[0].data);\n  //           return false;\n\n  //       }\n  \n   \n  //       }else{return false;}\n\n  // }\n\n  // async getIPfromCloud(mac){\n    \n  //   var data = JSON.stringify({mac: mac});\n  //   console.log(\"Attempting to get new ip of \"+mac);\n\n    \n\n  //   const response = await retrieveSlots(data);\n\n  //   if(response !== undefined){\n  //     console.log(response[0]);\n  //     switch(response[0].status){\n\n  //       case 200:\n  //           var existing = JSON.parse(localStorage.getItem(mac));\n  //           existing.ip = response[0].data.ip;\n  //           localStorage.setItem(mac, JSON.stringify(existing));\n  //           console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n  //           return true;\n          \n\n  //         default:\n  //           console.log(\"Could not retrieve chip ip from cloud.\");\n  //           return false;\n  //         }\n  //       }else{console.log(\"Could not retrieve chip ip from cloud.\"); return false;      }\n        \n    \n  // }\n    \n\n\nrender(){\nlet body;\nlet groupGrid = [];\nlet load = this.props.reload;\nlet groupState = this.props.shouldSetState;\n\n\n\n    if(load){\n      console.log(\"Retrieving Groups...\")\n      this.getGroups();\n      body=(<LoadingCards/>);\n    }else{\n\n            if(this.state.groups.length > 0){\n            groupGrid = (\n                this.state.groups.map((item) =>{\n                  switch(item.state){\n                    case 0:\n                      return(\n                      \n                        <IonCol className=\"group-grid-col\"  size=\"6\"  color=\"dark\">\n                        <IonButton\n                          style={{height: \"100%\"}}\n                          className=\"group-btn-off\"\n                          size=\"large\"\n                          expand=\"block\"\n                          color=\"light-tint\"\n                          onTouchStart={this.handleButtonPress.bind(this, item)}\n                          onTouchEnd={this.handleButtonRelease.bind(this, item)} \n                          >\n                          <DisplayIconComponent\n                            icon={item.icon}\n                            size=\"large\"\n                            className=\"io-icon\"\n                            fill=\"clear\"\n                          />\n\n                          </IonButton>\n                          <br />\n                          <IonLabel class=\"ion-text-center\">{item.name}</IonLabel>\n                        \n                        </IonCol>\n\n                    )\n\n                    case 1:\n                      return(\n                      \n                        <IonCol className=\"group-grid-col\"  size=\"6\" color=\"dark\" >\n                        <IonButton\n                          style={{height: \"100%\"}}\n                          className=\"group-btn-some-on\"\n                          size=\"large\"\n                          expand=\"block\"\n                          color=\"light-tint\"\n                          onTouchStart={this.handleButtonPress.bind(this, item)}\n                          onTouchEnd={this.handleButtonRelease.bind(this, item)} \n                          >\n                          <DisplayIconComponent\n                            icon={item.icon}\n                            size=\"large\"\n                            className=\"io-icon\"\n                            fill=\"clear\"\n                          />\n\n                          </IonButton>\n                          <br />\n                          <IonLabel class=\"ion-text-center\">{item.name}</IonLabel>\n                        \n                        </IonCol>\n\n                        ) \n\n\n                        default:\n                          return(\n                      \n                            <IonCol className=\"group-grid-col\"  size=\"6\">\n                            <IonButton\n                              style={{height: \"100%\"}}\n                              className=\"group-btn-all-on\"\n                              size=\"large\"\n                              expand=\"block\"\n                              color=\"light-tint\"\n                              onTouchStart={this.handleButtonPress.bind(this, item)}\n                              onTouchEnd={this.handleButtonRelease.bind(this, item)} \n                              >\n                              <DisplayIconComponent\n                                icon={item.icon}\n                                size=\"large\"\n                                className=\"io-icon\"\n                                fill=\"clear\"\n                              />\n                              </IonButton>\n                              <br />\n                              <IonLabel class=\"ion-text-center\">{item.name}</IonLabel>\n                            \n                            </IonCol>\n        \n                        )\n                }\n\n              })\n            \n            );\n        }\n\n            body =(\n              \n                  <IonGrid style = {{margin: \"1rem\", height: \"100%\"}}>\n                  <IonRow>\n                  {groupGrid}\n                  </IonRow>\n                \n                  </IonGrid>\n                    \n                );\n            }\n\n            if(groupState!==false){\n              console.log(\"Setting up group state...\"+groupState);\n              let groups = this.state.groups;\n              var changedGroup = [];\n\n               \n                for(var i=0;i<groups.length;i++){\n\n                    \n                        for(var j=0;j<groups[i].slots.length; j++){\n                            if(groups[i].slots[j].mac===groupState.mac)\n                            { \n                              if(!changedGroup.includes(groups[i]._id))\n                                {changedGroup.push(groups[i]._id);}\n                            }\n                         }\n                      \n                  }\n              \n              \n            \n\n              for(var k=0;k<changedGroup.length;k++)\n              { \n                console.log(changedGroup);\n                this.setGroupState(changedGroup[k]);\n              }\n                this.props.didSetState();\n          }\n\n        \n\n    return(body);\n      \n    \n}\n\n}\nexport default withRouter(GroupGrid);\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}