{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\BuilderChip\\\\BuilderChipSetupWifi.jsx\";\nimport React from \"react\";\nimport { IonItem, IonContent, IonGrid, IonRow, IonCol, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonInput, IonToast } from \"@ionic/react\";\nimport { wifi, closeOutline } from \"ionicons/icons\";\nimport \"./BuilderChipSetupWifi.css\";\nimport { changeChipSSID, changeChipPassword, resetChipWifi } from \"../ServerRequests/localApi\";\nvar toastMsg = \"\";\nclass BuilderChipSetupWifi extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      ssid: \"\",\n      pwd: \"\",\n      show: false,\n      settingUp: false,\n      mac: this.props.mac,\n      roomid: this.props.roomid\n    };\n  }\n  handleToast() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n  async nextfn() {\n    //1. Change SSID\n    //2. Change Password\n    //3. Reset WiFI\n    if (!this.state.ssid || !this.state.pwd) {\n      toastMsg = \"No field can be left empty.\";\n      this.handleToast();\n    } else {\n      if (this.state.settingUp) {\n        toastMsg = \"Setting up... Please wait.\";\n        this.handleToast();\n      } else {\n        //Change SSID======================================================================================\n        this.setState({\n          settingUp: true\n        });\n        const responseSSID = await changeChipSSID(this.state.ssid);\n        if (responseSSID !== undefined) {\n          console.log(responseSSID[0]);\n          switch (responseSSID[0].status) {\n            case 200:\n              console.log(\"Chip SSID Set\");\n              break;\n            default:\n              toastMsg = \"SSID could not be changed.\";\n              this.handleToast();\n              this.setState({\n                settingUp: false\n              });\n              break;\n          }\n        } else {\n          this.setState({\n            settingUp: false\n          });\n        }\n\n        //Change Password======================================================================================\n\n        const responsePassword = await changeChipPassword(this.state.pwd);\n        if (responsePassword !== undefined) {\n          console.log(responsePassword[0]);\n          switch (responsePassword[0].status) {\n            case 200:\n              console.log(\"Chip Password Set\");\n              this.props.component({\n                ComponentType: 3,\n                mac: this.state.mac,\n                roomid: this.state.roomid\n              });\n              this.setState({\n                settingUp: false\n              });\n              break;\n            default:\n              toastMsg = \"Password could not be changed.\";\n              this.handleToast();\n              this.setState({\n                settingUp: false\n              });\n              break;\n          }\n        } else {\n          this.setState({\n            settingUp: false\n          });\n        }\n\n        //Reset WiFi======================================================================================\n\n        // const responseReset = await resetChipWifi();\n\n        // if(responseReset !== undefined){\n        //   console.log(responseReset[0]);\n        //   switch(responseReset[0].status){\n\n        //     case 200: \n        //       console.log(\"Chip WiFI reset.\");\n        //       break;\n\n        //       default:\n        //       toastMsg = \"Chip 'Wifi' could not be reset.\";\n        //       this.handleToast();\n        //       break;\n        //     }\n\n        //     this.props.component({ ComponentType: 3});\n        //   }\n\n        //======================================================================================\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, {\n      className: \"modal-bg\"\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      className: \"ion-no-border\"\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      mode: \"ios\"\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      slot: \"secondary\",\n      color: \"light\"\n    }, \"BUILDER CHIP SET-UP\"), /*#__PURE__*/React.createElement(IonButton, {\n      slot: \"end\",\n      size: \"large\",\n      fill: \"light\",\n      onClick: () => this.props.onDidDismiss(true)\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: closeOutline,\n      color: \"light\"\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc_wifi\"\n    }, \"Please enter the credentials of the WiFi network that you would like to set as the Chip's default.\")), /*#__PURE__*/React.createElement(IonButton, {\n      className: \"button_wifi\",\n      size: \"large\",\n      fill: \"clear\"\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      className: \"icon\",\n      icon: wifi\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputFields\"\n    }, /*#__PURE__*/React.createElement(IonItem, null, /*#__PURE__*/React.createElement(IonInput, {\n      placeholder: \"WiFi SSID\",\n      color: \"light\",\n      value: this.state.ssid,\n      onIonChange: data => {\n        this.setState({\n          ssid: data.target.value\n        });\n      }\n    })), /*#__PURE__*/React.createElement(IonItem, null, /*#__PURE__*/React.createElement(IonInput, {\n      placeholder: \"WiFI Password\",\n      color: \"light\",\n      type: \"password\",\n      value: this.state.pwd,\n      onIonChange: data => {\n        this.setState({\n          pwd: data.target.value\n        });\n      }\n    }))), /*#__PURE__*/React.createElement(IonButton, {\n      className: \"button_set\",\n      shape: \"round\",\n      size: \"default\",\n      color: \"light\",\n      onClick: () => this.nextfn()\n    }, \"Set\"), /*#__PURE__*/React.createElement(IonToast, {\n      isOpen: this.state.show,\n      onDidDismiss: () => this.setState({\n        show: false\n      }),\n      message: toastMsg,\n      color: \"light\",\n      duration: 3000\n    }));\n  }\n}\nexport default BuilderChipSetupWifi;","map":{"version":3,"names":["React","IonItem","IonContent","IonGrid","IonRow","IonCol","IonHeader","IonToolbar","IonTitle","IonButton","IonIcon","IonInput","IonToast","wifi","closeOutline","changeChipSSID","changeChipPassword","resetChipWifi","toastMsg","BuilderChipSetupWifi","Component","constructor","props","console","log","state","ssid","pwd","show","settingUp","mac","roomid","handleToast","setState","nextfn","responseSSID","undefined","status","responsePassword","component","ComponentType","render","onDidDismiss","data","target","value"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/BuilderChip/BuilderChipSetupWifi.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  IonItem,\n  IonContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButton,\n  IonIcon,\n  IonInput,\n  IonToast,\n} from \"@ionic/react\";\nimport { wifi, closeOutline } from \"ionicons/icons\";\nimport \"./BuilderChipSetupWifi.css\";\nimport { \n         changeChipSSID,\n         changeChipPassword,\n         resetChipWifi\n       } from \"../ServerRequests/localApi\";\n\nvar toastMsg = \"\";\n\n\n\nclass BuilderChipSetupWifi extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      ssid: \"\",\n      pwd: \"\",\n      show: false,\n      settingUp: false,\n      mac: this.props.mac,\n      roomid: this.props.roomid\n    };\n  } \n\n  handleToast() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n\n\n  async nextfn(){\n\n    //1. Change SSID\n    //2. Change Password\n    //3. Reset WiFI\n    if (!this.state.ssid||!this.state.pwd){\n      toastMsg = \"No field can be left empty.\";\n      this.handleToast();\n  }else{\n    if(this.state.settingUp){\n      toastMsg = \"Setting up... Please wait.\";\n      this.handleToast();\n    }else{\n//Change SSID======================================================================================\n    this.setState({settingUp: true});\n    const responseSSID = await changeChipSSID(this.state.ssid);\n\n    if(responseSSID !== undefined){\n      console.log(responseSSID[0]);\n      switch(responseSSID[0].status){\n        \n        case 200: \n          console.log(\"Chip SSID Set\");\n          break;\n        \n          default:\n          toastMsg = \"SSID could not be changed.\";\n          this.handleToast();\n          this.setState({settingUp: false});\n\n          break;\n        }\n      }else{ this.setState({settingUp: false}); }\n     \n//Change Password======================================================================================\n\n\n    const responsePassword = await changeChipPassword(this.state.pwd);\n\n    if(responsePassword !== undefined){\n      console.log(responsePassword[0]);\n      switch(responsePassword[0].status){\n        \n        case 200: \n          console.log(\"Chip Password Set\");\n          this.props.component({ ComponentType: 3, mac: this.state.mac, roomid: this.state.roomid});\n          this.setState({settingUp: false});\n\n          break;\n        \n          default:\n          toastMsg = \"Password could not be changed.\";\n          this.handleToast();\n          this.setState({settingUp: false});\n\n          break;\n        }\n      }else{ this.setState({settingUp: false}); }\n     \n//Reset WiFi======================================================================================\n\n// const responseReset = await resetChipWifi();\n\n// if(responseReset !== undefined){\n//   console.log(responseReset[0]);\n//   switch(responseReset[0].status){\n    \n//     case 200: \n//       console.log(\"Chip WiFI reset.\");\n//       break;\n    \n//       default:\n//       toastMsg = \"Chip 'Wifi' could not be reset.\";\n//       this.handleToast();\n//       break;\n//     }\n \n//     this.props.component({ ComponentType: 3});\n//   }\n\n//======================================================================================\n  }\n\n }\n}\n\n\n  render() {\n    return (\n      <IonContent className=\"modal-bg\">\n       <IonHeader className=\"ion-no-border\">\n\n          <IonToolbar mode=\"ios\">\n          <IonTitle slot=\"secondary\" color=\"light\" >BUILDER CHIP SET-UP</IonTitle>\n          <IonButton slot=\"end\" size=\"large\"  fill=\"light\"\n          onClick={() => this.props.onDidDismiss(true)}>\n          <IonIcon icon={closeOutline} color=\"light\"></IonIcon>\n          </IonButton>\n          </IonToolbar>\n       \n          <p className=\"desc_wifi\" >\n            Please enter the credentials of the WiFi network that you would like to set as the Chip's default.\n          </p>\n        \n        </IonHeader>\n        \n       \n       \n              <IonButton\n                className=\"button_wifi\"\n                size=\"large\"\n                fill=\"clear\"\n              >\n                <IonIcon className=\"icon\" icon={wifi}></IonIcon>\n              </IonButton>\n           \n           <div className=\"inputFields\">\n           <IonItem >\n            <IonInput\n              placeholder=\"WiFi SSID\"\n              color=\"light\"\n              value={this.state.ssid}\n              onIonChange={(data) => {\n                this.setState({ ssid: data.target.value });\n              }}\n            ></IonInput>\n         </IonItem>\n         <IonItem>\n            <IonInput\n              placeholder=\"WiFI Password\"\n              color=\"light\"\n              type=\"password\"\n              value={this.state.pwd}\n              onIonChange={(data) => {\n                this.setState({ pwd: data.target.value });\n              }}\n            ></IonInput>\n          </IonItem>\n           </div>\n          \n\n        <IonButton\n          className=\"button_set\"\n          shape=\"round\"\n          size=\"default\"\n          color=\"light\"\n          onClick={() => this.nextfn()}\n        >\n          Set\n        </IonButton>\n        <IonToast\n          isOpen={this.state.show}\n          onDidDismiss={() => this.setState({show: false})}\n          message={toastMsg}\n          color=\"light\"\n          duration={3000}\n        />\n      </IonContent>\n    );\n  }\n}\n    \n\nexport default BuilderChipSetupWifi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}