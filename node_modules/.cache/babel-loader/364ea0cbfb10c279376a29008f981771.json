{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\Automation\\\\AutomationPage.jsx\";\nimport { IonPage, IonHeader, IonTitle, IonToolbar, IonMenuButton, IonButtons, IonButton, IonLabel, IonCol, IonCard, IonCardContent, IonGrid, IonCardHeader, IonRow, IonSegment, IonSegmentButton, IonIcon, IonItemDivider, IonContent, IonAlert, IonPopover, IonList, IonToast, IonLoading, IonItem, IonDatetime, IonImg } from \"@ionic/react\";\nimport { trash, timerOutline, personCircleSharp } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport LoadingCards from \"../MiscUiComponents/LoadingCards\";\nimport RepeatSelector from \"./RepeatSelector\";\nimport RepeatDisplay from \"./RepeatDisplay\";\nimport \"./AutomationPage.css\";\nimport TimeInput from 'material-ui-time-picker';\nimport { retrieveSlots } from \"../ServerRequests/globalApi\";\nimport { getTimers, getSchedules, getChipMac, setTimer, setSchedule, deleteTimer, deleteSchedule } from \"../ServerRequests/localApi\";\nimport notFound from \"../../images/device-icons/notFound/notFound.svg\";\nimport DisplayIconComponent from \"../MiscUiComponents/DisplayIconComponent\";\nimport { Plugins } from \"@capacitor/core\";\nconst {\n  Network\n} = Plugins;\nvar auth_token;\nvar IP = \"\";\nvar toastMsg = \"\";\nvar localSockets;\nvar localSocketKeys;\nvar setOnTim;\nvar setOffTim;\nvar timerDur;\nvar repeat = [true, true, true, true, true, true, true];\nclass AutomationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    auth_token = JSON.parse(localStorage.getItem(\"token\"));\n    this.state = {\n      loadingTimers: true,\n      loadingSchedules: true,\n      chips: [],\n      timerData: [],\n      schedulerData: [],\n      showTimDelAlert: false,\n      showSchDelAlert: false,\n      showTimSetAlert: this.props.properties !== undefined ? this.props.properties.showTimSetAlert : undefined,\n      timSetAlertName: this.props.properties !== undefined ? this.props.properties.name : \"Set Timer\",\n      showSchSetAlert: this.props.properties !== undefined ? this.props.properties.showSchSetAlert : undefined,\n      schSetAlertName: this.props.properties !== undefined ? this.props.properties.name : \"Set Schedule\",\n      setMac: this.props.properties !== undefined ? this.props.properties.setMac : \"\",\n      deleteMac: \"\",\n      deleteSlot: \"\",\n      slotsItems: [],\n      IP,\n      displayPage: this.props.properties !== undefined ? this.props.properties.displayPage : \"timers\",\n      repeat: repeat,\n      settingUp: \"NULL\",\n      networkType: undefined,\n      networkConnected: undefined\n    };\n\n    //this.repeatSelector.bind(this);\n  }\n\n  async componentDidMount() {\n    // this.setState({loadingTimers: true, loadingSchedules: true});\n    this.networkStatusSetup();\n    // this.getLocalStorageData();\n    this.getSchedulesLocally();\n    this.getTimersLocally();\n    // this.websocketfn();\n  }\n\n  async networkStatusSetup() {\n    Network.addListener('networkStatusChange', status => {\n      this.setState({\n        networkConnected: status.connected,\n        networkType: status.connectionType\n      });\n      console.log('Network status changed ' + status.connectionType);\n    });\n    const logCurrentNetworkStatus = await Network.getStatus();\n    if (logCurrentNetworkStatus !== undefined) {\n      this.setState({\n        networkConnected: logCurrentNetworkStatus.connected,\n        networkType: logCurrentNetworkStatus.connectionType\n      });\n      console.log('Network status: ' + logCurrentNetworkStatus.connectionType);\n    }\n  }\n\n  // websocketfn() {\n\n  //   var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n  //   var roomIDS = JSON.parse(localStorage.getItem(homeid));\n  //   var rooms = [];\n  //   for(var z=0; z<roomIDS.length; z++)\n  //   { \n  //     if(roomIDS[z] !== null){\n  //       console.log(roomIDS[z]._id);\n  //     var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n  //     if(room !== undefined){rooms.push(room);} \n\n  //     }\n  //   } \n  //   console.log(rooms);\n\n  //   for(var a=0; a<rooms.length; a++){\n  //       var chips = rooms[a];\n\n  //       if(chips !== null){\n  //         for(var b=0;b<chips.length;b++){\n  //           var IP = chips[b].ip;\n  //           localSocketKeys[b] = IP; \n  //           localSockets[b] = new WebSocket(\"ws://\"+IP+\":81/\");\n  //           console.log(\"Local IP:\" + IP);\n\n  //           var ctx = this;\n\n  //           localSocket.onmessage = function (evt) {\n  //             try{\n  //               console.log(evt.data);\n\n  //               var resp = JSON.parse(evt.data);\n\n  //               if (resp) {\n  //                 var type = resp.type;\n  //                 if((type === \"timer\")){\n\n  //                   for(var i=0; i< resp.timers.length; i++){\n  //                     var measuredTime = new Date(null);\n  //                     measuredTime.setSeconds(resp.timers[i]); // specify value of SECONDS\n  //                     var time = measuredTime.toISOString().substr(11, 8);\n  //                     if(resp.timers[i] !== 0){\n\n  //                       let td = ctx.state.timerData;\n  //                       for(var j=0; j< td.length; j++){\n  //                         if((i+1) === td[j].slot){\n  //                           td[j] = {\n  //                             \"mac\": resp.mac,\n  //                             \"slot\": (i+1),\n  //                             \"timer\": time,\n  //                             \"icon\": td[j].icon,\n  //                             \"name\": td[j].name,\n  //                             \"color\": \"primary\" \n  //                           };\n  //                         }\n  //                       }\n\n  //                       ctx.setState({timerData: td });\n\n  //                     }\n  //                   }\n  //                   //console.log(ctx.state.timerData);\n\n  //                 }\n\n  //               }else {\n  //                 toastMsg = \"Could not load timers\";\n  //                 this.handleToast();\n  //               }\n  //             }\n  //             catch(err){ console.log(\"Could not load timer (Parse err)\"+err);}\n\n  //           };\n  //           localSocket.onopen = function (evt) {\n  //             console.log(\"Local WS Open\");\n  //           };\n\n  //           localSocket.onclose = function (evt) {\n  //             console.log(\"Local WS Closed\");\n  //             try{ localSocket = new WebSocket(\"ws://\"+IP+\":81/\");}\n  //             catch(error){console.log(error);}\n  //           };\n\n  //         }\n  //       }\n  //     }\n  // }\n\n  showAlertFn(mac, slot, type) {\n    this.setState({\n      deleteMac: mac\n    });\n    this.setState({\n      deleteSlot: slot\n    });\n    if (type === \"timer\") {\n      this.setState({\n        showTimDelAlert: true,\n        showTimSetAlert: undefined\n      });\n    }\n    if (type === \"schedule\") {\n      this.setState({\n        showSchDelAlert: true,\n        showSchSetAlert: undefined\n      });\n    }\n  }\n  async deleteTimer() {\n    this.setState({\n      showTimDelAlert: false,\n      loadingTimers: true\n    });\n    console.log('Mac:' + this.state.deleteMac + ' Slot:' + this.state.deleteSlot);\n    if (this.verifyMac(this.state.deleteMac)) {\n      var ip = JSON.parse(localStorage.getItem(this.state.deleteMac)).ip;\n      const response = await deleteTimer(ip, this.state.deleteSlot);\n      if (response !== undefined) {\n        switch (response[0].status) {\n          case 200:\n            toastMsg = \"Timer has been deleted.\";\n            this.handleToast();\n            var timerData = this.state.timerData;\n            for (var x = 0; x < timerData.length; x++) {\n              if (timerData[x].mac === this.state.deleteMac && timerData[x].slot === this.state.deleteSlot) {\n                timerData.splice(x, 1);\n              }\n            }\n            this.setState({\n              timerData: timerData,\n              loadingTimers: false\n            });\n            break;\n          default:\n            toastMsg = \"Timer couldn't be deleted.\";\n            this.handleToast();\n            break;\n        }\n      } else {\n        toastMsg = \"Timer couldn't be deleted.\";\n        this.handleToast();\n      }\n    } else {\n      toastMsg = \"Timer couldn't be deleted.\";\n      this.handleToast();\n    }\n  }\n  async deleteSchedule() {\n    this.setState({\n      showSchDelAlert: false,\n      loadingSchedules: true\n    });\n    console.log('Mac:' + this.state.deleteMac + ' Slot:' + this.state.deleteSlot);\n    console.log('Mac:' + this.state.deleteMac + ' Slot:' + this.state.deleteSlot);\n    if (this.verifyMac(this.state.deleteMac)) {\n      var ip = JSON.parse(localStorage.getItem(this.state.deleteMac)).ip;\n      const response = await deleteSchedule(ip, this.state.deleteSlot);\n      if (response !== undefined) {\n        switch (response[0].status) {\n          case 200:\n            toastMsg = \"Schedule has been deleted.\";\n            this.handleToast();\n            var schedulerData = this.state.schedulerData;\n            for (var x = 0; x < schedulerData.length; x++) {\n              if (schedulerData[x].mac === this.state.deleteMac && schedulerData[x].slotnumber === this.state.deleteSlot) {\n                console.log(\"Removing schedule: \" + schedulerData[x]);\n                schedulerData.splice(x, 1);\n              }\n            }\n            this.setState({\n              schedulerData: schedulerData,\n              loadingSchedules: false\n            });\n            break;\n          default:\n            toastMsg = \"Schedule couldn't be deleted.\";\n            this.handleToast();\n            break;\n        }\n      } else {\n        toastMsg = \"Schedule couldn't be deleted.\";\n        this.handleToast();\n      }\n    } else {\n      toastMsg = \"Schedule couldn't be deleted.\";\n      this.handleToast();\n    }\n  }\n  async verifyMac(mac) {\n    var IP = JSON.parse(localStorage.getItem(mac)).ip;\n    const response = await getChipMac(IP);\n    if (response !== undefined) {\n      console.log(response[0]);\n      switch (response[0].status) {\n        case 200:\n          if (response[0].data.mac === mac) {\n            return true;\n          } else {\n            console.log(\"Incorrect local IP.\");\n            this.getIPfromCloud(mac);\n            return false;\n          }\n        case 404:\n          console.log(\"Could not verify local IP. Error:\" + response[0].data);\n          return false;\n        default:\n          console.log(\"Could not verify local IP. Error:\" + response[0].data);\n          return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  async getIPfromCloud(mac) {\n    var data = JSON.stringify({\n      mac: mac\n    });\n    console.log(\"Attempting to get new ip of \" + mac);\n    const response = await retrieveSlots(data);\n    if (response !== undefined) {\n      console.log(response[0]);\n      switch (response[0].status) {\n        case 200:\n          var existing = JSON.parse(localStorage.getItem(mac));\n          existing.ip = response[0].data.ip;\n          localStorage.setItem(mac, existing);\n          console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n          break;\n        default:\n          console.log(\"Could not retrieve chip ip from cloud.\");\n          break;\n      }\n    } else {\n      console.log(\"Could not retrieve chip ip from cloud.\");\n    }\n  }\n  async getSchedulesLocally() {\n    this.setState({\n      loadingSchedules: true\n    });\n\n    //Get all room data from local storage\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n    var rooms = [];\n    for (var z = 0; z < roomIDS.length; z++) {\n      if (roomIDS[z] !== null) {\n        console.log(roomIDS[z]._id);\n        var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n        if (room !== undefined) {\n          rooms.push(room);\n        }\n      }\n    }\n    console.log(rooms);\n    for (var a = 0; a < rooms.length; a++) {\n      var chips = rooms[a];\n      if (chips !== null) {\n        for (var b = 0; b < chips.length; b++) {\n          var ip = chips[b].ip;\n          if (ip !== undefined || this.state.networkType !== \"wifi\") {\n            const response = await getSchedules(ip);\n            if (response !== undefined) {\n              switch (response[0].status) {\n                case 200:\n                  var schedulerData = this.state.schedulerData;\n                  console.log(\"Scheduler: \" + response[0].data.schedules);\n                  for (var i = 0; i < response[0].data.schedules.length; i++) {\n                    //On Time\n                    var sTime = parseInt(response[0].data.schedules[i].substring(0, 4));\n                    var repeatDec = response[0].data.schedules[i].substring(4, 7);\n                    var duration = parseInt(response[0].data.schedules[i].substring(7, 12));\n                    var nextDay = false;\n\n                    //On Time\n\n                    var on_hours = 0;\n                    var on_minutes = 0;\n                    for (var y = 0; y < sTime; y++) {\n                      on_minutes += 1;\n                      if (on_minutes >= 60) {\n                        on_minutes = 0;\n                        on_hours += 1;\n                      }\n                    }\n                    var on_am_pm = on_hours >= 12 ? \"PM\" : \"AM\";\n                    on_hours = on_hours > 12 ? on_hours - 12 : on_hours;\n                    on_hours = on_hours === 0 ? 12 : on_hours;\n                    on_hours = on_hours < 10 ? \"0\" + on_hours : on_hours;\n                    on_minutes = on_minutes < 10 ? \"0\" + on_minutes : on_minutes;\n                    var on_time = on_hours + \":\" + on_minutes + \" \" + on_am_pm;\n\n                    //Repeat\n                    var repeatStr = parseInt(repeatDec).toString(2);\n                    var repeatBin = repeatStr.split(\"\");\n                    console.log(repeatBin);\n                    var difference = 8 - parseInt(repeatBin.length);\n                    var repeat = [];\n                    repeatStr = \"\";\n                    for (var k = 0; k < difference; k++) {\n                      repeatStr += \"0\";\n                    }\n                    for (var j = 0; j < repeatBin.length; j++) {\n                      repeatStr += repeatBin[j];\n                    }\n                    console.log(repeatStr);\n                    repeatBin = repeatStr.split(\"\");\n                    for (var l = 0; l < 7; l++) {\n                      if (repeatBin[l] === \"1\") {\n                        repeat[l] = true;\n                      } else {\n                        repeat[l] = false;\n                      }\n                    }\n\n                    //Off time\n\n                    var offMins = parseInt(sTime) + parseInt(duration);\n                    if (offMins >= 1440) {\n                      console.log(\"Duration\" + (sTime + duration));\n                      nextDay = true;\n                      offMins = parseInt(sTime) + parseInt(duration) - 1440;\n                    }\n                    var off_minutes = 0;\n                    var off_hours = 0;\n                    for (var x = 0; x < offMins; x++) {\n                      off_minutes += 1;\n                      if (off_minutes >= 60) {\n                        off_minutes = 0;\n                        off_hours += 1;\n                      }\n                    }\n                    var off_am_pm = off_hours >= 12 ? \"PM\" : \"AM\";\n                    off_hours = off_hours > 12 ? off_hours - 12 : off_hours;\n                    off_hours = off_hours === 0 ? 12 : off_hours;\n                    off_hours = off_hours < 10 ? \"0\" + off_hours : off_hours;\n                    off_minutes = off_minutes < 10 ? \"0\" + off_minutes : off_minutes;\n                    var off_time = off_hours + \":\" + off_minutes + \" \" + off_am_pm;\n                    if (response[0].data.schedules[i] !== \"0\") {\n                      console.log(\"sTime\" + sTime);\n                      var slotData = this.getSlotsLocally(response[0].data.mac);\n                      console.log(slotData);\n                      var icon = {\n                        iconname: \"LIGHTS\",\n                        int: 1\n                      };\n                      var slotname = \"Device\";\n                      for (var f = 0; f < slotData.length; f++) {\n                        if (i + 1 === slotData[f].slotnumber) {\n                          icon = slotData[f].sloticon;\n                          slotname = slotData[f].slotname;\n                        }\n                      }\n                      var contains = false;\n                      var s_data = {\n                        \"mac\": response[0].data.mac,\n                        \"slotname\": slotname,\n                        \"slotnumber\": i + 1,\n                        \"icon\": icon,\n                        \"on\": on_time,\n                        \"repeat\": repeat,\n                        \"off\": off_time,\n                        \"nextDay\": nextDay\n                      };\n                      for (var x = 0; x < schedulerData.length; x++) {\n                        if (schedulerData[x].mac === s_data.mac && schedulerData[x].slotnumber === s_data.slotnumber) {\n                          schedulerData[x] = s_data;\n                          contains = true;\n                        }\n                      }\n                      if (!contains) {\n                        schedulerData.push(s_data);\n                      }\n                      console.log(s_data);\n                      console.log(schedulerData);\n                    }\n                  }\n                  this.setState({\n                    loadingSchedules: false,\n                    schedulerData: schedulerData\n                  });\n                  console.log(schedulerData);\n                  //localStorage.setItem(\"timers\", JSON.stringify(resp.timers)); \n\n                  break;\n                default:\n                  this.setState({\n                    loadingSchedules: false\n                  });\n                  toastMsg = \"Could not load schedules for \" + rooms[a].name;\n                  this.handleToast();\n                  break;\n              }\n            } else {\n              this.setState({\n                loadingSchedules: false\n              });\n              console.log(\"Could not load schedules for \" + rooms[a].name);\n            }\n          } else {\n            this.getSchedulesFromCloud();\n          }\n        }\n      }\n    }\n    this.setState({\n      loadingSchedules: false\n    });\n  }\n  getLocalStorageData() {\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n    var rooms = [];\n    var timers = [];\n    var schedules = [];\n    for (var z = 0; z < roomIDS.length; z++) {\n      if (roomIDS[z] !== null) {\n        var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n        if (room !== undefined) {\n          rooms.push(room);\n        }\n      }\n    }\n    for (var a = 0; a < rooms.length; a++) {\n      var chips = rooms[a];\n      if (chips != null) {\n        this.setState({\n          chips: chips\n        });\n        for (var b = 0; b < chips.length; b++) {\n          for (var c = 0; c < chips[b].slots.length; c++) {\n            var slot = chips[b].slots[c];\n            if (slot.timerduration !== undefined && slot.timerduration > 0) {\n              var measuredTime = new Date(null);\n              measuredTime.setSeconds(slot.timerduration); // specify value of SECONDS\n              var time = measuredTime.toISOString().substr(11, 8);\n              timers.push({\n                \"mac\": chips[b].mac,\n                \"name\": slot.slotname,\n                \"icon\": slot.sloticon,\n                \"slot\": slot.slotnumber,\n                \"timer\": time\n              });\n            }\n            if (slot.schedule !== undefined && slot.schedule !== \"0\") {\n              //On Time\n              var sTime = parseInt(slot.schedule.substring(0, 4));\n              var repeatDec = slot.schedule.substring(4, 5).charCodeAt();\n              var duration = parseInt(slot.schedule.substring(5, 9));\n              var nextDay = false;\n\n              //On Time\n              var on_hours = 0;\n              var on_minutes = 0;\n              for (var y = 0; y < sTime; y++) {\n                on_minutes += 1;\n                if (on_minutes >= 60) {\n                  on_minutes = 0;\n                  on_hours += 1;\n                }\n              }\n              var on_am_pm = on_hours >= 12 ? \"PM\" : \"AM\";\n              on_hours = on_hours > 12 ? on_hours - 12 : on_hours;\n              on_hours = on_hours === 0 ? 12 : on_hours;\n              on_hours = on_hours < 10 ? \"0\" + on_hours : on_hours;\n              on_minutes = on_minutes < 10 ? \"0\" + on_minutes : on_minutes;\n              var on_time = on_hours + \":\" + on_minutes + \" \" + on_am_pm;\n\n              //Repeat\n              var repeatStr = parseInt(repeatDec).toString(2);\n              var repeatBin = repeatStr.split(\"\");\n              var difference = 8 - parseInt(repeatBin.length);\n              var repeat = [];\n              for (var k = 0; k < difference; k++) {\n                repeatStr += \"0\";\n              }\n              for (var j = 0; j < repeatBin.length; j++) {\n                repeatStr += repeatBin[j];\n              }\n              for (var l = 0; l < 7; l++) {\n                if (repeatBin[l] === \"1\") {\n                  repeat[l] = true;\n                } else {\n                  repeat[l] = false;\n                }\n              }\n\n              //Off time\n\n              var offMins = parseInt(sTime) + parseInt(duration);\n              if (offMins >= 1440) {\n                console.log(\"Duration\" + (sTime + duration));\n                nextDay = true;\n                offMins = parseInt(sTime) + parseInt(duration) - 1440;\n              }\n              var off_minutes = 0;\n              var off_hours = 0;\n              for (var x = 0; x < offMins; x++) {\n                off_minutes += 1;\n                if (off_minutes >= 60) {\n                  off_minutes = 0;\n                  off_hours += 1;\n                }\n              }\n              var off_am_pm = off_hours >= 12 ? \"PM\" : \"AM\";\n              off_hours = off_hours > 12 ? off_hours - 12 : off_hours;\n              off_hours = off_hours === 0 ? 12 : off_hours;\n              off_hours = off_hours < 10 ? \"0\" + off_hours : off_hours;\n              off_minutes = off_minutes < 10 ? \"0\" + off_minutes : off_minutes;\n              var off_time = off_hours + \":\" + off_minutes + \" \" + off_am_pm;\n              schedules.push({\n                \"mac\": chips[b].mac,\n                \"slotname\": slot.slotname,\n                \"slotnumber\": slot.slotnumber,\n                \"icon\": slot.sloticon,\n                \"on\": on_time,\n                \"repeat\": repeat,\n                \"off\": off_time,\n                \"nextDay\": nextDay\n              });\n            }\n          }\n\n          // if(timers.length !== 0)\n          // {this.setState({});}\n          // else{this.getTimersFromCloud();}\n\n          // if(schedules.length !== 0)\n          // {this.setState({});}\n          // else{this.getSchedulesFromCloud();}\n        }\n      }\n    }\n\n    var tData = this.state.timerData;\n    var sData = this.state.schedulerData;\n    if (timers !== undefined) {\n      for (var e = 0; e < timers.length; e++) {\n        tData.push(timers[e]);\n      }\n      this.setState({\n        timerData: timers,\n        loadingTimers: false\n      });\n    }\n    if (schedules !== undefined) {\n      for (var f = 0; f < schedules.length; f++) {\n        sData.push(schedules[f]);\n      }\n      this.setState({\n        schedulerData: sData,\n        loadingSchedules: false\n      });\n    }\n  }\n  getTimersFromCloud() {\n    return 0;\n  }\n  getSchedulesFromCloud() {\n    return 0;\n  }\n  async getTimersLocally() {\n    this.setState({\n      loadingTimers: true\n    });\n    var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n    var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n    var rooms = [];\n    console.log(roomIDS);\n    for (var z = 0; z < roomIDS.length; z++) {\n      if (roomIDS[z] !== null) {\n        var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n        if (room !== undefined) {\n          rooms.push(room);\n        }\n      }\n    }\n    for (var a = 0; a < rooms.length; a++) {\n      var chips = rooms[a];\n      if (chips !== null) {\n        for (var b = 0; b < chips.length; b++) {\n          var ip = chips[b].ip;\n\n          //-----------------------------------------------------------\n          if (ip !== undefined || this.state.networkType !== \"wifi\") {\n            console.log(ip);\n            const response = await getTimers(ip);\n            if (response !== undefined) {\n              switch (response[0].status) {\n                case 200:\n                  var timerData = this.state.timerData;\n                  for (var i = 0; i < response[0].data.timers.length; i++) {\n                    var measuredTime = new Date(null);\n                    measuredTime.setSeconds(response[0].data.timers[i]); // specify value of SECONDS\n                    var time = measuredTime.toISOString().substr(11, 8);\n                    if (response[0].data.timers[i] !== 0) {\n                      var slotData = this.getSlotsLocally(response[0].data.mac);\n                      var icon = {\n                        iconname: \"LIGHTS\",\n                        int: 1\n                      };\n                      var slotname = \"Device\";\n                      for (var f = 0; f < slotData.length; f++) {\n                        if (i + 1 === slotData[f].slotnumber) {\n                          icon = slotData[f].sloticon;\n                          slotname = slotData[f].slotname;\n                        }\n                      }\n                      var contains = false;\n                      var t_data = {\n                        \"mac\": response[0].data.mac,\n                        \"name\": slotname,\n                        \"icon\": icon,\n                        \"slot\": i + 1,\n                        \"timer\": time\n                      };\n                      for (var x = 0; x < timerData.length; x++) {\n                        if (timerData[x].mac === t_data.mac && timerData[x].slot === t_data.slot && timerData[x].time === t_data.time) {\n                          timerData[x] = t_data;\n                          contains = true;\n                        }\n                      }\n                      if (!contains) {\n                        timerData.push(t_data);\n                      }\n                      console.log(t_data);\n                      console.log(timerData);\n                    }\n                  }\n                  this.setState({\n                    loadingTimers: false,\n                    timerData: timerData\n                  });\n                  //localStorage.setItem(\"timers\", JSON.stringify(resp.timers)); \n                  console.log(response[0].data);\n                  break;\n                default:\n                  this.setState({\n                    loadingTimers: false\n                  });\n                  toastMsg = \"Could not load timers stored in \" + rooms[a].name;\n                  this.handleToast();\n                  break;\n              }\n            } else {\n              this.setState({\n                loadingTimers: false\n              });\n              console.log(\"Could not load timer for chip \" + rooms[a].name);\n            }\n          } else {\n            this.getTimersFromCloud();\n          }\n        }\n      }\n    }\n  }\n  timerOnClick() {\n    this.setState({\n      displayPage: \"timers\"\n    });\n  }\n  schedulerOnClick() {\n    this.setState({\n      displayPage: \"schedules\"\n    });\n  }\n  onCardClick(item, slot, type) {\n    if (type === \"scheduler\") {\n      console.log(item);\n      var arr = [];\n      if (this.state.showSchSetAlert !== undefined) {\n        arr = this.state.showSchSetAlert;\n      }\n      arr.push(item);\n      this.setState({\n        showSchSetAlert: arr\n      });\n    }\n    if (type === \"timer\") {\n      var arr = [];\n      if (this.state.showTimSetAlert !== undefined) {\n        arr = this.state.showTimSetAlert;\n      }\n      arr.push(item);\n      console.log(item);\n      this.setState({\n        showTimSetAlert: arr\n      });\n    }\n  }\n  async setTimer() {\n    this.setState({\n      settingUp: \"Setting up Timer(s)...\"\n    });\n    console.log(\"TimerSet:\" + timerDur);\n    console.log(\"showTimSetAlert:\" + JSON.stringify(this.state.showTimSetAlert));\n    var hours = parseFloat(timerDur.split(\":\")[0]);\n    var mins = parseFloat(timerDur.split(\":\")[1]);\n    var secs = parseFloat(timerDur.split(\":\")[2]);\n    hours = hours * 60;\n    secs = secs / 60;\n    var timer_dur = parseFloat(hours + mins + secs).toFixed(3);\n    console.log(\"TimerSet:\" + timer_dur);\n    var loaded = 1;\n    for (var i = 0; i < this.state.showTimSetAlert.length; i++) {\n      this.setState({\n        settingUp: \"Setting up Timer \" + (i + 1) + \" of \" + this.state.showTimSetAlert.length\n      });\n      var slot = this.state.showTimSetAlert[i].slotnumber !== undefined ? this.state.showTimSetAlert[i].slotnumber : this.state.showTimSetAlert[i].slot;\n      console.log(\"showTimSetAlert slotnumber:\" + slot);\n      var mac = this.state.showTimSetAlert[i].mac;\n      var ip = JSON.parse(localStorage.getItem(mac)).ip;\n      const response = await setTimer(ip, timer_dur, slot);\n      if (response !== undefined) {\n        this.setState({\n          settingUp: \"NULL\"\n        });\n        switch (response[0].status) {\n          case 200 || 302:\n            loaded += 1;\n            if (loaded > this.state.showTimSetAlert.length) {\n              this.setState({\n                settingUp: \"NULL\"\n              });\n            } else {\n              this.setState({\n                settingUp: \"Setting up timer \" + loaded + \" of \" + this.state.showTimSetAlert.length\n              });\n            }\n            if (this.state.showTimSetAlert[i].name !== undefined) {\n              toastMsg = \"Timer has been set for device \" + this.state.showTimSetAlert[i].name;\n            } else {\n              toastMsg = \"Timer has been set for device \" + (i + 1);\n            }\n            this.handleToast();\n            this.getTimersLocally();\n            break;\n          default:\n            loaded += 1;\n            if (loaded > this.state.showTimSetAlert.length) {\n              this.setState({\n                settingUp: \"NULL\"\n              });\n            } else {\n              this.setState({\n                settingUp: \"Setting up timer \" + loaded + \" of \" + this.state.showTimSetAlert.length\n              });\n            }\n            toastMsg = \"Couldn't set timer.\";\n            this.handleToast();\n            break;\n        }\n      } else {\n        loaded += 1;\n        if (loaded > this.state.showTimSetAlert.length) {\n          this.setState({\n            settingUp: \"NULL\"\n          });\n        } else {\n          this.setState({\n            settingUp: \"Setting up timer \" + loaded + \" of \" + this.state.showTimSetAlert.length\n          });\n        }\n        toastMsg = \"Couldn't set timer.\";\n        this.handleToast();\n      }\n    }\n    this.setState({\n      displayPage: \"timers\",\n      showTimSetAlert: undefined\n    });\n  }\n  async setSchedule() {\n    this.setState({\n      settingUp: \"Setting Up Schedules(s)...\"\n    });\n    console.log('Mac:' + this.state.setMac + ' Slot:' + this.state.showSchSetAlert);\n    var onMins = setOnTim.getHours() * 60 + setOnTim.getMinutes();\n    var offMins = setOffTim.getHours() * 60 + setOffTim.getMinutes();\n    if (offMins !== onMins) {\n      var duration;\n      if (offMins > onMins) {\n        duration = offMins - onMins;\n      } else {\n        duration = 1440 + (offMins - onMins);\n      }\n      if (onMins < 1000) {\n        if (onMins < 100) {\n          if (onMins < 10) {\n            onMins = \"000\" + onMins;\n          } else {\n            onMins = \"00\" + onMins;\n          }\n        } else {\n          onMins = \"0\" + onMins;\n        }\n      } else {\n        onMins = \"\" + onMins;\n      }\n      if (duration < 1000) {\n        if (duration < 100) {\n          if (duration < 10) {\n            duration = \"000\" + duration;\n          } else {\n            duration = \"00\" + duration;\n          }\n        } else {\n          duration = \"0\" + duration;\n        }\n      } else {\n        duration = \"\" + duration;\n      }\n      var repeatBin = \"\";\n      for (var y = 0; y < 8; y++) {\n        if (y !== 7) {\n          if (this.state.repeat[y]) {\n            repeatBin += \"1\";\n          } else {\n            repeatBin += \"0\";\n          }\n        } else {\n          repeatBin += \"0\";\n        }\n      }\n      var repeatDec = parseInt(repeatBin, 2);\n      var digitLength = repeatDec.toString().length;\n      switch (digitLength) {\n        case 1:\n          repeatDec = \"00\" + repeatDec.toString();\n          break;\n        case 2:\n          repeatDec = \"0\" + repeatDec.toString();\n          break;\n        default:\n          repeatDec = repeatDec.toString();\n          break;\n      }\n      var schedule = onMins + repeatDec + duration;\n      console.log('schedule:' + schedule);\n      var loaded = 1;\n      for (var i = 0; i < this.state.showSchSetAlert.length; i++) {\n        this.setState({\n          settingUp: \"Setting up schedule \" + (i + 1) + \" of \" + this.state.showSchSetAlert.length\n        });\n        var slot = this.state.showSchSetAlert[i];\n        console.log(slot);\n        var mac = slot.mac;\n        var ip = JSON.parse(localStorage.getItem(mac)).ip;\n        var slotnumber = slot.slotnumber !== undefined ? slot.slotnumber : slot.slot;\n        const response = await setSchedule(ip, schedule, slotnumber);\n        if (response !== undefined) {\n          switch (response[0].status) {\n            case 200 || 302:\n              loaded += 1;\n              if (loaded > this.state.showSchSetAlert.length) {\n                this.setState({\n                  settingUp: \"NULL\"\n                });\n              } else {\n                this.setState({\n                  settingUp: \"Setting up schedule \" + loaded + \" of \" + this.state.showSchSetAlert.length\n                });\n              }\n              if (this.state.showSchSetAlert.name !== undefined) {\n                toastMsg = \"Schedule has been set for \" + this.state.showSchSetAlert.name;\n              } else {\n                toastMsg = \"Schedule has been set for device \" + (i + 1);\n              }\n              this.handleToast();\n              this.getSchedulesLocally();\n              break;\n            default:\n              loaded += 1;\n              toastMsg = \"Couldn't set schedule.\";\n              this.handleToast();\n              if (loaded > this.state.showSchSetAlert.length) {\n                this.setState({\n                  settingUp: \"NULL\"\n                });\n              } else {\n                this.setState({\n                  settingUp: \"Setting up schedule \" + (loaded + 1) + \" of \" + this.state.showSchSetAlert.length\n                });\n              }\n              break;\n          }\n        } else {\n          loaded += 1;\n          toastMsg = \"Couldn't set schedule.\";\n          this.handleToast();\n          if (loaded > this.state.showSchSetAlert.length) {\n            this.setState({\n              settingUp: \"NULL\"\n            });\n          } else {\n            this.setState({\n              settingUp: \"Setting up schedule \" + (loaded + 1) + \" of \" + this.state.showSchSetAlert.length\n            });\n          }\n        }\n      }\n      this.setState({\n        displayPage: \"schedules\",\n        showSchSetAlert: undefined\n      });\n    } else {\n      toastMsg = \"'On Time' and 'Off Time' cannot be the same.\";\n      this.handleToast();\n    }\n  }\n  getSlotsLocally(mac) {\n    var unparsedSlots = localStorage.getItem(mac);\n    if (unparsedSlots !== null) {\n      var chip = JSON.parse(unparsedSlots);\n      return chip.slots;\n    } else {\n      this.setState({\n        showToast: true,\n        toastMsg: \"Server Error.\"\n      });\n    }\n  }\n  handleToast() {\n    this.setState({\n      tshow: !this.state.tshow\n    });\n  }\n  render() {\n    let body;\n    if (this.state.displayPage === \"timers\") {\n      if (this.state.loadingTimers) {\n        body = /*#__PURE__*/React.createElement(LoadingCards, null);\n      } else {\n        if (this.state.timerData.length > 0) {\n          body = this.state.timerData.map((item, index) => {\n            return /*#__PURE__*/React.createElement(IonCard, {\n              style: {\n                margin: \"1rem\"\n              }\n            }, /*#__PURE__*/React.createElement(IonCardContent, {\n              style: {\n                fontSize: \"20px\"\n              },\n              icon: item.mac,\n              size: \"medium\",\n              className: \"io-icon\",\n              onClick: () => this.onCardClick(item, item.slot, \"timer\")\n            }, /*#__PURE__*/React.createElement(\"ion-grid\", null, /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              size: \"5\"\n            }, /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\"\n              }\n            }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n              icon: item.icon\n            }))), /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\"\n              },\n              size: \"10\"\n            }, item.name))), /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\"\n              },\n              size: \"7\"\n            }, /*#__PURE__*/React.createElement(IonLabel, {\n              color: item.color !== undefined ? item.color : \"dark\"\n            }, item.timer))), /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                textAlign: \"right\",\n                margin: \"auto\"\n              }\n            }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n              className: \"delete-btn\",\n              onClick: () => this.showAlertFn(item.mac, item.slot, \"timer\")\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: trash,\n              color: \"dark\"\n            })))))));\n          });\n        } else {\n          body = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(IonImg, {\n            className: \"not-found\",\n            src: notFound\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"no-content-msg\"\n          }, \"Did not find any 'Timers'. To set a timer that turns off a device, navigate to the room your device is set-up in then, press and hold the device till a popup appears. Then, select the 'Set Timer' option.\"));\n        }\n      }\n    }\n    if (this.state.displayPage === \"schedules\") {\n      if (this.state.loadingSchedules) {\n        body = /*#__PURE__*/React.createElement(LoadingCards, null);\n      } else {\n        if (this.state.schedulerData.length > 0) {\n          console.log(\"Scheduler Data\" + JSON.stringify(this.state.schedulerData));\n          body = this.state.schedulerData.map((item, index) => {\n            return /*#__PURE__*/React.createElement(IonCard, {\n              style: {\n                margin: \"1rem\"\n              }\n            }, /*#__PURE__*/React.createElement(IonCardContent, {\n              icon: item.mac,\n              className: \"io-icon\",\n              onClick: () => this.onCardClick(item, item.slotnumber, \"scheduler\")\n            }, /*#__PURE__*/React.createElement(\"ion-grid\", null, /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              size: \"4\"\n            }, /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\"\n              }\n            }, /*#__PURE__*/React.createElement(DisplayIconComponent, {\n              icon: item.icon\n            }))), /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", {\n              style: {\n                margin: \"auto\",\n                textAlign: \"center\"\n              },\n              size: \"10\"\n            }, item.slotname))), /*#__PURE__*/React.createElement(\"ion-col\", {\n              size: \"7\"\n            }, /*#__PURE__*/React.createElement(\"ion-row\", {\n              class: \"ion-justify-content-between\",\n              style: {\n                paddingTop: \"1rem\"\n              }\n            }, /*#__PURE__*/React.createElement(\"ion-col\", null, \"On\"), /*#__PURE__*/React.createElement(\"ion-col\", null, item.on)), /*#__PURE__*/React.createElement(IonItemDivider, {\n              mode: \"md\",\n              class: \"ion-align-items-center\"\n            }), /*#__PURE__*/React.createElement(\"ion-row\", {\n              class: \"ion-justify-content-between\",\n              style: {\n                paddingTop: \"2rem\"\n              }\n            }, /*#__PURE__*/React.createElement(\"ion-col\", null, \"Off \", item.nextDay ? \" (Next Day) \" : \"\"), /*#__PURE__*/React.createElement(\"ion-col\", null, item.off)))), /*#__PURE__*/React.createElement(\"ion-row\", null, /*#__PURE__*/React.createElement(\"ion-col\", null, /*#__PURE__*/React.createElement(RepeatDisplay, {\n              repeat: item.repeat\n            })), /*#__PURE__*/React.createElement(\"ion-col\", {\n              size: \"2\"\n            }, /*#__PURE__*/React.createElement(IonButton, {\n              onClick: () => this.showAlertFn(item.mac, item.slotnumber, \"schedule\"),\n              fill: \"clear\"\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: trash,\n              color: \"dark\"\n            })))))));\n          });\n        } else {\n          body = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(IonImg, {\n            className: \"not-found\",\n            src: notFound\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"no-content-msg\"\n          }, \"Did not find any 'Schedules'. To schedule a device, navigate to the room your device is set-up in then, press and hold the device till the popup appears. Then, select the 'Set Schedule' option.\"));\n        }\n      }\n    }\n    return /*#__PURE__*/React.createElement(IonContent, null, /*#__PURE__*/React.createElement(IonHeader, {\n      class: \"ion-no-border\"\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      mode: \"ios\",\n      style: {\n        marginTop: \"5%\",\n        textAlign: \"center\"\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      slot: \"secondary\"\n    }, \"AUTOMATION\")), /*#__PURE__*/React.createElement(IonToolbar, null, /*#__PURE__*/React.createElement(IonSegment, {\n      mode: \"ios\",\n      value: this.state.displayPage,\n      style: {\n        textAlign: \"center\",\n        width: \"80%\",\n        padding: \"1%\"\n      }\n    }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n      type: \"button\",\n      value: \"timers\",\n      onClick: () => this.timerOnClick()\n    }, /*#__PURE__*/React.createElement(IonLabel, null, \"Timer\")), /*#__PURE__*/React.createElement(IonSegmentButton, {\n      type: \"button\",\n      value: \"schedules\",\n      onClick: () => this.schedulerOnClick()\n    }, /*#__PURE__*/React.createElement(IonLabel, null, \"Scheduler\"))))), /*#__PURE__*/React.createElement(IonPopover, {\n      isOpen: this.state.showTimSetAlert !== undefined && !this.state.showTimDelAlert ? true : false,\n      onDidDismiss: () => {\n        this.setState(() => ({\n          showTimSetAlert: undefined\n        }));\n      }\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      color: \"dark\"\n    }, this.state.timSetAlertName), /*#__PURE__*/React.createElement(IonItem, null, /*#__PURE__*/React.createElement(IonLabel, null, \"Timer:\", /*#__PURE__*/React.createElement(\"br\", null), \"(HH:MM:SS)\"), /*#__PURE__*/React.createElement(IonDatetime, {\n      mode: \"ios\",\n      value: \"00:00:00\",\n      onIonChange: e => {\n        timerDur = e.detail.value;\n      },\n      displayFormat: \"HH:mm:ss\"\n    })), /*#__PURE__*/React.createElement(IonButton, {\n      expand: \"block\",\n      shape: \"round\",\n      onClick: () => this.setTimer()\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      style: {\n        padding: \"0.25em\"\n      },\n      icon: timerOutline,\n      size: \"medium\",\n      color: \"light\",\n      className: \"io-icon\"\n    }), \"Set Timer\")), /*#__PURE__*/React.createElement(IonPopover, {\n      mode: \"md\",\n      isOpen: this.state.showSchSetAlert !== undefined && !this.state.showSchDelAlert ? true : false,\n      onDidDismiss: () => this.setState(() => ({\n        showSchSetAlert: undefined\n      }))\n    }, /*#__PURE__*/React.createElement(IonList, {\n      mode: \"md\"\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      \"text-center\": true\n    }, this.state.schSetAlertName), /*#__PURE__*/React.createElement(IonItem, null, \"On Time\", /*#__PURE__*/React.createElement(TimeInput, {\n      mode: \"12h\",\n      onLoad: setOnTim = new Date(),\n      onChange: time => setOnTim = time\n    })), /*#__PURE__*/React.createElement(IonItem, null, \"Off Time\", /*#__PURE__*/React.createElement(TimeInput, {\n      mode: \"12h\",\n      onLoad: setOffTim = new Date(),\n      onChange: time => setOffTim = time\n    })), /*#__PURE__*/React.createElement(IonItem, {\n      lines: \"none\"\n    }, /*#__PURE__*/React.createElement(IonGrid, null, /*#__PURE__*/React.createElement(IonRow, null, /*#__PURE__*/React.createElement(RepeatSelector, {\n      repeat: this.state.repeat\n    })))), /*#__PURE__*/React.createElement(IonButton, {\n      style: {\n        display: \"block\",\n        textAlign: \"center\"\n      },\n      onClick: this.setSchedule.bind(this)\n    }, \"Schedule\"))), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.showTimDelAlert,\n      onDidDismiss: () => this.setState(() => ({\n        showTimDelAlert: false,\n        showTimSetAlert: undefined\n      })),\n      header: 'Timer',\n      message: '<strong>Are you sure you want to delete?</strong>',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: blah => {\n          console.log('Confirm Cancel');\n        }\n      }, {\n        text: 'Okay',\n        handler: () => this.deleteTimer()\n      }]\n    }), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.showSchDelAlert,\n      onDidDismiss: () => this.setState(() => ({\n        showSchDelAlert: false,\n        showSchSetAlert: undefined\n      })),\n      header: 'Scheduler',\n      message: '<strong>Are you sure you want to delete?</strong>',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: blah => {\n          console.log('Confirm Cancel');\n        }\n      }, {\n        text: 'Okay',\n        handler: () => this.deleteSchedule()\n      }]\n    }), /*#__PURE__*/React.createElement(\"ion-scroll\", {\n      scrollable: \"true\"\n    }, body), /*#__PURE__*/React.createElement(IonLoading, {\n      isOpen: this.state.settingUp !== \"NULL\" ? true : false,\n      onDidDismiss: () => this.setState({\n        settingUp: \"NULL\"\n      }),\n      message: this.state.settingUp\n    }), /*#__PURE__*/React.createElement(IonToast, {\n      isOpen: this.state.tshow,\n      onDidDismiss: () => this.handleToast(),\n      message: toastMsg,\n      duration: 3000\n    }));\n  }\n}\nexport default AutomationPage;","map":{"version":3,"names":["IonPage","IonHeader","IonTitle","IonToolbar","IonMenuButton","IonButtons","IonButton","IonLabel","IonCol","IonCard","IonCardContent","IonGrid","IonCardHeader","IonRow","IonSegment","IonSegmentButton","IonIcon","IonItemDivider","IonContent","IonAlert","IonPopover","IonList","IonToast","IonLoading","IonItem","IonDatetime","IonImg","trash","timerOutline","personCircleSharp","React","useState","LoadingCards","RepeatSelector","RepeatDisplay","TimeInput","retrieveSlots","getTimers","getSchedules","getChipMac","setTimer","setSchedule","deleteTimer","deleteSchedule","DisplayIconComponent","Plugins","Network","auth_token","IP","toastMsg","localSockets","localSocketKeys","setOnTim","setOffTim","timerDur","repeat","AutomationPage","Component","constructor","props","JSON","parse","localStorage","getItem","state","loadingTimers","loadingSchedules","chips","timerData","schedulerData","showTimDelAlert","showSchDelAlert","showTimSetAlert","properties","undefined","timSetAlertName","name","showSchSetAlert","schSetAlertName","setMac","deleteMac","deleteSlot","slotsItems","displayPage","settingUp","networkType","networkConnected","componentDidMount","networkStatusSetup","getSchedulesLocally","getTimersLocally","addListener","status","setState","connected","connectionType","console","log","logCurrentNetworkStatus","getStatus","showAlertFn","mac","slot","type","verifyMac","ip","response","handleToast","x","length","splice","slotnumber","data","getIPfromCloud","stringify","existing","setItem","homeid","roomIDS","rooms","z","_id","room","push","a","b","schedules","i","sTime","parseInt","substring","repeatDec","duration","nextDay","on_hours","on_minutes","y","on_am_pm","on_time","repeatStr","toString","repeatBin","split","difference","k","j","l","offMins","off_minutes","off_hours","off_am_pm","off_time","slotData","getSlotsLocally","icon","iconname","int","slotname","f","sloticon","contains","s_data","getSchedulesFromCloud","getLocalStorageData","timers","c","slots","timerduration","measuredTime","Date","setSeconds","time","toISOString","substr","schedule","charCodeAt","tData","sData","e","getTimersFromCloud","t_data","timerOnClick","schedulerOnClick","onCardClick","item","arr","hours","parseFloat","mins","secs","timer_dur","toFixed","loaded","onMins","getHours","getMinutes","digitLength","unparsedSlots","chip","showToast","tshow","render","body","map","index","margin","fontSize","textAlign","color","timer","notFound","paddingTop","on","off","marginTop","width","padding","detail","value","display","bind","text","role","cssClass","handler","blah"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/Automation/AutomationPage.jsx"],"sourcesContent":["import {\n   \n    IonPage,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonMenuButton,\n    IonButtons,\n    IonButton,\n    IonLabel,\n    IonCol,\n    IonCard,\n    IonCardContent,\n    IonGrid,\n    IonCardHeader,\n    IonRow,\n    IonSegment,\n    IonSegmentButton,\n    IonIcon,\n    IonItemDivider,\n    IonContent,\n    IonAlert,\n    IonPopover,\n    IonList,\n    IonToast,\n    IonLoading,\n    IonItem,\n    IonDatetime,\n    IonImg\n\n } from \"@ionic/react\";\n\nimport { trash, timerOutline, personCircleSharp } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport LoadingCards from \"../MiscUiComponents/LoadingCards\";\nimport RepeatSelector from \"./RepeatSelector\";\nimport RepeatDisplay from \"./RepeatDisplay\";\n\nimport \"./AutomationPage.css\"\nimport TimeInput from 'material-ui-time-picker'\nimport { retrieveSlots } from \"../ServerRequests/globalApi\";\nimport { getTimers, getSchedules, getChipMac, setTimer, setSchedule, deleteTimer, deleteSchedule } from \"../ServerRequests/localApi\";\nimport notFound from \"../../images/device-icons/notFound/notFound.svg\";\nimport DisplayIconComponent from \"../MiscUiComponents/DisplayIconComponent\";\nimport { Plugins } from \"@capacitor/core\";\nconst { Network } = Plugins;\n\n\n\n\n\nvar auth_token;\nvar IP = \"\";\nvar toastMsg = \"\";\nvar localSockets;\nvar localSocketKeys;\nvar setOnTim;\nvar setOffTim;\nvar timerDur;\nvar repeat = [true,true,true,true,true,true,true];\n\n\nclass AutomationPage extends React.Component {\n    constructor(props) {\n        super(props);\n        auth_token = JSON.parse(localStorage.getItem(\"token\"));\n\n        \n        \n        this.state = {\n          loadingTimers: true,\n          loadingSchedules: true,\n          chips: [],\n          timerData: [],\n          schedulerData: [],\n          showTimDelAlert:false,\n          showSchDelAlert: false,\n          showTimSetAlert: this.props.properties !== undefined?this.props.properties.showTimSetAlert:undefined,\n          timSetAlertName: this.props.properties !== undefined?this.props.properties.name:\"Set Timer\",\n          showSchSetAlert: this.props.properties !== undefined?this.props.properties.showSchSetAlert:undefined,\n          schSetAlertName: this.props.properties !== undefined?this.props.properties.name:\"Set Schedule\",\n          setMac: this.props.properties !== undefined?this.props.properties.setMac:\"\",\n          deleteMac: \"\",\n          deleteSlot: \"\",\n          slotsItems: [],\n          IP,\n          displayPage: this.props.properties !== undefined?this.props.properties.displayPage:\"timers\",\n          repeat: repeat,\n          settingUp: \"NULL\",\n          networkType: undefined,\n          networkConnected: undefined\n\n        };\n\n        //this.repeatSelector.bind(this);\n\n        \n      }\n\n\n      async componentDidMount() {\n        // this.setState({loadingTimers: true, loadingSchedules: true});\n        this.networkStatusSetup();\n        // this.getLocalStorageData();\n        this.getSchedulesLocally();\n        this.getTimersLocally();\n        // this.websocketfn();\n      }\n\n\n      async networkStatusSetup(){\n        \n        Network.addListener('networkStatusChange', status => {\n          this.setState({networkConnected: status.connected, \n                         networkType: status.connectionType });\n          console.log('Network status changed '+status.connectionType);\n        });\n        \n        const logCurrentNetworkStatus =  await Network.getStatus();\n        if(logCurrentNetworkStatus !==undefined)\n        { this.setState({networkConnected: logCurrentNetworkStatus.connected, \n          networkType: logCurrentNetworkStatus.connectionType });\n          console.log('Network status: '+logCurrentNetworkStatus.connectionType);\n        }\n          \n      \n      }\n\n\n\n\n      // websocketfn() {\n\n\n      //   var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n      //   var roomIDS = JSON.parse(localStorage.getItem(homeid));\n      //   var rooms = [];\n      //   for(var z=0; z<roomIDS.length; z++)\n      //   { \n      //     if(roomIDS[z] !== null){\n      //       console.log(roomIDS[z]._id);\n      //     var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n      //     if(room !== undefined){rooms.push(room);} \n          \n      //     }\n      //   } \n      //   console.log(rooms);\n\n      //   for(var a=0; a<rooms.length; a++){\n      //       var chips = rooms[a];\n\n      //       if(chips !== null){\n      //         for(var b=0;b<chips.length;b++){\n      //           var IP = chips[b].ip;\n      //           localSocketKeys[b] = IP; \n      //           localSockets[b] = new WebSocket(\"ws://\"+IP+\":81/\");\n      //           console.log(\"Local IP:\" + IP);\n            \n      //           var ctx = this;\n            \n      //           localSocket.onmessage = function (evt) {\n      //             try{\n      //               console.log(evt.data);\n\n      //               var resp = JSON.parse(evt.data);\n\n\n      //               if (resp) {\n      //                 var type = resp.type;\n      //                 if((type === \"timer\")){\n\n      //                   for(var i=0; i< resp.timers.length; i++){\n      //                     var measuredTime = new Date(null);\n      //                     measuredTime.setSeconds(resp.timers[i]); // specify value of SECONDS\n      //                     var time = measuredTime.toISOString().substr(11, 8);\n      //                     if(resp.timers[i] !== 0){\n\n      //                       let td = ctx.state.timerData;\n      //                       for(var j=0; j< td.length; j++){\n      //                         if((i+1) === td[j].slot){\n      //                           td[j] = {\n      //                             \"mac\": resp.mac,\n      //                             \"slot\": (i+1),\n      //                             \"timer\": time,\n      //                             \"icon\": td[j].icon,\n      //                             \"name\": td[j].name,\n      //                             \"color\": \"primary\" \n      //                           };\n      //                         }\n      //                       }\n                            \n      //                       ctx.setState({timerData: td });\n\n      //                     }\n      //                   }\n      //                   //console.log(ctx.state.timerData);\n\n      //                 }\n\n\n      //               }else {\n      //                 toastMsg = \"Could not load timers\";\n      //                 this.handleToast();\n      //               }\n      //             }\n      //             catch(err){ console.log(\"Could not load timer (Parse err)\"+err);}\n                \n      //           };\n      //           localSocket.onopen = function (evt) {\n      //             console.log(\"Local WS Open\");\n      //           };\n            \n      //           localSocket.onclose = function (evt) {\n      //             console.log(\"Local WS Closed\");\n      //             try{ localSocket = new WebSocket(\"ws://\"+IP+\":81/\");}\n      //             catch(error){console.log(error);}\n      //           };\n\n\n      //         }\n      //       }\n      //     }\n      // }\n    \n    \n      showAlertFn(mac, slot, type){\n        this.setState({deleteMac: mac});\n        this.setState({deleteSlot: slot});\n        if(type === \"timer\"){this.setState({showTimDelAlert: true, showTimSetAlert: undefined});}\n        if(type === \"schedule\"){this.setState({showSchDelAlert: true, showSchSetAlert: undefined});}  \n      }\n\n  async deleteTimer(){\n        this.setState({showTimDelAlert: false, loadingTimers: true});\n        console.log('Mac:'+this.state.deleteMac+' Slot:'+this.state.deleteSlot);\n        \n        if(this.verifyMac(this.state.deleteMac)){\n\n          var ip = JSON.parse(localStorage.getItem(this.state.deleteMac)).ip;\n          const response = await deleteTimer(ip, this.state.deleteSlot);\n          \n          \n          if(response !== undefined){\n\n            switch(response[0].status){\n\n              case 200:\n                toastMsg = \"Timer has been deleted.\"\n                this.handleToast();\n                var timerData = this.state.timerData;\n\n                  for(var x=0; x<timerData.length; x++){\n                            \n                    if(timerData[x].mac === this.state.deleteMac &&\n                       timerData[x].slot === this.state.deleteSlot)\n                       {timerData.splice(x,1);}\n                  }\n\n                this.setState({timerData: timerData, loadingTimers: false});\n                \n                break;\n  \n              default:\n                toastMsg = \"Timer couldn't be deleted.\"\n                this.handleToast();\n                break;\n\n            }\n\n\n\n          }else{\n            toastMsg = \"Timer couldn't be deleted.\"\n            this.handleToast();\n          }\n\n\n        }else{\n          toastMsg = \"Timer couldn't be deleted.\"\n          this.handleToast();\n        }\n\n  }\n\n\n\n  async deleteSchedule(){\n\n        this.setState({showSchDelAlert: false, loadingSchedules: true});\n        console.log('Mac:'+this.state.deleteMac+' Slot:'+this.state.deleteSlot);\n      \n        console.log('Mac:'+this.state.deleteMac+' Slot:'+this.state.deleteSlot);\n        \n        if(this.verifyMac(this.state.deleteMac)){\n\n          var ip = JSON.parse(localStorage.getItem(this.state.deleteMac)).ip;\n          const response = await deleteSchedule(ip, this.state.deleteSlot);\n          \n          \n          if(response !== undefined){\n\n            switch(response[0].status){\n\n              case 200:\n                toastMsg = \"Schedule has been deleted.\"\n                this.handleToast();\n                var schedulerData = this.state.schedulerData;\n\n                for(var x=0; x<schedulerData.length; x++){\n                          \n                  if(schedulerData[x].mac === this.state.deleteMac &&\n                     schedulerData[x].slotnumber === this.state.deleteSlot)\n                     { console.log(\"Removing schedule: \"+schedulerData[x]);\n                       schedulerData.splice(x,1);}\n                }\n\n                this.setState({schedulerData: schedulerData, loadingSchedules: false});\n                \n                break;\n  \n              default:\n                toastMsg = \"Schedule couldn't be deleted.\"\n                this.handleToast();\n                break;\n\n              }\n\n\n\n          }else{\n            toastMsg = \"Schedule couldn't be deleted.\"\n            this.handleToast();\n          }\n\n\n        }else{\n          toastMsg = \"Schedule couldn't be deleted.\"\n          this.handleToast();\n        }\n      }\n\n\n\n\n      async verifyMac(mac){\n\n       \n        var IP = JSON.parse(localStorage.getItem(mac)).ip;\n        \n          const response = await getChipMac(IP);\n    \n          if(response !== undefined){\n            console.log(response[0]);\n    \n            switch(response[0].status){\n              \n              case 200:\n                if(response[0].data.mac === mac)\n                {return true;}\n                else\n                {\n                  console.log(\"Incorrect local IP.\");\n                  this.getIPfromCloud(mac);\n                  return false;\n                }\n                \n    \n              case 404:\n                console.log(\"Could not verify local IP. Error:\"+response[0].data);\n                return false;\n              \n              default :\n                console.log(\"Could not verify local IP. Error:\"+response[0].data);\n                return false;\n    \n            }\n      \n       \n            }else{return false;}\n    \n      }\n    \n\n      \n  async getIPfromCloud(mac){\n      \n    var data = JSON.stringify({mac: mac});\n    console.log(\"Attempting to get new ip of \"+mac);\n\n    \n\n    const response = await retrieveSlots(data);\n\n    if(response !== undefined){\n      console.log(response[0]);\n      switch(response[0].status){\n\n        case 200:\n            var existing = JSON.parse(localStorage.getItem(mac));\n            existing.ip = response[0].data.ip;\n            localStorage.setItem(mac, existing);\n            console.log(\"Attempt to retrieve ip from cloud sucessful.\");\n          break;\n\n          default:\n            console.log(\"Could not retrieve chip ip from cloud.\");\n            break;\n          }\n        }else{console.log(\"Could not retrieve chip ip from cloud.\");}\n        \n    \n  }\n\n\n\n\n\n      async getSchedulesLocally(){\n\n        this.setState({loadingSchedules: true});\n\n        //Get all room data from local storage\n        var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n        var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n        var rooms = [];\n        for(var z=0; z<roomIDS.length; z++)\n        { \n          if(roomIDS[z] !== null){\n            console.log(roomIDS[z]._id);\n            var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n            if(room !== undefined){rooms.push(room);} \n          }\n        } \n        console.log(rooms);\n\n        for(var a=0; a<rooms.length; a++){\n            var chips = rooms[a];\n\n            if(chips !== null){\n              for(var b=0;b<chips.length;b++){\n                var ip = chips[b].ip;\n  \n  \n    if(ip !== undefined || this.state.networkType !== \"wifi\"){\n  \n          const response = await getSchedules(ip);\n  \n              if(response !== undefined){\n  \n                      switch(response[0].status){\n                        case 200:\n                          var schedulerData = this.state.schedulerData;\n\n                          console.log(\"Scheduler: \"+response[0].data.schedules);\n\n                          for(var i=0; i< response[0].data.schedules.length; i++){\n  \n  \n                            //On Time\n                            var sTime = parseInt(response[0].data.schedules[i].substring(0, 4));\n                            var repeatDec = response[0].data.schedules[i].substring(4, 7);\n                            var duration = parseInt(response[0].data.schedules[i].substring(7, 12));\n                            var nextDay = false; \n\n\n      \n                          //On Time\n                \n                            var on_hours=0;\n                            var on_minutes=0;\n                            for(var y=0;y<sTime;y++)\n                            {\n                              on_minutes += 1;\n                              if(on_minutes >= 60){\n                                on_minutes = 0;\n                                on_hours +=1;\n                              }\n                            }\n      \n                            var on_am_pm = on_hours >= 12 ? \"PM\" : \"AM\";\n                            on_hours = on_hours > 12 ? on_hours - 12 : on_hours;\n                            on_hours = on_hours === 0 ? 12 : on_hours;\n                            on_hours = on_hours < 10 ? \"0\" + on_hours : on_hours;\n                            on_minutes = on_minutes < 10 ? \"0\" + on_minutes : on_minutes;\n                            var on_time = on_hours + \":\" + on_minutes + \" \" + on_am_pm;\n      \n                            \n                          //Repeat\n                          var repeatStr = parseInt(repeatDec).toString(2);\n                          var repeatBin = repeatStr.split(\"\");\n                          console.log(repeatBin);\n                          var difference = 8 - parseInt(repeatBin.length);\n                          \n      \n                          \n                          var repeat = [];\n                          repeatStr = \"\";\n                          for(var k = 0; k < difference; k++){repeatStr += \"0\";}\n                          for(var j = 0; j < repeatBin.length; j++){repeatStr  += repeatBin[j]; }\n                          console.log(repeatStr);\n                          repeatBin = repeatStr.split(\"\");\n                          for(var l = 0; l < 7; l++)\n                          {if(repeatBin[l] === \"1\"){repeat[l] = true;}else{repeat[l] = false;}}\n                          \n      \n      \n                          //Off time\n                          \n                          var offMins = (parseInt(sTime) + parseInt(duration));\n                          \n      \n                            if(offMins >= 1440){\n                              console.log(\"Duration\"+(sTime + duration) );\n                              nextDay = true;\n                              offMins = ((parseInt(sTime) + parseInt(duration))) - 1440;\n                            }\n      \n                          var off_minutes = 0;\n                          var off_hours = 0;\n                          for(var x=0;x<offMins;x++)\n                          {\n                            off_minutes += 1;\n                            if(off_minutes >= 60){\n                              off_minutes = 0;\n                              off_hours +=1;\n                            }\n                          }\n      \n      \n                            var off_am_pm = off_hours >= 12 ? \"PM\" : \"AM\";\n                            off_hours = off_hours > 12 ? off_hours - 12 : off_hours;\n                            off_hours = off_hours === 0 ? 12 : off_hours;\n                            off_hours = off_hours < 10 ? \"0\" + off_hours : off_hours;\n                            off_minutes = off_minutes < 10 ? \"0\" + off_minutes : off_minutes;\n      \n                            var off_time = off_hours + \":\" + off_minutes + \" \" + off_am_pm;\n      \n                            \n      \n      \n                            if(response[0].data.schedules[i] !== \"0\"){\n                              console.log(\"sTime\"+sTime);\n                              \n\n                              var slotData = this.getSlotsLocally(response[0].data.mac);\n                              console.log(slotData);\n                              var icon = {iconname: \"LIGHTS\", int: 1};\n                              var slotname = \"Device\";\n                              \n                              for(var f=0; f<slotData.length; f++){\n                                if((i+1) === slotData[f].slotnumber)\n                                {\n                                  icon = slotData[f].sloticon;\n                                  slotname = slotData[f].slotname;\n                                }\n                              }\n      \n\n                              var contains = false;\n                              var s_data ={\n                                \"mac\": response[0].data.mac,\n                                \"slotname\": slotname,\n                                \"slotnumber\": i+1,\n                                \"icon\": icon,\n                                \"on\": on_time,\n                                \"repeat\": repeat,\n                                \"off\": off_time,\n                                \"nextDay\": nextDay\n      \n                              }\n    \n                              for(var x=0; x<schedulerData.length; x++){\n                                \n                                if(schedulerData[x].mac === s_data.mac &&\n                                  schedulerData[x].slotnumber === s_data.slotnumber)\n                                    {\n                                     schedulerData[x] = s_data;\n                                     contains = true;\n                                    }\n                              }\n    \n    \n                              if(!contains){schedulerData.push(s_data);}\n                              console.log(s_data);\n                              console.log(schedulerData);\n                              \n                            }\n                          }\n                          \n                          this.setState({loadingSchedules: false , schedulerData: schedulerData});\n                          console.log(schedulerData);\n                          //localStorage.setItem(\"timers\", JSON.stringify(resp.timers)); \n                        \n                          break;\n  \n                          default:\n                            this.setState({loadingSchedules: false});\n\n                            toastMsg = \"Could not load schedules for \"+rooms[a].name;\n                            this.handleToast();\n                            break;\n                      }\n  \n                    }else{\n                      this.setState({loadingSchedules: false});\n                      console.log(\"Could not load schedules for \"+rooms[a].name);\n                    }\n  \n  \n                  }else{this.getSchedulesFromCloud();}\n            }\n\n\n              }\n\n            }\n            \n            this.setState({loadingSchedules: false});\n\n      \n\n\n      }\n\n\n      getLocalStorageData(){\n          var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n          var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n          var rooms = [];\n          var timers = [];\n          var schedules = [];\n          for(var z=0; z<roomIDS.length; z++)\n          { \n            if(roomIDS[z] !== null){\n            var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n            if(room !== undefined){rooms.push(room);} \n            }\n\n          } \n         \n\n          for(var a=0; a<rooms.length; a++){\n              var chips = rooms[a];\n              \n              if(chips != null){\n                this.setState({chips: chips});\n                for(var b=0;b<chips.length;b++){\n\n\n                  for(var c=0;c<chips[b].slots.length;c++){\n                    var slot = chips[b].slots[c];\n                    \n                    \n                    \n\n                        if(slot.timerduration !== undefined && slot.timerduration > 0){\n                          var measuredTime = new Date(null);\n                          measuredTime.setSeconds(slot.timerduration); // specify value of SECONDS\n                          var time = measuredTime.toISOString().substr(11, 8);\n                            timers.push({\n                              \"mac\": chips[b].mac,\n                              \"name\": slot.slotname,\n                              \"icon\": slot.sloticon,\n                              \"slot\": slot.slotnumber,\n                              \"timer\": time\n                          });\n                        }\n\n\n\n                        if(slot.schedule !== undefined && slot.schedule !== \"0\"){\n                         \n                          //On Time\n                          var sTime = parseInt(slot.schedule.substring(0, 4));\n                          var repeatDec = slot.schedule.substring(4, 5).charCodeAt();\n                          var duration = parseInt(slot.schedule.substring(5, 9));\n                          var nextDay = false; \n\n\n    \n                        //On Time\n                          var on_hours=0;\n                          var on_minutes=0;\n                          for(var y=0;y<sTime;y++)\n                          {\n                            on_minutes += 1;\n                            if(on_minutes >= 60){\n                              on_minutes = 0;\n                              on_hours +=1;\n                            }\n                          }\n    \n                          var on_am_pm = on_hours >= 12 ? \"PM\" : \"AM\";\n                          on_hours = on_hours > 12 ? on_hours - 12 : on_hours;\n                          on_hours = on_hours === 0 ? 12 : on_hours;\n                          on_hours = on_hours < 10 ? \"0\" + on_hours : on_hours;\n                          on_minutes = on_minutes < 10 ? \"0\" + on_minutes : on_minutes;\n                          var on_time = on_hours + \":\" + on_minutes + \" \" + on_am_pm;\n    \n                          \n                        //Repeat\n                        var repeatStr = parseInt(repeatDec).toString(2);\n                        var repeatBin = repeatStr.split(\"\");\n                        var difference = 8 - parseInt(repeatBin.length);\n    \n    \n                        \n                        var repeat = [];\n    \n                        for(var k = 0; k < difference; k++){repeatStr += \"0\";}\n                        for(var j = 0; j < repeatBin.length; j++){repeatStr  += repeatBin[j]; }\n                        for(var l = 0; l < 7; l++)\n                        {if(repeatBin[l] === \"1\"){repeat[l] = true;}else{repeat[l] = false;}}\n    \n    \n    \n                        //Off time\n                        \n                        var offMins = (parseInt(sTime) + parseInt(duration));\n                        \n    \n                          if(offMins >= 1440){\n                            console.log(\"Duration\"+(sTime + duration) );\n                            nextDay = true;\n                            offMins = ((parseInt(sTime) + parseInt(duration))) - 1440;\n                          }\n    \n                        var off_minutes = 0;\n                        var off_hours = 0;\n                        for(var x=0;x<offMins;x++)\n                        {\n                          off_minutes += 1;\n                          if(off_minutes >= 60){\n                            off_minutes = 0;\n                            off_hours +=1;\n                          }\n                        }\n    \n    \n                          var off_am_pm = off_hours >= 12 ? \"PM\" : \"AM\";\n                          off_hours = off_hours > 12 ? off_hours - 12 : off_hours;\n                          off_hours = off_hours === 0 ? 12 : off_hours;\n                          off_hours = off_hours < 10 ? \"0\" + off_hours : off_hours;\n                          off_minutes = off_minutes < 10 ? \"0\" + off_minutes : off_minutes;\n    \n                          var off_time = off_hours + \":\" + off_minutes + \" \" + off_am_pm;\n\n\n\n                          schedules.push({\n                            \"mac\": chips[b].mac,\n                            \"slotname\": slot.slotname,\n                            \"slotnumber\": slot.slotnumber,\n                            \"icon\": slot.sloticon,\n                            \"on\": on_time,\n                            \"repeat\": repeat,\n                            \"off\": off_time,\n                            \"nextDay\": nextDay\n  \n                          });\n\n                        }\n\n                       \n\n\n                      \n                    }\n\n\n                    \n                 \n                    \n                  \n                  // if(timers.length !== 0)\n                  // {this.setState({});}\n                  // else{this.getTimersFromCloud();}\n\n                  // if(schedules.length !== 0)\n                  // {this.setState({});}\n                  // else{this.getSchedulesFromCloud();}\n                }\n              }\n          }\n\n          var tData = this.state.timerData;\n          var sData = this.state.schedulerData;\n\n          \n\n          if(timers !== undefined){\n          for(var e=0; e<timers.length; e++){tData.push(timers[e]);}\n          this.setState({timerData: timers, loadingTimers: false});\n          }\n\n          if(schedules !== undefined){\n          for(var f=0; f<schedules.length; f++){sData.push(schedules[f]);}\n          this.setState({schedulerData: sData, loadingSchedules: false});\n          }\n\n\n\n      }\n\n\n\n\n       getTimersFromCloud(){\n        return 0;\n      }\n\n\n\n\n\n\n       getSchedulesFromCloud(){return 0;}\n\n\n\n\n     async getTimersLocally(){\n      this.setState({loadingTimers: true});\n      \n      \n      var homeid = JSON.parse(localStorage.getItem(\"homeid\"));\n      var roomIDS = JSON.parse(localStorage.getItem(homeid)).rooms;\n      var rooms = [];\n      console.log(roomIDS);\n      for(var z=0; z<roomIDS.length; z++)\n      { \n        if(roomIDS[z] !== null){\n        var room = JSON.parse(localStorage.getItem(roomIDS[z]._id));\n        if(room !== undefined){rooms.push(room);} \n        }\n      } \n\n      for(var a=0; a<rooms.length; a++){\n        var chips = rooms[a];\n\n        if(chips !== null){\n          for(var b=0;b<chips.length;b++){\n            var ip = chips[b].ip;\n\n    //-----------------------------------------------------------\n    if(ip !== undefined || this.state.networkType !== \"wifi\" ){\n                console.log(ip);\n      const response = await getTimers(ip);\n\n      if(response !== undefined){\n\n              switch(response[0].status){\n                case 200:\n                      var timerData = this.state.timerData;\n                      for(var i=0; i< response[0].data.timers.length; i++){\n                        var measuredTime = new Date(null);\n                        measuredTime.setSeconds(response[0].data.timers[i]); // specify value of SECONDS\n                        var time = measuredTime.toISOString().substr(11, 8);\n                       \n                        if(response[0].data.timers[i] !== 0){\n\n                          var slotData = this.getSlotsLocally(response[0].data.mac);\n                          var icon = {iconname: \"LIGHTS\", int: 1};\n                          var slotname = \"Device\";\n                          \n                          for(var f=0; f<slotData.length; f++){\n                            if((i+1) === slotData[f].slotnumber)\n                            {\n                              icon = slotData[f].sloticon;\n                              slotname = slotData[f].slotname;\n                            }\n                          }\n                          var contains = false;\n                          var t_data ={\n                            \"mac\": response[0].data.mac,\n                            \"name\": slotname,\n                            \"icon\": icon,\n                            \"slot\": (i+1),\n                            \"timer\": time\n                          } \n\n                          for(var x=0; x<timerData.length; x++){\n                            \n                            if(timerData[x].mac === t_data.mac &&\n                               timerData[x].slot === t_data.slot &&\n                               timerData[x].time === t_data.time){\n                                 timerData[x] = t_data;\n                                 contains = true;\n                                }\n                          }\n\n\n                          if(!contains){timerData.push(t_data);}\n                          console.log(t_data);\n                          console.log(timerData);\n                         \n                        }\n                      }\n                      \n                      this.setState({loadingTimers: false, timerData: timerData});\n                      //localStorage.setItem(\"timers\", JSON.stringify(resp.timers)); \n                      console.log(response[0].data);\n                      \n                \n                  break;\n\n                  default:\n                    this.setState({loadingTimers: false});\n                    toastMsg = \"Could not load timers stored in \"+rooms[a].name;\n                    this.handleToast();\n                    break;\n              }\n\n      }else{ \n        this.setState({loadingTimers: false});\n        console.log(\"Could not load timer for chip \"+rooms[a].name); \n      }\n\n\n   }else{this.getTimersFromCloud();}\n  }\n}\n      }\n    }\n\n\n\n\n\n\n     timerOnClick(){this.setState({displayPage: \"timers\"})}\n     schedulerOnClick(){this.setState({displayPage: \"schedules\"})}\n\n     onCardClick(item, slot, type){\n       if(type === \"scheduler\")\n       {\n         console.log(item);\n         var arr = [];\n         if(this.state.showSchSetAlert !== undefined)\n         {arr = this.state.showSchSetAlert;}\n         arr.push(item); \n         this.setState({showSchSetAlert: arr});\n        }\n\n       if(type === \"timer\")\n       {\n         var arr = [];\n         if(this.state.showTimSetAlert !== undefined)\n         {arr = this.state.showTimSetAlert;} \n         arr.push(item);\n         console.log(item);\n         this.setState({showTimSetAlert: arr})\n        }\n\n     }\n\n     async setTimer(){\n       this.setState({settingUp: \"Setting up Timer(s)...\"});\n\n      console.log(\"TimerSet:\"+timerDur);\n      console.log(\"showTimSetAlert:\"+JSON.stringify(this.state.showTimSetAlert));\n      var hours = parseFloat(timerDur.split(\":\")[0]);\n      var mins = parseFloat(timerDur.split(\":\")[1]);\n      var secs = parseFloat(timerDur.split(\":\")[2]);\n      hours = hours * 60;\n      secs = secs/60;\n      var timer_dur = parseFloat(hours+mins+secs).toFixed(3);\n      console.log(\"TimerSet:\"+timer_dur);\n\n      var loaded = 1;\n\n\n        for(var i=0; i<this.state.showTimSetAlert.length; i++){\n          this.setState({settingUp: \"Setting up Timer \"+(i+1)+\" of \"+(this.state.showTimSetAlert.length)});\n\n        var slot = this.state.showTimSetAlert[i].slotnumber !== undefined?this.state.showTimSetAlert[i].slotnumber:this.state.showTimSetAlert[i].slot;\n        console.log(\"showTimSetAlert slotnumber:\"+slot);\n\n\n        var mac = this.state.showTimSetAlert[i].mac;\n        var ip = JSON.parse(localStorage.getItem(mac)).ip;\n\n    \n        \n\n        const response = await setTimer(ip, timer_dur, slot);\n\n        if(response !== undefined){\n          this.setState({settingUp: \"NULL\"});\n\n            switch(response[0].status){\n              case 200 || 302:\n                loaded +=1;\n                if(loaded>this.state.showTimSetAlert.length)\n                {this.setState({settingUp: \"NULL\"});}\n                else\n                {this.setState({settingUp: \"Setting up timer \"+(loaded)+\" of \"+(this.state.showTimSetAlert.length)});}\n                if(this.state.showTimSetAlert[i].name !==undefined)\n                {toastMsg = \"Timer has been set for device \"+this.state.showTimSetAlert[i].name}\n                else{toastMsg = \"Timer has been set for device \"+(i+1);}\n                this.handleToast();\n                this.getTimersLocally();\n                break;\n\n                default:\n                  loaded +=1;\n                  if(loaded>this.state.showTimSetAlert.length)\n                  {this.setState({settingUp: \"NULL\"});}\n                  else\n                  {this.setState({settingUp: \"Setting up timer \"+(loaded)+\" of \"+(this.state.showTimSetAlert.length)});}\n                  toastMsg = \"Couldn't set timer.\";\n                  this.handleToast();\n\n                  break;\n            }\n\n\n        }else{\n          loaded +=1;\n          if(loaded>this.state.showTimSetAlert.length)\n          {this.setState({settingUp: \"NULL\"});}\n          else\n          {this.setState({settingUp: \"Setting up timer \"+(loaded)+\" of \"+(this.state.showTimSetAlert.length)});}\n          toastMsg = \"Couldn't set timer.\"\n          this.handleToast();\n\n\n        }\n\n        \n          \n          \n    \n        }\n\n        this.setState({ displayPage: \"timers\", showTimSetAlert: undefined});\n\n        \n}\n\n\nasync setSchedule(){\n      this.setState({settingUp: \"Setting Up Schedules(s)...\"});\n      console.log('Mac:'+this.state.setMac+' Slot:'+this.state.showSchSetAlert);\n\n\n\n      var onMins = (setOnTim.getHours()*60) + setOnTim.getMinutes();\n      var offMins = (setOffTim.getHours()*60) + setOffTim.getMinutes();\n\n      if(offMins !== onMins){\n        var duration;\n        if(offMins > onMins){duration = offMins - onMins;}\n        else{duration = 1440 + (offMins - onMins);}\n      \n\n      if(onMins < 1000){\n        if(onMins < 100){\n          if(onMins < 10)\n          {onMins = \"000\" + onMins;}\n          else{onMins = \"00\" + onMins;}\n        }else{onMins = \"0\" + onMins;}\n      }else{onMins = \"\"+onMins;}\n\n      if(duration < 1000){\n        if(duration < 100){\n          if(duration < 10)\n          {duration = \"000\" + duration;}\n          else{duration = \"00\" + duration;}\n        }else{duration = \"0\" + duration;}\n      }else{duration = \"\"+duration;}\n     \n\n\n     \n     \n\n     var repeatBin = \"\";\n\n     for(var y=0; y<8; y++){\n       if(y!==7){if(this.state.repeat[y]){repeatBin += \"1\";}else{repeatBin += \"0\";}}\n       else{repeatBin += \"0\";}\n    }\n\n   \n\n    var repeatDec = parseInt(repeatBin, 2);\n    var digitLength = repeatDec.toString().length;\n    switch(digitLength){\n      case 1:\n        repeatDec = \"00\"+repeatDec.toString();\n        break;\n      \n      case 2:\n        repeatDec = \"0\"+repeatDec.toString();\n        break;\n\n      default:\n        repeatDec = repeatDec.toString();\n        break;\n    }\n    var schedule = onMins+repeatDec+duration;\n    console.log('schedule:'+schedule);\n\n    var loaded = 1;\n\n    for(var i=0; i<this.state.showSchSetAlert.length; i++){\n      this.setState({settingUp: \"Setting up schedule \"+(i+1)+\" of \"+(this.state.showSchSetAlert.length)});\n\n      var slot = this.state.showSchSetAlert[i];\n    \n      console.log(slot);\n      \n  \n      var mac = slot.mac;\n      var ip = JSON.parse(localStorage.getItem(mac)).ip;\n\n\n        \n        var slotnumber = slot.slotnumber !== undefined? slot.slotnumber:slot.slot;\n\n        const response = await setSchedule(ip, schedule, slotnumber);\n  \n        if(response !== undefined){\n            switch(response[0].status){\n              case 200 || 302:\n                loaded += 1;\n                if(loaded>this.state.showSchSetAlert.length)\n                {this.setState({settingUp: \"NULL\"});}\n                else\n                {this.setState({settingUp: \"Setting up schedule \"+(loaded)+\" of \"+(this.state.showSchSetAlert.length)});}\n                if(this.state.showSchSetAlert.name !== undefined)\n                {toastMsg = \"Schedule has been set for \"+this.state.showSchSetAlert.name;}\n                else{toastMsg = \"Schedule has been set for device \"+(i+1);}\n                this.handleToast();\n                this.getSchedulesLocally();\n                break;\n  \n                default:\n                  loaded += 1;\n                  toastMsg = \"Couldn't set schedule.\";\n                  this.handleToast();\n                  if(loaded>this.state.showSchSetAlert.length)\n                  {this.setState({settingUp: \"NULL\"});}\n                  else\n                  {this.setState({settingUp: \"Setting up schedule \"+(loaded+1)+\" of \"+(this.state.showSchSetAlert.length)});}\n\n  \n                  break;\n            }\n  \n  \n        }else{\n            loaded += 1;\n            toastMsg = \"Couldn't set schedule.\"\n            this.handleToast();\n            if(loaded>this.state.showSchSetAlert.length)\n            {this.setState({settingUp: \"NULL\"});}\n            else{this.setState({settingUp: \"Setting up schedule \"+(loaded+1)+\" of \"+(this.state.showSchSetAlert.length)});}\n\n        }\n  \n    \n\n    }\n\n    this.setState({ displayPage: \"schedules\", showSchSetAlert: undefined});\n\n\n  }else{ \n    toastMsg = \"'On Time' and 'Off Time' cannot be the same.\";\n    this.handleToast();\n    \n  }\n\n\n\n}\n\n\n\n\n\n\ngetSlotsLocally(mac){\n  var unparsedSlots = localStorage.getItem(mac);\n  if(unparsedSlots !== null){\n    var chip = JSON.parse(unparsedSlots);\n    return chip.slots;\n    \n\n  }else{\n  this.setState({\n    showToast: true,\n    toastMsg: \"Server Error.\"\n  });\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\nhandleToast() {\n  this.setState({\n    tshow: !this.state.tshow\n  });\n}\n\n\n\n\n\n\n\n        render() {\n\n        \n\n            let body;\n            \n            \n              if(this.state.displayPage === \"timers\"){\n\n                if(this.state.loadingTimers){body=(<LoadingCards />);}\n                 else{\n\n                if(this.state.timerData.length > 0){\n             \n                  body=(\n                    this.state.timerData.map((item, index) => {\n                               return (                          \n                                            \n                                       <IonCard style = {{margin: \"1rem\"}}>\n                                        \n                                        <IonCardContent style = {{fontSize : \"20px\"}} \n                                               icon={item.mac}\n                                               size=\"medium\"\n                                               className=\"io-icon\"\n                                               onClick={() => this.onCardClick(item, item.slot, \"timer\")}>\n                                           <ion-grid>\n\n\n                                             <ion-row>\n                                             <ion-col size=\"5\" >\n                                                  <ion-row >\n                                                  <ion-col style={{margin: \"auto\", textAlign: \"center\"}} >\n                                                  <DisplayIconComponent icon={item.icon} />\n                                                  </ion-col>\n                                                  </ion-row>\n\n                                                  <ion-row>\n                                                  <ion-col style={{margin: \"auto\", textAlign: \"center\"}} size=\"10\" >\n                                                    {item.name}\n                                                 </ion-col>\n                                                 </ion-row>\n                                                 \n                                               </ion-col>\n\n\n                                               <ion-col style={{margin: \"auto\", textAlign: \"center\"}} size=\"7\"> \n                                               <IonLabel  color={item.color !== undefined?item.color:\"dark\"}>{item.timer}</IonLabel>\n                                               </ion-col>\n                                              \n                                             </ion-row>\n                                             \n                                            \n                                            \n                                             <ion-row>\n                                             \n                                               \n                                               <ion-col style={{ textAlign: \"right\", margin: \"auto\"}} >\n                                                 <IonSegmentButton\n                                                  className=\"delete-btn\"\n                                                   onClick={() => this.showAlertFn(item.mac, item.slot, \"timer\")}>\n                                                   <IonIcon icon={trash}\n                                                   color=\"dark\"/>\n                                                 </IonSegmentButton>\n                                                \n                                               </ion-col>\n                                             </ion-row>\n                                            \n                                              \n                                             </ion-grid>\n                                        </IonCardContent>\n                                        </IonCard>\n                                     \n                                );\n                      })\n                    );\n                    \n                  }else{\n                    body=(\n                      <div>\n                        <IonImg  className=\"not-found\" src={notFound}>\n\n                        </IonImg>\n                         <p className=\"no-content-msg\">\n                          Did not find any 'Timers'. To set a timer that turns off a device,\n                          navigate to the room your device is set-up in then, \n                          press and hold the device till a popup appears.  \n                          Then, select the 'Set Timer' option.\n                      </p>\n                      </div>\n                     \n\n                    );\n                  }\n\n              }\n            }\n\n\n              if(this.state.displayPage === \"schedules\"){\n\n                if(this.state.loadingSchedules){body=(<LoadingCards />);}\n                else{\n                if(this.state.schedulerData.length > 0){\n                  console.log(\"Scheduler Data\"+JSON.stringify(this.state.schedulerData) );\n                  body=(\n                    this.state.schedulerData.map((item, index) => {\n                               return (                  \n                              \n                                       <IonCard style = {{margin: \"1rem\"}}>\n                                        \n                                        <IonCardContent \n                                               icon={item.mac}\n                                               className=\"io-icon\"\n                                               onClick={() => this.onCardClick(item, item.slotnumber, \"scheduler\")}\n                                             >\n                                           <ion-grid>\n\n\n                                             <ion-row>\n                                               <ion-col size=\"4\" >\n                                                  <ion-row >\n                                                  <ion-col style={{margin: \"auto\", textAlign: \"center\"}} >\n                                                  <DisplayIconComponent icon={item.icon} />\n                                                  </ion-col>\n                                                  </ion-row>\n\n                                                  <ion-row>\n                                                  <ion-col style={{margin: \"auto\", textAlign: \"center\"}} size=\"10\" >\n                                                    {item.slotname}\n                                                 </ion-col>\n                                                 </ion-row>\n                                                 \n                                               </ion-col>\n                                               \n                                             \n                                               \n\n                                               <ion-col size=\"7\" >\n                                                 <ion-row class=\"ion-justify-content-between\" style={{paddingTop: \"1rem\"}}>\n                                                 <ion-col > \n                                                  On\n                                                 </ion-col>\n                                                 <ion-col> \n                                                  {item.on}\n                                                 </ion-col>\n                                                 </ion-row>\n                                                 <IonItemDivider mode=\"md\" class=\"ion-align-items-center\"/>\n                                                 <ion-row class=\"ion-justify-content-between\" style={{paddingTop: \"2rem\"}}>\n                                                 <ion-col> \n                                                  Off {(item.nextDay)?\" (Next Day) \":\"\" }\n                                                 </ion-col>\n                                                 <ion-col > \n                                                  {item.off}\n                                                  </ion-col>\n                                                 </ion-row>\n                                               </ion-col>\n\n \n                                             </ion-row>\n\n                                             <ion-row >\n\n                                             <ion-col> \n                                             <RepeatDisplay repeat={item.repeat} />\n                                             </ion-col>\n\n                                             <ion-col  size=\"2\">\n                                                 <IonButton\n                                                   onClick={() => this.showAlertFn(item.mac, item.slotnumber, \"schedule\")}\n                                                   fill=\"clear\"\n                                                   >\n                                                   <IonIcon icon={trash}\n                                                   color=\"dark\"/>\n                                                 </IonButton>\n                                              </ion-col>\n                                            \n                                                 \n                                                \n                                             </ion-row>\n                                            \n                                             </ion-grid>\n                                        </IonCardContent>\n                                        </IonCard>\n                                     \n                                );\n                    })\n                  );\n    \n                  }else{\n                    body=(\n                      <div>\n                        <IonImg  className=\"not-found\" src={notFound}>\n\n                        </IonImg>\n                         <p className=\"no-content-msg\">\n                          Did not find any 'Schedules'. To schedule a device,\n                          navigate to the room your device is set-up in then, \n                          press and hold the device till the popup appears.  \n                          Then, select the 'Set Schedule' option.\n                      </p>\n                      </div>\n                     \n\n                    );\n                  }\n\n              }\n            }   \n          \n            return (\n              <IonContent>\n\n\n                  <IonHeader class=\"ion-no-border\">\n                      <IonToolbar  mode=\"ios\" style={{marginTop: \"5%\", textAlign: \"center\"}} >\n                    \n\n                        <IonTitle slot=\"secondary\">AUTOMATION</IonTitle>\n                        </IonToolbar>\n                        <IonToolbar>\n                          <IonSegment mode=\"ios\" value={this.state.displayPage} style={{textAlign: \"center\", width: \"80%\", padding: \"1%\"}}>\n                              <IonSegmentButton type=\"button\" value=\"timers\"\n                              onClick={() => this.timerOnClick()}>\n\n                                <IonLabel>Timer</IonLabel>\n                              </IonSegmentButton>\n                              <IonSegmentButton type=\"button\" value=\"schedules\" \n                              onClick={() => this.schedulerOnClick()}\n                              >\n                                <IonLabel>Scheduler</IonLabel>\n                              </IonSegmentButton>\n                            </IonSegment>\n                            </IonToolbar>\n                           \n                           \n\n                    </IonHeader>\n\n                 \n\n                  <IonPopover\n                  isOpen={((this.state.showTimSetAlert !== undefined) && !this.state.showTimDelAlert)?true:false}\n                  onDidDismiss={() => {this.setState(() => ({showTimSetAlert: undefined}));}}>\n                    <IonItem color=\"dark\">{this.state.timSetAlertName}</IonItem>\n                  <IonItem>\n                  <IonLabel>Timer:<br/>(HH:MM:SS)</IonLabel>\n                  <IonDatetime \n                    mode=\"ios\"\n                    value={\"00:00:00\"}\n                    onIonChange={e => {timerDur = e.detail.value}}\n                    displayFormat=\"HH:mm:ss\"\n                    />\n                 </IonItem>\n                    <IonButton\n                    expand=\"block\"\n                    shape=\"round\"\n                    onClick={() => this.setTimer()}>\n                        <IonIcon\n                        style={{padding: \"0.25em\"}}\n                        icon={timerOutline}\n                        size=\"medium\"\n                        color=\"light\"\n                        className=\"io-icon\"\n                          />Set Timer\n                    </IonButton>\n                  </IonPopover>\n              \n\n                  <IonPopover\n                    mode=\"md\"\n                    isOpen={((this.state.showSchSetAlert !== undefined) && !this.state.showSchDelAlert)?true:false}\n                    onDidDismiss={() => this.setState(() => ({showSchSetAlert: undefined}))}>\n                            \n                            <IonList\n                              mode=\"md\">\n                              <IonTitle text-center>{this.state.schSetAlertName}</IonTitle>\n                              <IonItem>\n                                On Time\n                                    <TimeInput\n                                    mode='12h'\n                                    onLoad={setOnTim = new Date()}\n                                    onChange={(time) => setOnTim = time}\n                                  />\n                              </IonItem>\n                              <IonItem >\n                                Off Time\n                                    <TimeInput\n                                    mode='12h'\n                                    onLoad={setOffTim = new Date()}\n                                    onChange={(time) => setOffTim = time}\n                                  />\n                              </IonItem>\n\n                              <IonItem lines=\"none\">\n                              <IonGrid>\n                                    <IonRow>\n                                      <RepeatSelector repeat ={this.state.repeat}/>\n                                    </IonRow>\n                                </IonGrid>\n                                </IonItem>\n                              \n                              <IonButton style={{display:\"block\", textAlign: \"center\"}} onClick={this.setSchedule.bind(this)}>Schedule</IonButton>\n                            </IonList>\n\n                                       \n                                         \n                  </IonPopover>\n                  \n\n                 \n\n\n                  <IonAlert\n                        isOpen={this.state.showTimDelAlert}\n                        onDidDismiss={() => this.setState(() => ({showTimDelAlert: false, showTimSetAlert: undefined}))}\n                        header={'Timer'}\n                        message={'<strong>Are you sure you want to delete?</strong>'}\n                        buttons={[\n                          {\n                            text: 'Cancel',\n                            role: 'cancel',\n                            cssClass: 'secondary',\n                            handler: blah => {\n                              console.log('Confirm Cancel');\n                            }\n                          },\n                          {\n                            text: 'Okay',\n                            handler: () => this.deleteTimer()\n                          }\n                        ]}\n                      />\n\n\n\n                      <IonAlert\n                        isOpen={this.state.showSchDelAlert}\n                        onDidDismiss={() => this.setState(() => ({showSchDelAlert: false, showSchSetAlert: undefined}))}\n                        header={'Scheduler'}\n                        message={'<strong>Are you sure you want to delete?</strong>'}\n                        buttons={[\n                          {\n                            text: 'Cancel',\n                            role: 'cancel',\n                            cssClass: 'secondary',\n                            handler: blah => {\n                              console.log('Confirm Cancel');\n                            }\n                          },\n                          {\n                            text: 'Okay',\n                            handler: () => this.deleteSchedule()\n                          }\n                        ]}\n                      />\n\n                   \n                    <ion-scroll scrollable=\"true\">\n                    {body}\n                    </ion-scroll>\n\n                    <IonLoading\n                    isOpen={this.state.settingUp !== \"NULL\"?true:false}\n                    onDidDismiss={() => this.setState({settingUp: \"NULL\"})}\n                    message={this.state.settingUp}\n                  />\n\n                    <IonToast\n                      isOpen={this.state.tshow}\n                      onDidDismiss={() => this.handleToast()}\n                      message={toastMsg}\n                      duration={3000}\n                    />\n                   \n                 </IonContent>   \n              \n                \n            );\n        }\n}\n\nexport default AutomationPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}