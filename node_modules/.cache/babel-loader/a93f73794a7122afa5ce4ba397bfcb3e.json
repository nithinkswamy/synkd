{"ast":null,"code":"/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = win => {\n  const defaultPlatformMap = new Map();\n  defaultPlatformMap.set('web', {\n    name: 'web'\n  });\n  const capPlatforms = win.CapacitorPlatforms || {\n    currentPlatform: {\n      name: 'web'\n    },\n    platforms: defaultPlatformMap\n  };\n  const addPlatform = (name, platform) => {\n    capPlatforms.platforms.set(name, platform);\n  };\n  const setPlatform = name => {\n    if (capPlatforms.platforms.has(name)) {\n      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n    }\n  };\n  capPlatforms.addPlatform = addPlatform;\n  capPlatforms.setPlatform = setPlatform;\n  return capPlatforms;\n};\nconst initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);\nconst CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst addPlatform = CapacitorPlatforms.addPlatform;\nconst setPlatform = CapacitorPlatforms.setPlatform;\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n  var _a;\n  const config = webPlugin.config;\n  const Plugins = cap.Plugins;\n  if (!config || !config.name) {\n    // TODO: add link to upgrade guide\n    throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n  }\n  // TODO: add link to upgrade guide\n  console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n    // Add the web plugin into the plugins registry if there already isn't\n    // an existing one. If it doesn't already exist, that means\n    // there's no existing native implementation for it.\n    // - OR -\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    Plugins[config.name] = webPlugin;\n  }\n};\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n  constructor(message, code) {\n    super(message);\n    this.message = message;\n    this.code = code;\n  }\n}\nconst getPlatformId = win => {\n  var _a, _b;\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\nconst createCapacitor = win => {\n  var _a, _b, _c, _d, _e;\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  const capPlatforms = win.CapacitorPlatforms;\n  const defaultGetPlatform = () => getPlatformId(win);\n  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n  const defaultIsNativePlatform = () => getPlatformId(win) !== 'web';\n  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n  const defaultIsPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n    return false;\n  };\n  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;\n  const defaultGetPluginHeader = pluginName => {\n    var _a;\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n  const handleError = err => win.console.error(err);\n  const pluginMethodNoop = (_target, prop, pluginName) => {\n    return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n  };\n  const registeredPlugins = new Map();\n  const defaultRegisterPlugin = function (pluginName) {\n    let jsImplementations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const registeredPlugin = registeredPlugins.get(pluginName);\n    if (registeredPlugin) {\n      console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n      return registeredPlugin.proxy;\n    }\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n    const loadPluginImplementation = async () => {\n      if (!jsImplementation && platform in jsImplementations) {\n        jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n      }\n      return jsImplementation;\n    };\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n      }\n    };\n    const createPluginMethodWrapper = prop => {\n      let remove;\n      const wrapper = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n          }\n        });\n        if (prop === 'addListener') {\n          p.remove = async () => remove();\n        }\n        return p;\n      };\n      // Some flair âœ¨\n      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n      const remove = async () => {\n        const callbackId = await call;\n        removeListener({\n          eventName,\n          callbackId\n        }, callback);\n      };\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n      p.remove = async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      };\n      return p;\n    };\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n          case 'toJSON':\n            return () => ({});\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n          case 'removeListener':\n            return removeListener;\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n  // Add in convertFileSrc for web, it will already be available in native context\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.pluginMethodNoop = pluginMethodNoop;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n  // Deprecated props\n  cap.platform = cap.getPlatform();\n  cap.isNative = cap.isNativePlatform();\n  return cap;\n};\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n  constructor(config) {\n    this.listeners = {};\n    this.windowListeners = {};\n    if (config) {\n      // TODO: add link to upgrade guide\n      console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n      this.config = config;\n    }\n  }\n  addListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      this.listeners[eventName] = [];\n    }\n    this.listeners[eventName].push(listenerFunc);\n    // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n    const windowListener = this.windowListeners[eventName];\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n    const remove = async () => this.removeListener(eventName, listenerFunc);\n    const p = Promise.resolve({\n      remove\n    });\n    Object.defineProperty(p, 'remove', {\n      value: async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      }\n    });\n    return p;\n  }\n  async removeAllListeners() {\n    this.listeners = {};\n    for (const listener in this.windowListeners) {\n      this.removeWindowListener(this.windowListeners[listener]);\n    }\n    this.windowListeners = {};\n  }\n  notifyListeners(eventName, data) {\n    const listeners = this.listeners[eventName];\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n  unimplemented() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not implemented';\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n  unavailable() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not available';\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n  async removeListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listenerFunc);\n    this.listeners[eventName].splice(index, 1);\n    // If there are no more listeners for this type of event,\n    // remove the window listener\n    if (!this.listeners[eventName].length) {\n      this.removeWindowListener(this.windowListeners[eventName]);\n    }\n  }\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n}\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };","map":{"version":3,"sources":["../build/platforms.js","../build/legacy/legacy-web-plugin-merge.js","../build/util.js","../build/runtime.js","../build/global.js","../build/web-plugin.js","../build/core-plugins.js"],"names":[],"mappings":"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","sourcesContent":["const createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\nexport const CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\nexport const addPlatform = CapacitorPlatforms.addPlatform;\nexport const setPlatform = CapacitorPlatforms.setPlatform;\n//# sourceMappingURL=platforms.js.map","export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map","export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => getPlatformId(win);\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatformId(win) !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n//# sourceMappingURL=core-plugins.js.map"]},"metadata":{},"sourceType":"module"}