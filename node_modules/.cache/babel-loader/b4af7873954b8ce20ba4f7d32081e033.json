{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\components\\\\withSplashScreen.js\";\nimport React, { Component } from 'react';\nimport '../components/Splash.css';\nimport img1 from \"../images/synkd_logo.png\";\nvar token;\nfunction LoadingMessage() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"splash-screen\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Synk'd\",\n    src: img1,\n    style: {\n      width: \"230px\",\n      height: \"200px\"\n    }\n  }));\n}\nfunction withSplashScreen(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      token = JSON.parse(localStorage.getItem('token'));\n      this.state = {\n        loading: true\n      };\n    }\n    async componentDidMount() {\n      if (token !== '') setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 2000);\n    }\n    render() {\n      // while checking user session, show \"loading\" message\n      if (this.state.loading) return LoadingMessage();\n\n      // otherwise, show the desired route\n      return /*#__PURE__*/React.createElement(WrappedComponent, this.props);\n    }\n  };\n}\nexport default withSplashScreen;","map":{"version":3,"names":["React","Component","img1","token","LoadingMessage","width","height","withSplashScreen","WrappedComponent","constructor","props","JSON","parse","localStorage","getItem","state","loading","componentDidMount","setTimeout","setState","render"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/components/withSplashScreen.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../components/Splash.css';\nimport img1 from \"../images/synkd_logo.png\"\n\nvar token;\n\nfunction LoadingMessage() {\n  return (\n    <div className=\"splash-screen\">\n        <img alt=\"Synk'd\" src={img1} style={{ width: \"230px\", height: \"200px\" }}></img>\n    </div>\n  );\n}\n\nfunction withSplashScreen(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      token = JSON.parse(localStorage.getItem('token'))\n      this.state = {\n        loading: true,\n      };\n    }\n\n    async componentDidMount() {\n           if(token !== '')\n           \n        setTimeout(() => {\n          this.setState({\n            loading: false,\n          });\n        }, 2000) \n    }\n\n    render() {\n      // while checking user session, show \"loading\" message\n      if (this.state.loading) \n      return LoadingMessage();\n\n      // otherwise, show the desired route\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n}\n\nexport default withSplashScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,0BAA0B;AACjC,OAAOC,IAAI,MAAM,0BAA0B;AAE3C,IAAIC,KAAK;AAET,SAASC,cAAc,GAAG;EACxB,oBACE;IAAK,SAAS,EAAC;EAAe,gBAC1B;IAAK,GAAG,EAAC,QAAQ;IAAC,GAAG,EAAEF,IAAK;IAAC,KAAK,EAAE;MAAEG,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ;EAAE,EAAO,CAC7E;AAEV;AAEA,SAASC,gBAAgB,CAACC,gBAAgB,EAAE;EAC1C,OAAO,cAAcP,SAAS,CAAC;IAC7BQ,WAAW,CAACC,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZP,KAAK,GAAGQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MACjD,IAAI,CAACC,KAAK,GAAG;QACXC,OAAO,EAAE;MACX,CAAC;IACH;IAEA,MAAMC,iBAAiB,GAAG;MACnB,IAAGd,KAAK,KAAK,EAAE,EAElBe,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,QAAQ,CAAC;UACZH,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ;IAEAI,MAAM,GAAG;MACP;MACA,IAAI,IAAI,CAACL,KAAK,CAACC,OAAO,EACtB,OAAOZ,cAAc,EAAE;;MAEvB;MACA,oBAAO,oBAAC,gBAAgB,EAAK,IAAI,CAACM,KAAK,CAAI;IAC7C;EACF,CAAC;AACH;AAEA,eAAeH,gBAAgB"},"metadata":{},"sourceType":"module"}