{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nithin.DESKTOP-4GS3RPD\\\\Music\\\\synkd-kasturi\\\\synkd-kasturi\\\\src\\\\pages\\\\BuilderChip\\\\BuilderChipSetupName.jsx\";\nimport React from \"react\";\nimport { IonItem, IonToolbar, IonContent, IonInput, IonTitle, IonHeader, IonButton, IonIcon, IonToast } from \"@ionic/react\";\nimport { hardwareChip, closeOutline } from \"ionicons/icons\";\nimport \"./BuilderChipSetupName.css\";\nimport { createSwitchController } from \"../ServerRequests/globalApi\";\nvar toastMsg = \"\";\nclass BuilderChipSetupName extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      name: \"\",\n      showToast: false,\n      mac: this.props.mac,\n      roomid: this.props.roomid,\n      slotCount: this.props.slotCount === undefined ? 8 : this.props.slotCount\n    };\n  }\n  componentWillReceiveProps(props) {\n    console.log(props);\n    this.setState({\n      mac: props.mac,\n      roomid: props.roomid,\n      slotCount: props.slotCount\n    });\n  }\n  handleToast() {\n    this.setState({\n      showToast: true\n    });\n  }\n  async NextFn() {\n    if (!this.state.name) {\n      toastMsg = \"Name field cannot be left empty.\";\n      this.handleToast();\n    } else {\n      var data = JSON.stringify({\n        mac: this.state.mac,\n        roomid: this.state.roomid,\n        name: this.state.name,\n        slotcount: this.state.slotCount,\n        state: 255\n      });\n      const response = await createSwitchController(data);\n      if (response !== undefined) {\n        console.log(response[0]);\n        switch (response[0].status) {\n          case 200:\n            toastMsg = \"Chip setup successful.\";\n            this.handleToast();\n            this.props.onDidDismiss(true);\n            break;\n          case 500:\n            toastMsg = \"Server Error. Try again later.\";\n            this.handleToast();\n            break;\n          default:\n            toastMsg = \"Could not reach server. Are you sure you're connected to the internet?\";\n            this.handleToast();\n            break;\n        }\n      }\n    }\n  }\n  handleToast() {\n    this.setState({\n      showToast: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, null, /*#__PURE__*/React.createElement(IonHeader, {\n      className: \"ion-no-border\"\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      mode: \"ios\"\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      slot: \"secondary\"\n    }, \"BUILDER CHIP SET-UP\"), /*#__PURE__*/React.createElement(IonButton, {\n      slot: \"end\",\n      size: \"large\",\n      fill: \"clear\",\n      onClick: () => this.props.onDidDismiss(true)\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: closeOutline,\n      color: \"dark\"\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\"\n    }, \"Now, turn on your internet and enter the name for the chip being set up. For example 'Bedside', 'Foyer' or any other name that is relevant.\")), /*#__PURE__*/React.createElement(IonButton, {\n      className: \"button_icon\",\n      color: \"light\",\n      fill: \"clear\"\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      className: \"icon\",\n      icon: hardwareChip\n    })), /*#__PURE__*/React.createElement(IonItem, {\n      className: \"input\"\n    }, /*#__PURE__*/React.createElement(IonInput, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Chip Name\",\n      type: \"text\",\n      inputMode: \"text\",\n      maxlength: \"50\",\n      required: \"true\",\n      value: this.state.name,\n      onIonChange: data => {\n        this.setState({\n          name: data.target.value\n        });\n      }\n    })), /*#__PURE__*/React.createElement(IonButton, {\n      className: \"button_start\",\n      buttonType: \"button\",\n      shape: \"round\",\n      size: \"default\",\n      onClick: () => this.NextFn()\n    }, \"Start\"), /*#__PURE__*/React.createElement(IonToast, {\n      isOpen: this.state.showToast,\n      onDidDismiss: () => this.setState({\n        showToast: false\n      }),\n      message: toastMsg,\n      duration: 3000\n    }));\n  }\n}\nexport default BuilderChipSetupName;","map":{"version":3,"names":["React","IonItem","IonToolbar","IonContent","IonInput","IonTitle","IonHeader","IonButton","IonIcon","IonToast","hardwareChip","closeOutline","createSwitchController","toastMsg","BuilderChipSetupName","Component","constructor","props","console","log","state","name","showToast","mac","roomid","slotCount","undefined","componentWillReceiveProps","setState","handleToast","NextFn","data","JSON","stringify","slotcount","response","status","onDidDismiss","render","color","target","value"],"sources":["C:/Users/Nithin.DESKTOP-4GS3RPD/Music/synkd-kasturi/synkd-kasturi/src/pages/BuilderChip/BuilderChipSetupName.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n    IonItem,\n    IonToolbar,\n    IonContent,\n    IonInput,\n    IonTitle,\n    IonHeader,\n    IonButton,\n    IonIcon,\n    IonToast\n      } from \"@ionic/react\";\n  import { hardwareChip, closeOutline } from \"ionicons/icons\";\n  import \"./BuilderChipSetupName.css\";\nimport { createSwitchController } from \"../ServerRequests/globalApi\";\n\n\n\nvar toastMsg=\"\";\n\n\nclass BuilderChipSetupName extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        console.log(props);\n\n        this.state = {\n            name: \"\",\n            showToast: false,\n            mac: this.props.mac,\n            roomid: this.props.roomid,\n            slotCount: this.props.slotCount === undefined?8:this.props.slotCount\n        }\n    }\n\n    componentWillReceiveProps(props){\n            console.log(props);\n            this.setState({mac: props.mac, roomid: props.roomid, slotCount: props.slotCount});\n    }\n\n    handleToast() {\n      this.setState({\n        showToast: true\n      });\n    }\n\n   async NextFn(){\n        if (!this.state.name){\n            toastMsg = \"Name field cannot be left empty.\";\n            this.handleToast();\n        }else{\n\n            var data = JSON.stringify({mac: this.state.mac, roomid: this.state.roomid, name: this.state.name, slotcount: this.state.slotCount, state: 255 });\n            const response = await createSwitchController(data);\n\n            if(response !== undefined){\n                console.log(response[0]);\n                switch(response[0].status){\n          \n                  case 200:\n                      toastMsg = \"Chip setup successful.\";\n                      this.handleToast();\n                      this.props.onDidDismiss(true);\n                      \n                      break;\n\n                  case 500:\n                    toastMsg = \"Server Error. Try again later.\";\n                    this.handleToast();\n                    break;\n\n                      default:\n                        toastMsg = \"Could not reach server. Are you sure you're connected to the internet?\";\n                        this.handleToast();\n                        break;\n                }\n            }\n\n        }\n    }\n\n\n    handleToast(){\n        this.setState({showToast: true});\n\n    }\n\n\n\n\n    render(){\n        return(\n        <IonContent>\n           <IonHeader className=\"ion-no-border\">\n\n           <IonToolbar mode=\"ios\">\n            <IonTitle slot=\"secondary\">BUILDER CHIP SET-UP</IonTitle>\n            <IonButton slot=\"end\" size=\"large\"  fill=\"clear\"\n            onClick={() => this.props.onDidDismiss(true)}>\n            <IonIcon icon={closeOutline} color=\"dark\"></IonIcon>\n            </IonButton>\n            </IonToolbar>\n\n            <p className=\"desc\">\n              Now, turn on your internet and enter the name for the chip being set up. For example 'Bedside', 'Foyer' or any other name that is relevant.\n            </p>\n          </IonHeader>\n         \n          <IonButton\n                className=\"button_icon\"\n                color=\"light\"\n                fill=\"clear\"\n              >\n                <IonIcon className=\"icon\"  icon={hardwareChip}></IonIcon>\n              </IonButton>\n              <IonItem  className=\"input\">\n                <IonInput\n                style={{ color: \"black\" }}\n                placeholder=\"Chip Name\"\n                type=\"text\"\n                inputMode=\"text\"\n                maxlength=\"50\"\n                required=\"true\"\n                value={this.state.name}\n                onIonChange={(data) => {\n                  this.setState({ name: data.target.value });\n                }}\n              ></IonInput>\n              </IonItem>\n              <IonButton\n                className=\"button_start\"\n                buttonType=\"button\"\n                shape=\"round\"\n                size=\"default\"\n                \n                onClick={() => this.NextFn()}\n              >\n                Start\n              </IonButton>\n            \n\n            \n         \n\n          <IonToast\n            isOpen={this.state.showToast}\n            onDidDismiss={() => this.setState({showToast: false})}\n            message={toastMsg}\n            duration={3000}\n          />\n          </IonContent>);\n    }\n}\n\nexport default BuilderChipSetupName;"],"mappings":"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"},"metadata":{},"sourceType":"module"}